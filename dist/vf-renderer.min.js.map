{"version":3,"sources":["webpack://vf/webpack/universalModuleDefinition","webpack://vf/webpack/bootstrap","webpack://vf/./src/const.js","webpack://vf/./src/math/index.js","webpack://vf/./src/settings.js","webpack://vf/./src/utils/index.js","webpack://vf/./node_modules/vf-gl-core/dist/vf-gl-core.min.js","webpack://vf/./node_modules/eventemitter3/index.js","webpack://vf/./src/textures/BaseTexture.js","webpack://vf/./src/renderer/managers/WebGLManager.js","webpack://vf/./src/math/Point.js","webpack://vf/./src/math/Matrix.js","webpack://vf/./src/math/shapes/Rectangle.js","webpack://vf/./src/display/Container.js","webpack://vf/./node_modules/bit-twiddle/twiddle.js","webpack://vf/./src/textures/Texture.js","webpack://vf/./src/renderer/utils/RenderTarget.js","webpack://vf/./src/math/GroupD8.js","webpack://vf/./src/display/DisplayObject.js","webpack://vf/./src/display/TransformBase.js","webpack://vf/./src/renderer/utils/ObjectRenderer.js","webpack://vf/./src/renderer/WebGLRenderer.js","webpack://vf/./src/utils/createIndicesForQuads.js","webpack://vf/./src/Shader.js","webpack://vf/./src/index.js","webpack://vf/./src/math/ObservablePoint.js","webpack://vf/./src/math/shapes/Circle.js","webpack://vf/./src/math/shapes/Ellipse.js","webpack://vf/./src/math/shapes/Polygon.js","webpack://vf/./src/math/shapes/RoundedRectangle.js","webpack://vf/./src/utils/maxRecommendedTextures.js","webpack://vf/./src/utils/canUploadSameBuffer.js","webpack://vf/./src/display/TransformStatic.js","webpack://vf/./src/display/Transform.js","webpack://vf/./src/display/Bounds.js","webpack://vf/./src/utils/pluginTarget.js","webpack://vf/./src/utils/mixin.js","webpack://vf/./node_modules/remove-array-items/index.js","webpack://vf/./src/utils/mapPremultipliedBlendModes.js","webpack://vf/./src/utils/determineCrossOrigin.js","webpack://vf/./node_modules/url/url.js","webpack://vf/./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack://vf/(webpack)/buildin/module.js","webpack://vf/(webpack)/buildin/global.js","webpack://vf/./node_modules/url/util.js","webpack://vf/./node_modules/querystring-es3/index.js","webpack://vf/./node_modules/querystring-es3/decode.js","webpack://vf/./node_modules/querystring-es3/encode.js","webpack://vf/./src/textures/TextureUvs.js","webpack://vf/./src/sprites/Sprite.js","webpack://vf/./src/sprites/SpriteRenderer.js","webpack://vf/./src/renderer/SystemRenderer.js","webpack://vf/./src/textures/RenderTexture.js","webpack://vf/./src/textures/BaseRenderTexture.js","webpack://vf/./src/renderer/managers/MaskManager.js","webpack://vf/./src/renderer/filters/spriteMask/SpriteMaskFilter.js","webpack://vf/./src/renderer/filters/Filter.js","webpack://vf/./src/renderer/filters/extractUniformsFromSrc.js","webpack://vf/./src/textures/TextureMatrix.js","webpack://vf/./src/renderer/filters/spriteMask/spriteMaskFilter.vert","webpack://vf/./src/renderer/filters/spriteMask/spriteMaskFilter.frag","webpack://vf/./src/renderer/managers/StencilManager.js","webpack://vf/./src/renderer/managers/FilterManager.js","webpack://vf/./src/renderer/utils/Quad.js","webpack://vf/./src/renderer/filters/filterTransforms.js","webpack://vf/./src/renderer/TextureManager.js","webpack://vf/./src/renderer/TextureGarbageCollector.js","webpack://vf/./src/renderer/WebGLState.js","webpack://vf/./src/renderer/utils/mapWebGLBlendModesToPixi.js","webpack://vf/./src/renderer/utils/mapWebGLDrawModesToPixi.js","webpack://vf/./src/renderer/utils/validateContext.js","webpack://vf/./src/sprites/generateMultiTextureShader.js","webpack://vf/./src/sprites/texture.vert","webpack://vf/./node_modules/path-browserify/index.js","webpack://vf/./node_modules/process/browser.js","webpack://vf/./src/renderer/utils/checkMaxIfStatmentsInShader.js","webpack://vf/./src/sprites/BatchBuffer.js","webpack://vf/./src/ticker/index.js","webpack://vf/./src/ticker/Ticker.js","webpack://vf/./src/ticker/TickerListener.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VERSION","PI_2","Math","PI","RAD_TO_DEG","DEG_TO_RAD","RENDERER_TYPE","UNKNOWN","WEBGL","CANVAS","BLEND_MODES","NORMAL","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","NORMAL_NPM","ADD_NPM","SCREEN_NPM","DRAW_MODES","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","SCALE_MODES","LINEAR","NEAREST","WRAP_MODES","CLAMP","REPEAT","MIRRORED_REPEAT","GC_MODES","AUTO","MANUAL","URL_FILE_EXTENSION","DATA_URI","SVG_SIZE","SHAPES","POLY","RECT","CIRC","ELIP","RREC","PRECISION","LOW","MEDIUM","HIGH","TRANSFORM_MODE","STATIC","DYNAMIC","TEXT_GRADIENT","LINEAR_VERTICAL","LINEAR_HORIZONTAL","UPDATE_PRIORITY","INTERACTION","UTILITY","default","TARGET_FPMS","MIPMAP_TEXTURES","RESOLUTION","FILTER_RESOLUTION","SPRITE_MAX_TEXTURES","_maxRecommendedTextures2","SPRITE_BATCH_SIZE","RETINA_PREFIX","RENDER_OPTIONS","view","antialias","forceFXAA","autoResize","transparent","backgroundColor","clearBeforeRender","preserveDrawingBuffer","roundPixels","width","height","legacy","GC_MODE","GC_MAX_IDLE","GC_MAX_CHECK_COUNT","WRAP_MODE","SCALE_MODE","PRECISION_VERTEX","PRECISION_FRAGMENT","CAN_UPLOAD_SAME_BUFFER","_canUploadSameBuffer2","MESH_CANVAS_PADDING","uid","nextUid","hex2rgb","hex","out","hex2string","toString","substr","length","rgb2hex","rgb","getResolutionOfUrl","url","defaultValue","resolution","settings","exec","parseFloat","undefined","decomposeDataUri","dataUri","dataUriMatch","mediaType","toLowerCase","subType","charset","encoding","data","getUrlFileExtension","extension","getSvgSize","svgString","sizeMatch","size","round","skipHello","saidHello","sayHello","type","navigator","userAgent","indexOf","args","console","log","apply","isWebGLSupported","contextOptions","stencil","failIfMajorPerformanceCaveat","WebGLRenderingContext","canvas","document","createElement","gl","getContext","success","getContextAttributes","loseContext","getExtension","e","sign","destroyTextureCache","TextureCache","destroy","BaseTextureCache","clearTextureCache","correctBlendMode","blendMode","premultiplied","premultiplyBlendMode","premultiplyTint","tint","alpha","R","G","B","premultiplyRgba","premultiply","Float32Array","premultiplyTintToRgba","_const","mixins","removeItems","EventEmitter","pluginTarget","_mapPremultipliedBlendModes2","a","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","keys","tempAttribState","attribState","attribute","location","enableVertexAttribArray","disableVertexAttribArray","this","texture","createTexture","mipmap","premultiplyAlpha","format","RGBA","UNSIGNED_BYTE","upload","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","videoWidth","videoHeight","texImage2D","TEXTURE_2D","texSubImage2D","uploadData","Error","activeTexture","TEXTURE0","bindTexture","unbind","minFilter","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","magFilter","TEXTURE_MAG_FILTER","enableMipmap","generateMipmap","enableLinearScaling","enableNearestScaling","enableWrapClamp","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enableWrapRepeat","enableWrapMirrorRepeat","deleteTexture","fromSource","fromData","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","u","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","error","VALIDATE_STATUS","getError","getProgramInfoLog","warn","deleteProgram","deleteShader","f","vertexAttribPointer","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","pointer","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","bool","bvec2","bvec3","bvec4","mat2","mat3","mat4","sampler2D","ACTIVE_UNIFORMS","getActiveUniform","replace","getUniformLocation","Array","Int32Array","substring","uniform1f","uniform2f","uniform3f","uniform4f","uniform1i","uniform2i","uniform3i","uniform4i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform2iv","uniform3iv","uniform4iv","h","split","set","createContext","setVertexAttribArrays","GLBuffer","GLFramebuffer","GLShader","GLTexture","VertexArrayObject","shader","vf","glCore","ArrayBuffer","buffer","createBuffer","ARRAY_BUFFER","drawType","STATIC_DRAW","_updateID","byteLength","bufferSubData","bufferData","bindBuffer","createVertexBuffer","createIndexBuffer","ELEMENT_ARRAY_BUFFER","deleteBuffer","framebuffer","createFramebuffer","enableTexture","framebufferTexture2D","FRAMEBUFFER","COLOR_ATTACHMENT0","enableStencil","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","renderbufferStorage","DEPTH_STENCIL","clear","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","bindFramebuffer","resize","deleteFramebuffer","createRGBA","createFloat32","program","attributes","uniformData","uniforms","useProgram","nativeVaoExtension","FORCE_NATIVE","nativeState","nativeVao","createVertexArrayOES","getParameter","MAX_VERTEX_ATTRIBS","indexBuffer","dirty","constructor","bindVertexArrayOES","activate","normalized","stride","start","addAttribute","push","addIndex","draw","drawElements","UNSIGNED_SHORT","drawArrays","getSize","deleteVertexArrayOES","compileProgram","extractAttributes","extractUniforms","generateUniformAccessObject","setPrecision","mapSize","mapType","has","prefix","Events","EE","fn","context","once","addListener","emitter","event","TypeError","listener","evt","_events","_eventsCount","clearEvent","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","arguments","removeListener","j","on","removeAllListeners","off","prefixed","_utils","BaseTexture","source","scaleMode","_classCallCheck","_this","_possibleConstructorReturn","getPrototypeOf","touched","realWidth","realHeight","hasLoaded","isLoading","origSource","imageType","sourceScale","premultipliedAlpha","imageUrl","isPowerOfTwo","wrapMode","_glTextures","_enabled","_virtalBoundId","_destroyed","textureCacheIds","loadSource","naturalWidth","naturalHeight","_updateDimensions","bitTwiddle","isPow2","wasLoading","onload","onerror","firstSourceLoaded","src","complete","_updateImageType","_loadSvgSource","_sourceLoaded","scope","firstSubType","_loadSvgSourceUsingDataUri","_loadSvgSourceUsingXhr","atob","_loadSvgSourceUsingString","_this2","svgXhr","XMLHttpRequest","readyState","DONE","status","response","open","send","svgSize","svgWidth","svgHeight","_SINTId","drawImage","addToCache","update","isCocoonJS","dispose","removeFromCache","newSrc","crossorigin","baseTexture","image","Image","crossOrigin","_determineCrossOrigin2","origin","fromImage","HTMLImageElement","HTMLCanvasElement","fromCanvas","id","baseTextureFromCache","index","splice","WebGLManager","renderer","onContextChange","Point","x","y","_Point","Matrix","b","tx","ty","array","transpose","pos","newPos","angle","cos","sin","c1","tx1","matrix","b1","d1","pivotX","pivotY","scaleX","scaleY","rotation","skewX","skewY","transform","atan2","delta","abs","skew","scale","sqrt","position","Rectangle","Number","rectangle","paddingX","paddingY","x1","min","x2","max","y1","y2","_DisplayObject2","Container","children","DisplayObject","child","argumentsLength","addChild","parent","removeChild","_parentID","_boundsID","onChildrenChange","child2","index1","getChildIndex","index2","currentIndex","getChildAt","beginIndex","endIndex","begin","end","range","removed","RangeError","updateTransform","worldAlpha","visible","_bounds","_calculateBounds","renderable","calculateBounds","_mask","addBoundsMask","filterArea","addBoundsArea","addBounds","_lastBoundsID","_filters","renderAdvancedWebGL","_renderWebGL","renderWebGL","flush","filters","mask","_enabledFilters","enabled","filterManager","pushFilter","maskManager","pushMask","popMask","popFilter","_renderCanvas","renderCanvas","options","_get","destroyChildren","oldChildren","removeChildren","getLocalBounds","_width","_height","containerUpdateTransform","countTrailingZeros","v","INT_BITS","INT_MAX","INT_MIN","log2","shift","log10","popCount","nextPow2","prevPow2","parity","REVERSE_TABLE","tab","reverse","interleave2","deinterleave2","interleave3","z","deinterleave3","nextCombination","_math","Texture","frame","orig","trim","rotate","anchor","noFrame","_frame","valid","requiresUpdate","_uvs","_rotate","onBaseTextureUpdated","onBaseTextureLoaded","defaultAnchor","destroyBase","TextureUvs","xNotFit","yNotFit","relationship","errorX","errorY","_updateUvs","frameId","from","HTMLVideoElement","fromVideo","textureFromCache","removeAllHandlers","tex","EMPTY","WHITE","fillStyle","fillRect","createWhiteTexture","_settings","_vfGlCore","RenderTarget","frameBuffer","projectionMatrix","defaultFrame","destinationFrame","sourceFrame","stencilBuffer","stencilMaskStack","filterData","filterPoolKey","setFrame","cc","calculateProjection","append","enable","SCISSOR_TEST","scissor","disable","viewport","pm","identity","projectionFrame","_Matrix","ux","uy","vx","vy","tempMatrices","mul","signum","row","_ux","_uy","_vx","_vy","k","mat","init","GroupD8","E","SE","S","SW","W","NW","N","NE","MIRROR_VERTICAL","MIRROR_HORIZONTAL","uX","ind","uY","vX","vY","inv","add","rotationSecond","rotationFirst","sub","rotate180","isVertical","byDirection","dx","dy","matrixAppendRotationInv","TransformClass","TransformStatic","Transform","tempDisplayObjectParent","Bounds","_boundsRect","_localBoundsRect","updateID","_recursivePostUpdateTransform","_tempDisplayObjectParent","skipUpdate","rect","getRectangle","transformRef","parentRef","bounds","getBounds","point","displayObjectUpdateTransform","worldTransform","toGlobal","applyInverse","container","pivot","_currentBounds","interactive","interactiveChildren","localTransform","copy","item","isMask","TransformBase","_worldID","parentTransform","pt","wt","lt","updateWorldTransform","IDENTITY","_WebGLManager2","ObjectRenderer","CONTEXT_UID","WebGLRenderer","arg2","arg3","handleContextLost","handleContextRestored","addEventListener","_contextOptions","powerPreference","_backgroundColorRgba","MaskManager","stencilManager","StencilManager","emptyRenderer","currentRenderer","textureManager","initPlugins","_validateContext2","state","WebGLState","renderingToScreen","boundTextures","_activeShader","_activeVao","_activeRenderTarget","_initContext","_nextTextureLocation","SystemRenderer","isContextLost","restoreContext","maxTextures","MAX_TEXTURE_IMAGE_UNITS","emptyTextures","TextureManager","FilterManager","textureGC","TextureGarbageCollector","resetToDefault","rootRenderTarget","bindRenderTarget","emptyGLTexture","tempObj","empty","screen","displayObject","renderTexture","skipUpdateTransform","_lastObjectRendered","cacheParent","bindRenderTexture","objectRenderer","stop","setObjectRenderer","screenWidth","screenHeight","toArray","setBlendMode","renderTarget","_glRenderTargets","updateTexture","unbindTexture","setMaskStack","autoProject","forceLocation","count","glTexture","vao","bindVao","preventDefault","removeAll","removeView","destroyPlugins","removeEventListener","mixin","totalIndices","indices","Uint16Array","checkPrecision","def","unshift","Shader","vertexSrc","fragmentSrc","attributeLocations","precision","forEach","utils","ticker","ObservablePoint","cb","_x","_y","_Rectangle","Circle","radius","r2","Ellipse","normx","normy","Polygon","_len","points","_key","isArray","il","closed","inside","xi","yi","xj","yj","RoundedRectangle","radius2","platform","test","_TransformBase2","onChange","updateSkew","_rotation","_cx","_sx","_cy","_sy","_localID","_currentLocalID","decompose","minX","Infinity","minY","maxX","maxY","vertices","x0","y0","beginOffset","endOffset","rawX","rawY","_minX","_minY","_maxX","_maxY","area","obj","__plugins","registerPlugin","pluginName","ctor","plugins","target","propertyName","getOwnPropertyDescriptor","delayMixin","performMixins","arr","startIdx","removeCount","npm","loc","tempAnchor","href","samePort","_url","parse","port","hostname","protocol","_url2","punycode","util","Url","slashes","auth","host","hash","search","query","pathname","path","urlParse","resolve","relative","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","parseQueryString","slashesDenoteHost","isObject","queryIndex","splitter","uSplit","rest","join","simplePath","proto","lowerProto","match","atSign","hostEnd","hec","lastIndexOf","decodeURIComponent","parseHost","ipv6Hostname","hostparts","part","newpart","charCodeAt","validParts","notHost","bit","toASCII","ae","esc","encodeURIComponent","escape","qm","stringify","charAt","rel","result","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","isAbsolute","global","__WEBPACK_AMD_DEFINE_RESULT__","nodeType","freeGlobal","self","maxInt","base","tMin","tMax","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","stringFromCharCode","String","fromCharCode","map","mapDomain","string","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","numPoints","firstTime","decode","input","basic","oldi","w","baseMinusT","codePoint","inputLength","bias","encode","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","version","ucs2","toUnicode","webpackPolyfill","deprecate","paths","g","Function","arg","qs","sep","eq","regexp","maxKeys","prop","kstr","vstr","idx","xs","stringifyPrimitive","isFinite","objectKeys","ks","res","_GroupD","x3","y3","uvsUint32","Uint32Array","baseFrame","tw","th","w2","h2","cX","cY","tempPoint","Sprite","_anchor","_onAnchorUpdate","_texture","_tint","_tintRGB","cachedTint","vertexData","vertexTrimmedData","_transformID","_textureID","_transformTrimmedID","_textureTrimmedID","w0","w1","h0","h1","calculateVertices","render","addQuad","calculateTrimmedVertices","_onTextureUpdate","destroyBaseTexture","imageId","TICK","TEXTURE_TICK","SpriteRenderer","vertSize","vertByteSize","buffers","Buffer","_createIndicesForQuads2","groups","textures","textureCount","ids","blend","sprites","vertexBuffers","vaos","vaoMax","vertexCount","onPrerender","MAX_TEXTURES","_generateMultiTextureShader2","attrs","vertexBuffer","STREAM_DRAW","createVao","aVertexPosition","aTextureCoord","aColor","aTextureId","currentBlendMode","sprite","np2","float32View","uint32View","rendererBoundTextures","touch","nextTexture","currentTexture","groupCount","currentGroup","uvs","bt","tIndex","argb","group","groupTextureCount","bindShader","tempMatrix","system","assign","blendModes","_backgroundColor","_backgroundColorString","style","region","RenderTexture","parentNode","baseRenderTexture","_legacyRenderer","BaseRenderTexture","legacyRenderer","doNotResizeBaseTexture","ceil","_canvasRenderTarget","scissorData","scissorRenderTarget","enableScissor","alphaMaskPool","alphaMaskIndex","maskData","pushSpriteMask","isFastRect","rot","pushStencilMask","pushScissorMask","popSpriteMask","popScissorMask","popStencilMask","alphaMaskFilter","AlphaMaskFilter","maskSprite","pushStencil","popStencil","fit","SpriteMaskFilter","maskMatrix","vs","fs","Filter","TextureMatrix","otherMatrix","calculateSpriteMatrix","prepend","mapCoord","maskClamp","uClampFrame","applyFilter","SOURCE_KEY_MAP","defaultVertexSrc","defaultFragmentSrc","_blendMode","_extractUniformsFromSrc2","glShaders","glShaderKey","padding","autoFit","currentState","vertUniforms","extractUniformsFromString","fragUniforms","maskRegex","RegExp","nameSplit","lines","line","splitLine","tempMat","clampMargin","uClampOffset","_lastTextureID","clampOffset","forceUpdate","texBase","margin","offset","STENCIL_TEST","graphics","attachStencilBuffer","prevMaskCount","colorMask","stencilFunc","EQUAL","_getBitwiseMask","stencilOp","KEEP","INCR","_useCurrent","STENCIL_BUFFER_BIT","clearStencil","DECR","stencilStack","filterTransforms","FilterState","screenKey","quad","Quad","shaderCache","pool","managedFilters","_screenWidth","_screenHeight","filterStack","filterState","stack","renderTargetFrame","fullScreen","targetBounds","pad","getPotRenderTarget","lastState","freePotRenderTarget","flip","flop","filter","initVao","syncUniforms","filterClamp","val","outputMatrix","calculateScreenSpaceMatrix","calculateNormalizedScreenSpaceMatrix","contextLost","emptyPool","minWidth","minHeight","interleaved","targetTextureFrame","textureSize","mappedMatrix","translate","translateScaleX","translateScaleY","TEMP_MATRIX","invert","_RenderTarget","_managedTextures","isRenderTexture","destroyTexture","skipRemove","glTextures","glRenderTargets","checkCount","maxIdle","checkCountMax","run","tm","managedTextures","wasRemoved","unload","_mapWebGLBlendModesToPixi","activeState","Uint8Array","defaultState","stackIndex","maxAttribs","_mapWebGLBlendModesToPixi2","setState","setBlend","setDepthTest","setFrontFace","setCullFace","BLEND","blendFunc","blendFuncSeparate","DEPTH_TEST","CULL_FACE","frontFace","resetAttributes","UNPACK_FLIP_Y_WEBGL","ONE","ONE_MINUS_SRC_ALPHA","DST_ALPHA","DST_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","vt","fragTemplate","generateSampleSrc","sampleValues","uSamplers","process","normalizeArray","allowAboveRoot","splitPathRe","splitPath","filename","resolvedPath","resolvedAbsolute","cwd","normalize","trailingSlash","to","fromParts","toParts","samePartsLength","outputParts","dirname","dir","basename","ext","extname","str","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","versions","prependListener","prependOnceListener","binding","chdir","umask","maxIfs","createTempContext","tinyCanvas","generateIfTestSrc","positions","colors","_Ticker","shared","Ticker","autoStart","_head","TickerListener","_requestId","_maxElapsedMS","deltaTime","elapsedMS","lastTime","speed","started","_tick","time","next","requestAnimationFrame","performance","now","cancelAnimationFrame","_requestIfNeeded","priority","_addListener","current","previous","connect","_startIfPossible","_cancelIfNeeded","currentTime","head","fps","minFPMS","redirect","hard"],"mappings":"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","file":"vf-renderer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vf\"] = factory();\n\telse\n\t\troot[\"vf\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","/**\n * String of the current SINT version.\n *\n * @static\n * @constant\n * @memberof SINT\n * @name VERSION\n * @type {string}\n */\n// export const VERSION = __VERSION__;\nexport const VERSION = '0.0.1';\n\n\n/**\n * Two Pi.\n *\n * @static\n * @constant\n * @memberof SINT\n * @type {number}\n */\nexport const PI_2 = Math.PI * 2;\n\n/**\n * Conversion factor for converting radians to degrees.\n *\n * @static\n * @constant\n * @memberof SINT\n * @type {number}\n */\nexport const RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * Conversion factor for converting degrees to radians.\n *\n * @static\n * @constant\n * @memberof SINT\n * @type {number}\n */\nexport const DEG_TO_RAD = Math.PI / 180;\n\n/**\n * Constant to identify the Renderer Type.\n *\n * @static\n * @constant\n * @memberof SINT\n * @name RENDERER_TYPE\n * @type {object}\n * @property {number} UNKNOWN - Unknown render type.\n * @property {number} WEBGL - WebGL render type.\n * @property {number} CANVAS - Canvas render type.\n */\nexport const RENDERER_TYPE = {\n    UNKNOWN:    0,\n    WEBGL:      1,\n    CANVAS:     2,\n};\n\n/**\n * Various blend modes supported by SINT.\n *\n * IMPORTANT - The WebGL renderer only supports the NORMAL, ADD, MULTIPLY and SCREEN blend modes.\n * Anything else will silently act like NORMAL.\n *\n * @static\n * @constant\n * @memberof SINT\n * @name BLEND_MODES\n * @type {object}\n * @property {number} NORMAL\n * @property {number} ADD\n * @property {number} MULTIPLY\n * @property {number} SCREEN\n * @property {number} OVERLAY\n * @property {number} DARKEN\n * @property {number} LIGHTEN\n * @property {number} COLOR_DODGE\n * @property {number} COLOR_BURN\n * @property {number} HARD_LIGHT\n * @property {number} SOFT_LIGHT\n * @property {number} DIFFERENCE\n * @property {number} EXCLUSION\n * @property {number} HUE\n * @property {number} SATURATION\n * @property {number} COLOR\n * @property {number} LUMINOSITY\n */\nexport const BLEND_MODES = {\n    NORMAL:         0,\n    ADD:            1,\n    MULTIPLY:       2,\n    SCREEN:         3,\n    OVERLAY:        4,\n    DARKEN:         5,\n    LIGHTEN:        6,\n    COLOR_DODGE:    7,\n    COLOR_BURN:     8,\n    HARD_LIGHT:     9,\n    SOFT_LIGHT:     10,\n    DIFFERENCE:     11,\n    EXCLUSION:      12,\n    HUE:            13,\n    SATURATION:     14,\n    COLOR:          15,\n    LUMINOSITY:     16,\n    NORMAL_NPM:     17,\n    ADD_NPM:        18,\n    SCREEN_NPM:     19,\n};\n\n/**\n * Various webgl draw modes. These can be used to specify which GL drawMode to use\n * under certain situations and renderers.\n *\n * @static\n * @constant\n * @memberof SINT\n * @name DRAW_MODES\n * @type {object}\n * @property {number} POINTS\n * @property {number} LINES\n * @property {number} LINE_LOOP\n * @property {number} LINE_STRIP\n * @property {number} TRIANGLES\n * @property {number} TRIANGLE_STRIP\n * @property {number} TRIANGLE_FAN\n */\nexport const DRAW_MODES = {\n    POINTS:         0,\n    LINES:          1,\n    LINE_LOOP:      2,\n    LINE_STRIP:     3,\n    TRIANGLES:      4,\n    TRIANGLE_STRIP: 5,\n    TRIANGLE_FAN:   6,\n};\n\n/**\n * The scale modes that are supported by SINT.\n *\n * The {@link SINT.settings.SCALE_MODE} scale mode affects the default scaling mode of future operations.\n * It can be re-assigned to either LINEAR or NEAREST, depending upon suitability.\n *\n * @static\n * @constant\n * @memberof SINT\n * @name SCALE_MODES\n * @type {object}\n * @property {number} LINEAR Smooth scaling\n * @property {number} NEAREST Pixelating scaling\n */\nexport const SCALE_MODES = {\n    LINEAR:     0,\n    NEAREST:    1,\n};\n\n/**\n * The wrap modes that are supported by SINT.\n *\n * The {@link SINT.settings.WRAP_MODE} wrap mode affects the default wrapping mode of future operations.\n * It can be re-assigned to either CLAMP or REPEAT, depending upon suitability.\n * If the texture is non power of two then clamp will be used regardless as webGL can\n * only use REPEAT if the texture is po2.\n *\n * This property only affects WebGL.\n *\n * @static\n * @constant\n * @name WRAP_MODES\n * @memberof SINT\n * @type {object}\n * @property {number} CLAMP - The textures uvs are clamped\n * @property {number} REPEAT - The texture uvs tile and repeat\n * @property {number} MIRRORED_REPEAT - The texture uvs tile and repeat with mirroring\n */\nexport const WRAP_MODES = {\n    CLAMP:          0,\n    REPEAT:         1,\n    MIRRORED_REPEAT: 2,\n};\n\n/**\n * The gc modes that are supported by SINT.\n *\n * The {@link SINT.settings.GC_MODE} Garbage Collection mode for SINTJS textures is AUTO\n * If set to GC_MODE, the renderer will occasionally check textures usage. If they are not\n * used for a specified period of time they will be removed from the GPU. They will of course\n * be uploaded again when they are required. This is a silent behind the scenes process that\n * should ensure that the GPU does not  get filled up.\n *\n * Handy for mobile devices!\n * This property only affects WebGL.\n *\n * @static\n * @constant\n * @name GC_MODES\n * @memberof SINT\n * @type {object}\n * @property {number} AUTO - Garbage collection will happen periodically automatically\n * @property {number} MANUAL - Garbage collection will need to be called manually\n */\nexport const GC_MODES = {\n    AUTO:           0,\n    MANUAL:         1,\n};\n\n/**\n * Regexp for image type by extension.\n *\n * @static\n * @constant\n * @memberof SINT\n * @type {RegExp|string}\n * @example `image.png`\n */\nexport const URL_FILE_EXTENSION = /\\.(\\w{3,4})(?:$|\\?|#)/i;\n\n/**\n * Regexp for data URI.\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\n *\n * @static\n * @constant\n * @name DATA_URI\n * @memberof SINT\n * @type {RegExp|string}\n * @example data:image/png;base64\n */\nexport const DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\n\n/**\n * Regexp for SVG size.\n *\n * @static\n * @constant\n * @name SVG_SIZE\n * @memberof SINT\n * @type {RegExp|string}\n * @example &lt;svg width=\"100\" height=\"100\"&gt;&lt;/svg&gt;\n */\nexport const SVG_SIZE = /<svg[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*>/i; // eslint-disable-line max-len\n\n/**\n * Constants that identify shapes, mainly to prevent `instanceof` calls.\n *\n * @static\n * @constant\n * @name SHAPES\n * @memberof SINT\n * @type {object}\n * @property {number} POLY Polygon\n * @property {number} RECT Rectangle\n * @property {number} CIRC Circle\n * @property {number} ELIP Ellipse\n * @property {number} RREC Rounded Rectangle\n */\nexport const SHAPES = {\n    POLY: 0,\n    RECT: 1,\n    CIRC: 2,\n    ELIP: 3,\n    RREC: 4,\n};\n\n/**\n * Constants that specify float precision in shaders.\n *\n * @static\n * @constant\n * @name PRECISION\n * @memberof SINT\n * @type {object}\n * @property {string} LOW='lowp'\n * @property {string} MEDIUM='mediump'\n * @property {string} HIGH='highp'\n */\nexport const PRECISION = {\n    LOW: 'lowp',\n    MEDIUM: 'mediump',\n    HIGH: 'highp',\n};\n\n/**\n * Constants that specify the transform type.\n *\n * @static\n * @constant\n * @name TRANSFORM_MODE\n * @memberof SINT\n * @type {object}\n * @property {number} STATIC\n * @property {number} DYNAMIC\n */\nexport const TRANSFORM_MODE = {\n    STATIC:     0,\n    DYNAMIC:    1,\n};\n\n/**\n * Constants that define the type of gradient on text.\n *\n * @static\n * @constant\n * @name TEXT_GRADIENT\n * @memberof SINT\n * @type {object}\n * @property {number} LINEAR_VERTICAL Vertical gradient\n * @property {number} LINEAR_HORIZONTAL Linear gradient\n */\nexport const TEXT_GRADIENT = {\n    LINEAR_VERTICAL: 0,\n    LINEAR_HORIZONTAL: 1,\n};\n\n/**\n * Represents the update priorities used by internal SINT classes when registered with\n * the {@link SINT.ticker.Ticker} object. Higher priority items are updated first and lower\n * priority items, such as render, should go later.\n *\n * @static\n * @constant\n * @name UPDATE_PRIORITY\n * @memberof SINT\n * @type {object}\n * @property {number} INTERACTION=50 Highest priority, used for {@link SINT.interaction.InteractionManager}\n * @property {number} HIGH=25 High priority updating, {@link SINT.VideoBaseTexture} and {@link SINT.extras.AnimatedSprite}\n * @property {number} NORMAL=0 Default priority for ticker events, see {@link SINT.ticker.Ticker#add}.\n * @property {number} LOW=-25 Low priority used for {@link SINT.Application} rendering.\n * @property {number} UTILITY=-50 Lowest priority used for {@link SINT.prepare.BasePrepare} utility.\n */\nexport const UPDATE_PRIORITY = {\n    INTERACTION: 50,\n    HIGH: 25,\n    NORMAL: 0,\n    LOW: -25,\n    UTILITY: -50,\n};\n","/**\n * Math classes and utilities mixed into SINT namespace.\n *\n * @lends SINT\n */\nexport { default as Point } from './Point';\nexport { default as ObservablePoint } from './ObservablePoint';\nexport { default as Matrix } from './Matrix';\nexport { default as GroupD8 } from './GroupD8';\n\nexport { default as Circle } from './shapes/Circle';\nexport { default as Ellipse } from './shapes/Ellipse';\nexport { default as Polygon } from './shapes/Polygon';\nexport { default as Rectangle } from './shapes/Rectangle';\nexport { default as RoundedRectangle } from './shapes/RoundedRectangle';\n","import maxRecommendedTextures from './utils/maxRecommendedTextures';\nimport canUploadSameBuffer from './utils/canUploadSameBuffer';\n\n/**\n * User's customizable globals for overriding the default SINT settings, such\n * as a renderer's default resolution, framerate, float percision, etc.\n * @example\n * // Use the native window resolution as the default resolution\n * // will support high-density displays when rendering\n * SINT.settings.RESOLUTION = window.devicePixelRatio.\n *\n * // Disable interpolation when scaling, will make texture be pixelated\n * SINT.settings.SCALE_MODE = SINT.SCALE_MODES.NEAREST;\n * @namespace SINT.settings\n */\nexport default {\n\n    /**\n     * Target frames per millisecond.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {number}\n     * @default 0.06\n     */\n    TARGET_FPMS: 0.06,\n\n    /**\n     * If set to true WebGL will attempt make textures mimpaped by default.\n     * Mipmapping will only succeed if the base texture uploaded has power of two dimensions.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {boolean}\n     * @default true\n     */\n    MIPMAP_TEXTURES: true,\n\n    /**\n     * Default resolution / device pixel ratio of the renderer.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {number}\n     * @default 1\n     */\n    RESOLUTION: 1,\n\n    /**\n     * Default filter resolution.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {number}\n     * @default 1\n     */\n    FILTER_RESOLUTION: 1,\n\n    /**\n     * The maximum textures that this device supports.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {number}\n     * @default 32\n     */\n    SPRITE_MAX_TEXTURES: maxRecommendedTextures(32),\n\n    // TODO: maybe change to SPRITE.BATCH_SIZE: 2000\n    // TODO: maybe add PARTICLE.BATCH_SIZE: 15000\n\n    /**\n     * The default sprite batch size.\n     *\n     * The default aims to balance desktop and mobile devices.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {number}\n     * @default 4096\n     */\n    SPRITE_BATCH_SIZE: 4096,\n\n    /**\n     * The prefix that denotes a URL is for a retina asset.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {RegExp}\n     * @example `@2x`\n     * @default /@([0-9\\.]+)x/\n     */\n    RETINA_PREFIX: /@([0-9\\.]+)x/,\n\n    /**\n     * The default render options if none are supplied to {@link SINT.WebGLRenderer}\n     * or {@link SINT.CanvasRenderer}.\n     *\n     * @static\n     * @constant\n     * @memberof SINT.settings\n     * @type {object}\n     * @property {HTMLCanvasElement} view=null\n     * @property {number} resolution=1\n     * @property {boolean} antialias=false\n     * @property {boolean} forceFXAA=false\n     * @property {boolean} autoResize=false\n     * @property {boolean} transparent=false\n     * @property {number} backgroundColor=0x000000\n     * @property {boolean} clearBeforeRender=true\n     * @property {boolean} preserveDrawingBuffer=false\n     * @property {boolean} roundPixels=false\n     * @property {number} width=800\n     * @property {number} height=600\n     * @property {boolean} legacy=false\n     */\n    RENDER_OPTIONS: {\n        view: null,\n        antialias: false,\n        forceFXAA: false,\n        autoResize: false,\n        transparent: false,\n        backgroundColor: 0x000000,\n        clearBeforeRender: true,\n        preserveDrawingBuffer: false,\n        roundPixels: false,\n        width: 800,\n        height: 600,\n        legacy: false,\n    },\n\n    /**\n     * Default transform type.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {SINT.TRANSFORM_MODE}\n     * @default SINT.TRANSFORM_MODE.STATIC\n     */\n    TRANSFORM_MODE: 0,\n\n    /**\n     * Default Garbage Collection mode.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {SINT.GC_MODES}\n     * @default SINT.GC_MODES.AUTO\n     */\n    GC_MODE: 0,\n\n    /**\n     * Default Garbage Collection max idle.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {number}\n     * @default 3600\n     */\n    GC_MAX_IDLE: 60 * 60,\n\n    /**\n     * Default Garbage Collection maximum check count.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {number}\n     * @default 600\n     */\n    GC_MAX_CHECK_COUNT: 60 * 10,\n\n    /**\n     * Default wrap modes that are supported by SINT.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {SINT.WRAP_MODES}\n     * @default SINT.WRAP_MODES.CLAMP\n     */\n    WRAP_MODE: 0,\n\n    /**\n     * The scale modes that are supported by SINT.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {SINT.SCALE_MODES}\n     * @default SINT.SCALE_MODES.LINEAR\n     */\n    SCALE_MODE: 0,\n\n    /**\n     * Default specify float precision in vertex shader.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {SINT.PRECISION}\n     * @default SINT.PRECISION.HIGH\n     */\n    PRECISION_VERTEX: 'highp',\n\n    /**\n     * Default specify float precision in fragment shader.\n     *\n     * @static\n     * @memberof SINT.settings\n     * @type {SINT.PRECISION}\n     * @default SINT.PRECISION.MEDIUM\n     */\n    PRECISION_FRAGMENT: 'mediump',\n\n    /**\n     * Can we upload the same buffer in a single frame?\n     *\n     * @static\n     * @constant\n     * @memberof SINT.settings\n     * @type {boolean}\n     */\n    CAN_UPLOAD_SAME_BUFFER: canUploadSameBuffer(),\n\n    /**\n     * Default Mesh `canvasPadding`.\n     *\n     * @see SINT.mesh.Mesh#canvasPadding\n     * @static\n     * @constant\n     * @memberof SINT.settings\n     * @type {number}\n     */\n    MESH_CANVAS_PADDING: 0,\n};\n","import { DATA_URI, URL_FILE_EXTENSION, SVG_SIZE, VERSION } from '../const';\nimport settings from '../settings';\nimport EventEmitter from 'eventemitter3';\nimport pluginTarget from './pluginTarget';\nimport * as mixins from './mixin';\n// import * as isMobile from 'ismobilejs';\nimport removeItems from 'remove-array-items';\nimport mapPremultipliedBlendModes from './mapPremultipliedBlendModes';\n// import earcut from 'earcut'; // npm i earcut --save\n\n\nlet nextUid = 0;\nlet saidHello = false;\n\n/**\n * Generalized convenience utilities for SINT.\n * @example\n * // Extend SINT's internal Event Emitter.\n * class MyEmitter extends SINT.utils.EventEmitter {\n *   constructor() {\n *      super();\n *      console.log(\"Emitter created!\");\n *   }\n * }\n *\n * // Get info on current device\n * console.log(SINT.utils.isMobile);\n *\n * // Convert hex color to string\n * console.log(SINT.utils.hex2string(0xff00ff)); // returns: \"#ff00ff\"\n * @namespace SINT.utils\n */\nexport {\n    /**\n     * @see {@link https://github.com/kaimallea/isMobile}\n     *\n     * @memberof SINT.utils\n     * @function isMobile\n     * @type {Object}\n     */\n    // isMobile,\n\n    /**\n     * @see {@link https://github.com/mreinstein/remove-array-items}\n     *\n     * @memberof SINT.utils\n     * @function removeItems\n     * @type {Object}\n     */\n    removeItems,\n    /**\n     * @see {@link https://github.com/primus/eventemitter3}\n     *\n     * @memberof SINT.utils\n     * @class EventEmitter\n     * @type {EventEmitter}\n     */\n    EventEmitter,\n    /**\n     * @memberof SINT.utils\n     * @function pluginTarget\n     * @type {mixin}\n     */\n    pluginTarget,\n    mixins,\n    /**\n     * @see {@link https://github.com/mapbox/earcut}\n     *\n     * @memberof SINT.utils\n     * @function earcut\n     * @param {number[]} vertices - A flat array of vertice coordinates\n     * @param {number[]} [holes] - An array of hole indices\n     * @param {number} [dimensions=2] The number of coordinates per vertice in the input array\n     * @return {number[]} Triangulated polygon\n     */\n    // earcut,\n};\n\n/**\n * Gets the next unique identifier\n *\n * @memberof SINT.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\nexport function uid()\n{\n    return ++nextUid;\n}\n\n/**\n * Converts a hex color number to an [R, G, B] array\n *\n * @memberof SINT.utils\n * @function hex2rgb\n * @param {number} hex - The number to convert\n * @param  {number[]} [out=[]] If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color.\n */\nexport function hex2rgb(hex, out)\n{\n    out = out || [];\n\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hex color number to a string.\n *\n * @memberof SINT.utils\n * @function hex2string\n * @param {number} hex - Number in hex\n * @return {string} The string color.\n */\nexport function hex2string(hex)\n{\n    hex = hex.toString(16);\n    hex = '000000'.substr(0, 6 - hex.length) + hex;\n\n    return `#${hex}`;\n}\n\n/**\n * Converts a color as an [R, G, B] array to a hex number\n *\n * @memberof SINT.utils\n * @function rgb2hex\n * @param {number[]} rgb - rgb array\n * @return {number} The color number\n */\nexport function rgb2hex(rgb)\n{\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255 | 0));\n}\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof SINT.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url, defaultValue)\n{\n    const resolution = settings.RETINA_PREFIX.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue !== undefined ? defaultValue : 1;\n}\n\n/**\n * Typedef for decomposeDataUri return object.\n *\n * @typedef {object} SINT.utils~DecomposedDataUri\n * @property {mediaType} Media type, eg. `image`\n * @property {subType} Sub type, eg. `png`\n * @property {encoding} Data encoding, eg. `base64`\n * @property {data} The actual data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof SINT.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {SINT.utils~DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri)\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n            data: dataUriMatch[5],\n        };\n    }\n\n    return undefined;\n}\n\n/**\n * Get type of the image by regexp for extension. Returns undefined for unknown extensions.\n *\n * @memberof SINT.utils\n * @function getUrlFileExtension\n * @param {string} url - the image path\n * @return {string|undefined} image extension\n */\nexport function getUrlFileExtension(url)\n{\n    const extension = URL_FILE_EXTENSION.exec(url);\n\n    if (extension)\n    {\n        return extension[1].toLowerCase();\n    }\n\n    return undefined;\n}\n\n/**\n * Typedef for Size object.\n *\n * @typedef {object} SINT.utils~Size\n * @property {width} Width component\n * @property {height} Height component\n */\n\n/**\n * Get size from an svg string using regexp.\n *\n * @memberof SINT.utils\n * @function getSvgSize\n * @param {string} svgString - a serialized svg element\n * @return {SINT.utils~Size|undefined} image extension\n */\nexport function getSvgSize(svgString)\n{\n    const sizeMatch = SVG_SIZE.exec(svgString);\n    const size = {};\n\n    if (sizeMatch)\n    {\n        size[sizeMatch[1]] = Math.round(parseFloat(sizeMatch[3]));\n        size[sizeMatch[5]] = Math.round(parseFloat(sizeMatch[7]));\n    }\n\n    return size;\n}\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof SINT.utils\n */\nexport function skipHello()\n{\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of SINT.\n * If you don't want to see this message you can run `SINT.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever makes you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof SINT.utils\n * @param {string} type - The string renderer type to log.\n */\nexport function sayHello(type)\n{\n    if (saidHello)\n    {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n    {\n        const args = [\n            `\\n %c %c %c SINTJS ${VERSION} - ✰ ${type} ✰  %c  %c  http://www.sintlib.com/  %c %c ♥%c♥%c♥ \\n\\n`,\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff66a5; background: #030307; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ffc3dc; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n        ];\n\n        window.console.log.apply(console, args);\n    }\n    else if (window.console)\n    {\n        window.console.log(`SINTJS ${VERSION} - ${type} - http://www.sintlib.com/`);\n    }\n\n    saidHello = true;\n}\n\n/**\n * Helper for checking for webgl support\n *\n * @memberof SINT.utils\n * @function isWebGLSupported\n * @return {boolean} is webgl supported\n */\nexport function isWebGLSupported()\n{\n    const contextOptions = { stencil: true, failIfMajorPerformanceCaveat: true };\n\n    try\n    {\n        if (!window.WebGLRenderingContext)\n        {\n            return false;\n        }\n\n        const canvas = document.createElement('canvas');\n        let gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n\n        const success = !!(gl && gl.getContextAttributes().stencil);\n\n        if (gl)\n        {\n            const loseContext = gl.getExtension('WEBGL_lose_context');\n\n            if (loseContext)\n            {\n                loseContext.loseContext();\n            }\n        }\n\n        gl = null;\n\n        return success;\n    }\n    catch (e)\n    {\n        return false;\n    }\n}\n\n/**\n * Returns sign of number\n *\n * @memberof SINT.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nexport function sign(n)\n{\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n\n/**\n * @todo Describe property usage\n *\n * @memberof SINT.utils\n * @private\n */\nexport const TextureCache = Object.create(null);\n\n/**\n * @todo Describe property usage\n *\n * @memberof SINT.utils\n * @private\n */\nexport const BaseTextureCache = Object.create(null);\n\n/**\n * Destroys all texture in the cache\n *\n * @memberof SINT.utils\n * @function destroyTextureCache\n */\nexport function destroyTextureCache()\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        TextureCache[key].destroy();\n    }\n    for (key in BaseTextureCache)\n    {\n        BaseTextureCache[key].destroy();\n    }\n}\n\n/**\n * Removes all textures from cache, but does not destroy them\n *\n * @memberof SINT.utils\n * @function clearTextureCache\n */\nexport function clearTextureCache()\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        delete TextureCache[key];\n    }\n    for (key in BaseTextureCache)\n    {\n        delete BaseTextureCache[key];\n    }\n}\n\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof SINT.utils\n * @const premultiplyBlendMode\n * @type {Array<number[]>}\n */\nexport const premultiplyBlendMode = mapPremultipliedBlendModes();\n\n/**\n * changes blendMode according to texture format\n *\n * @memberof SINT.utils\n * @function correctBlendMode\n * @param {number} blendMode supposed blend mode\n * @param {boolean} premultiplied  whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\nexport function correctBlendMode(blendMode, premultiplied)\n{\n    return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n\n/**\n * premultiplies tint\n *\n * @memberof SINT.utils\n * @param {number} tint integet RGB\n * @param {number} alpha floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\nexport function premultiplyTint(tint, alpha)\n{\n    if (alpha === 1.0)\n    {\n        return (alpha * 255 << 24) + tint;\n    }\n    if (alpha === 0.0)\n    {\n        return 0;\n    }\n    let R = ((tint >> 16) & 0xFF);\n    let G = ((tint >> 8) & 0xFF);\n    let B = (tint & 0xFF);\n\n    R = ((R * alpha) + 0.5) | 0;\n    G = ((G * alpha) + 0.5) | 0;\n    B = ((B * alpha) + 0.5) | 0;\n\n    return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n\n/**\n * combines rgb and alpha to out array\n *\n * @memberof SINT.utils\n * @param {Float32Array|number[]} rgb input rgb\n * @param {number} alpha alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyRgba(rgb, alpha, out, premultiply)\n{\n    out = out || new Float32Array(4);\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] = rgb[0] * alpha;\n        out[1] = rgb[1] * alpha;\n        out[2] = rgb[2] * alpha;\n    }\n    else\n    {\n        out[0] = rgb[0];\n        out[1] = rgb[1];\n        out[2] = rgb[2];\n    }\n    out[3] = alpha;\n\n    return out;\n}\n\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n *\n * @memberof SINT.utils\n * @param {number} tint input tint\n * @param {number} alpha alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyTintToRgba(tint, alpha, out, premultiply)\n{\n    out = out || new Float32Array(4);\n    out[0] = ((tint >> 16) & 0xFF) / 255.0;\n    out[1] = ((tint >> 8) & 0xFF) / 255.0;\n    out[2] = (tint & 0xFF) / 255.0;\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] *= alpha;\n        out[1] *= alpha;\n        out[2] *= alpha;\n    }\n    out[3] = alpha;\n\n    return out;\n}\n","/*!\n * @vf-gl-core v0.0.1 \n * Tue, 25 Dec 2018 06:41:51 UTC \n * https://github.com/vfjs/vf-gl-core\n */\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"vf\",[],e):\"object\"==typeof exports?exports.vf=e():t.vf=e()}(window,function(){return function(r){var i={};function n(t){if(i[t])return i[t].exports;var e=i[t]={i:t,l:!1,exports:{}};return r[t].call(e.exports,e,e.exports,n),e.l=!0,e.exports}return n.m=r,n.c=i,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=10)}([function(t,e){var o=null,a={FLOAT:\"float\",FLOAT_VEC2:\"vec2\",FLOAT_VEC3:\"vec3\",FLOAT_VEC4:\"vec4\",INT:\"int\",INT_VEC2:\"ivec2\",INT_VEC3:\"ivec3\",INT_VEC4:\"ivec4\",BOOL:\"bool\",BOOL_VEC2:\"bvec2\",BOOL_VEC3:\"bvec3\",BOOL_VEC4:\"bvec4\",FLOAT_MAT2:\"mat2\",FLOAT_MAT3:\"mat3\",FLOAT_MAT4:\"mat4\",SAMPLER_2D:\"sampler2D\"};t.exports=function(t,e){if(!o){var r=Object.keys(a);o={};for(var i=0;i<r.length;++i){var n=r[i];o[t[n]]=a[n]}}return o[e]}},function(t,e){t.exports=function(t,e,r){var i;if(r){var n=r.tempAttribState,o=r.attribState;for(i=0;i<n.length;i++)n[i]=!1;for(i=0;i<e.length;i++)n[e[i].attribute.location]=!0;for(i=0;i<o.length;i++)o[i]!==n[i]&&(o[i]=n[i],r.attribState[i]?t.enableVertexAttribArray(i):t.disableVertexAttribArray(i))}else for(i=0;i<e.length;i++){var a=e[i];t.enableVertexAttribArray(a.attribute.location)}}},function(t,e){var o=function(t,e,r,i,n){this.gl=t,this.texture=t.createTexture(),this.mipmap=!1,this.premultiplyAlpha=!1,this.width=e||-1,this.height=r||-1,this.format=i||t.RGBA,this.type=n||t.UNSIGNED_BYTE},n=!(o.prototype.upload=function(t){this.bind();var e=this.gl;e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha);var r=t.videoWidth||t.width,i=t.videoHeight||t.height;i!==this.height||r!==this.width?e.texImage2D(e.TEXTURE_2D,0,this.format,this.format,this.type,t):e.texSubImage2D(e.TEXTURE_2D,0,0,0,this.format,this.type,t),this.width=r,this.height=i});o.prototype.uploadData=function(t,e,r){this.bind();var i=this.gl;if(t instanceof Float32Array){if(!n){if(!i.getExtension(\"OES_texture_float\"))throw new Error(\"floating point textures not available\");n=!0}this.type=i.FLOAT}else this.type=this.type||i.UNSIGNED_BYTE;i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),e!==this.width||r!==this.height?i.texImage2D(i.TEXTURE_2D,0,this.format,e,r,0,this.format,this.type,t||null):i.texSubImage2D(i.TEXTURE_2D,0,0,0,e,r,this.format,this.type,t||null),this.width=e,this.height=r},o.prototype.bind=function(t){var e=this.gl;void 0!==t&&e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,this.texture)},o.prototype.unbind=function(){var t=this.gl;t.bindTexture(t.TEXTURE_2D,null)},o.prototype.minFilter=function(t){var e=this.gl;this.bind(),this.mipmap?e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,t?e.LINEAR_MIPMAP_LINEAR:e.NEAREST_MIPMAP_NEAREST):e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,t?e.LINEAR:e.NEAREST)},o.prototype.magFilter=function(t){var e=this.gl;this.bind(),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,t?e.LINEAR:e.NEAREST)},o.prototype.enableMipmap=function(){var t=this.gl;this.bind(),this.mipmap=!0,t.generateMipmap(t.TEXTURE_2D)},o.prototype.enableLinearScaling=function(){this.minFilter(!0),this.magFilter(!0)},o.prototype.enableNearestScaling=function(){this.minFilter(!1),this.magFilter(!1)},o.prototype.enableWrapClamp=function(){var t=this.gl;this.bind(),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)},o.prototype.enableWrapRepeat=function(){var t=this.gl;this.bind(),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.REPEAT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.REPEAT)},o.prototype.enableWrapMirrorRepeat=function(){var t=this.gl;this.bind(),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.MIRRORED_REPEAT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.MIRRORED_REPEAT)},o.prototype.destroy=function(){this.gl.deleteTexture(this.texture)},o.fromSource=function(t,e,r){var i=new o(t);return i.premultiplyAlpha=r||!1,i.upload(e),i},o.fromData=function(t,e,r,i){var n=new o(t);return n.uploadData(e,r,i),n},t.exports=o},function(t,e){var s=function(t,e,r){var i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS)?i:(console.log(t.getShaderInfoLog(i)),null)};t.exports=function(t,e,r,i){var n=s(t,t.VERTEX_SHADER,e),o=s(t,t.FRAGMENT_SHADER,r),a=t.createProgram();if(t.attachShader(a,n),t.attachShader(a,o),i)for(var u in i)t.bindAttribLocation(a,i[u],u);return t.linkProgram(a),t.getProgramParameter(a,t.LINK_STATUS)||(console.error(\"gl-core Error: Could not initialize shader.\"),console.error(\"gl.VALIDATE_STATUS\",t.getProgramParameter(a,t.VALIDATE_STATUS)),console.error(\"gl.getError()\",t.getError()),\"\"!==t.getProgramInfoLog(a)&&console.warn(\"gl-core Warning: gl.getProgramInfoLog()\",t.getProgramInfoLog(a)),t.deleteProgram(a),a=null),t.deleteShader(n),t.deleteShader(o),a}},function(t,e,r){var u=r(0),s=r(5),f=function(t,e,r,i){gl.vertexAttribPointer(this.location,this.size,t||gl.FLOAT,e||!1,r||0,i||0)};t.exports=function(t,e){for(var r={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),n=0;n<i;n++){var o=t.getActiveAttrib(e,n),a=u(t,o.type);r[o.name]={type:a,size:s(a),location:t.getAttribLocation(e,o.name),pointer:f}}return r}},function(t,e){var r={float:1,vec2:2,vec3:3,vec4:4,int:1,ivec2:2,ivec3:3,ivec4:4,bool:1,bvec2:2,bvec3:3,bvec4:4,mat2:4,mat3:9,mat4:16,sampler2D:1};t.exports=function(t){return r[t]}},function(t,e,r){var s=r(0),f=r(7);t.exports=function(t,e){for(var r={},i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),n=0;n<i;n++){var o=t.getActiveUniform(e,n),a=o.name.replace(/\\[.*?\\]/,\"\"),u=s(t,o.type);r[a]={type:u,size:o.size,location:t.getUniformLocation(e,a),value:f(u,o.size)}}return r}},function(t,e){var r=function(t){for(var e=new Array(t),r=0;r<e.length;r++)e[r]=!1;return e};t.exports=function(t,e){switch(t){case\"float\":return 0;case\"vec2\":return new Float32Array(2*e);case\"vec3\":return new Float32Array(3*e);case\"vec4\":return new Float32Array(4*e);case\"int\":case\"sampler2D\":return 0;case\"ivec2\":return new Int32Array(2*e);case\"ivec3\":return new Int32Array(3*e);case\"ivec4\":return new Int32Array(4*e);case\"bool\":return!1;case\"bvec2\":return r(2*e);case\"bvec3\":return r(3*e);case\"bvec4\":return r(4*e);case\"mat2\":return new Float32Array([1,0,0,1]);case\"mat3\":return new Float32Array([1,0,0,0,1,0,0,0,1]);case\"mat4\":return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}}},function(t,e){t.exports=function(t,e){return\"precision\"!==t.substring(0,9)?\"precision \"+e+\" float;\\n\"+t:t}},function(t,e){var c=function(t){return function(){return this.data[t].value}},n={float:function(t,e,r){t.uniform1f(e,r)},vec2:function(t,e,r){t.uniform2f(e,r[0],r[1])},vec3:function(t,e,r){t.uniform3f(e,r[0],r[1],r[2])},vec4:function(t,e,r){t.uniform4f(e,r[0],r[1],r[2],r[3])},int:function(t,e,r){t.uniform1i(e,r)},ivec2:function(t,e,r){t.uniform2i(e,r[0],r[1])},ivec3:function(t,e,r){t.uniform3i(e,r[0],r[1],r[2])},ivec4:function(t,e,r){t.uniform4i(e,r[0],r[1],r[2],r[3])},bool:function(t,e,r){t.uniform1i(e,r)},bvec2:function(t,e,r){t.uniform2i(e,r[0],r[1])},bvec3:function(t,e,r){t.uniform3i(e,r[0],r[1],r[2])},bvec4:function(t,e,r){t.uniform4i(e,r[0],r[1],r[2],r[3])},mat2:function(t,e,r){t.uniformMatrix2fv(e,!1,r)},mat3:function(t,e,r){t.uniformMatrix3fv(e,!1,r)},mat4:function(t,e,r){t.uniformMatrix4fv(e,!1,r)},sampler2D:function(t,e,r){t.uniform1i(e,r)}},o={float:function(t,e,r){t.uniform1fv(e,r)},vec2:function(t,e,r){t.uniform2fv(e,r)},vec3:function(t,e,r){t.uniform3fv(e,r)},vec4:function(t,e,r){t.uniform4fv(e,r)},int:function(t,e,r){t.uniform1iv(e,r)},ivec2:function(t,e,r){t.uniform2iv(e,r)},ivec3:function(t,e,r){t.uniform3iv(e,r)},ivec4:function(t,e,r){t.uniform4iv(e,r)},bool:function(t,e,r){t.uniform1iv(e,r)},bvec2:function(t,e,r){t.uniform2iv(e,r)},bvec3:function(t,e,r){t.uniform3iv(e,r)},bvec4:function(t,e,r){t.uniform4iv(e,r)},sampler2D:function(t,e,r){t.uniform1iv(e,r)}};function l(r,i){return function(t){this.data[r].value=t;var e=this.data[r].location;1===i.size?n[i.type](this.gl,e,t):o[i.type](this.gl,e,t)}}function h(t,e){for(var r=e,i=0;i<t.length-1;i++){var n=r[t[i]]||{data:{}};r[t[i]]=n,r=n}return r}t.exports=function(t,e){var r={data:{}};r.gl=t;for(var i=Object.keys(e),n=0;n<i.length;n++){var o=i[n],a=o.split(\".\"),u=a[a.length-1],s=h(a,r),f=e[o];s.data[u]=f,s.gl=t,Object.defineProperty(s,u,{get:c(u),set:l(u,f)})}return r}},function(t,e,r){var i={createContext:r(11),setVertexAttribArrays:r(1),GLBuffer:r(12),GLFramebuffer:r(13),GLShader:r(14),GLTexture:r(2),VertexArrayObject:r(15),shader:r(16)};t.exports&&(t.exports=i),\"undefined\"!=typeof window&&(window.vf=window.vf||{},window.vf.glCore=i)},function(t,e){t.exports=function(t,e){var r=t.getContext(\"webgl\",e)||t.getContext(\"experimental-webgl\",e);if(!r)throw new Error(\"This browser does not support webGL. Try using the canvas renderer\");return r}},function(t,e){var n=new ArrayBuffer(0),o=function(t,e,r,i){this.gl=t,this.buffer=t.createBuffer(),this.type=e||t.ARRAY_BUFFER,this.drawType=i||t.STATIC_DRAW,this.data=n,r&&this.upload(r),this._updateID=0};o.prototype.upload=function(t,e,r){r||this.bind();var i=this.gl;t=t||this.data,e=e||0,this.data.byteLength>=t.byteLength?i.bufferSubData(this.type,e,t):i.bufferData(this.type,t,this.drawType),this.data=t},o.prototype.bind=function(){this.gl.bindBuffer(this.type,this.buffer)},o.createVertexBuffer=function(t,e,r){return new o(t,t.ARRAY_BUFFER,e,r)},o.createIndexBuffer=function(t,e,r){return new o(t,t.ELEMENT_ARRAY_BUFFER,e,r)},o.create=function(t,e,r,i){return new o(t,e,r,i)},o.prototype.destroy=function(){this.gl.deleteBuffer(this.buffer)},t.exports=o},function(t,e,r){var a=r(2),u=function(t,e,r){this.gl=t,this.framebuffer=t.createFramebuffer(),this.stencil=null,this.texture=null,this.width=e||100,this.height=r||100};u.prototype.enableTexture=function(t){var e=this.gl;this.texture=t||new a(e),this.texture.bind(),this.bind(),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.texture.texture,0)},u.prototype.enableStencil=function(){if(!this.stencil){var t=this.gl;this.stencil=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,this.stencil),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,this.stencil),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,this.width,this.height)}},u.prototype.clear=function(t,e,r,i){this.bind();var n=this.gl;n.clearColor(t,e,r,i),n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT)},u.prototype.bind=function(){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer)},u.prototype.unbind=function(){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,null)},u.prototype.resize=function(t,e){var r=this.gl;this.width=t,this.height=e,this.texture&&this.texture.uploadData(null,t,e),this.stencil&&(r.bindRenderbuffer(r.RENDERBUFFER,this.stencil),r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,t,e))},u.prototype.destroy=function(){var t=this.gl;this.texture&&this.texture.destroy(),t.deleteFramebuffer(this.framebuffer),this.gl=null,this.stencil=null,this.texture=null},u.createRGBA=function(t,e,r,i){var n=a.fromData(t,null,e,r);n.enableNearestScaling(),n.enableWrapClamp();var o=new u(t,e,r);return o.enableTexture(n),o.unbind(),o},u.createFloat32=function(t,e,r,i){var n=new a.fromData(t,i,e,r);n.enableNearestScaling(),n.enableWrapClamp();var o=new u(t,e,r);return o.enableTexture(n),o.unbind(),o},t.exports=u},function(t,e,r){var o=r(3),a=r(4),u=r(6),s=r(8),f=r(9),i=function(t,e,r,i,n){this.gl=t,i&&(e=s(e,i),r=s(r,i)),this.program=o(t,e,r,n),this.attributes=a(t,this.program),this.uniformData=u(t,this.program),this.uniforms=f(t,this.uniformData)};i.prototype.bind=function(){return this.gl.useProgram(this.program),this},i.prototype.destroy=function(){this.attributes=null,this.uniformData=null,this.uniforms=null,this.gl.deleteProgram(this.program)},t.exports=i},function(t,e,r){var n=r(1);function i(t,e){if(this.nativeVaoExtension=null,i.FORCE_NATIVE||(this.nativeVaoExtension=t.getExtension(\"OES_vertex_array_object\")||t.getExtension(\"MOZ_OES_vertex_array_object\")||t.getExtension(\"WEBKIT_OES_vertex_array_object\")),this.nativeState=e,this.nativeVaoExtension){this.nativeVao=this.nativeVaoExtension.createVertexArrayOES();var r=t.getParameter(t.MAX_VERTEX_ATTRIBS);this.nativeState={tempAttribState:new Array(r),attribState:new Array(r)}}this.gl=t,this.attributes=[],this.indexBuffer=null,this.dirty=!1}i.prototype.constructor=i,(t.exports=i).FORCE_NATIVE=!1,i.prototype.bind=function(){if(this.nativeVao){if(this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao),this.dirty)return this.dirty=!1,this.activate(),this;this.indexBuffer&&this.indexBuffer.bind()}else this.activate();return this},i.prototype.unbind=function(){return this.nativeVao&&this.nativeVaoExtension.bindVertexArrayOES(null),this},i.prototype.activate=function(){for(var t=this.gl,e=null,r=0;r<this.attributes.length;r++){var i=this.attributes[r];e!==i.buffer&&(i.buffer.bind(),e=i.buffer),t.vertexAttribPointer(i.attribute.location,i.attribute.size,i.type||t.FLOAT,i.normalized||!1,i.stride||0,i.start||0)}return n(t,this.attributes,this.nativeState),this.indexBuffer&&this.indexBuffer.bind(),this},i.prototype.addAttribute=function(t,e,r,i,n,o){return this.attributes.push({buffer:t,attribute:e,location:e.location,type:r||this.gl.FLOAT,normalized:i||!1,stride:n||0,start:o||0}),this.dirty=!0,this},i.prototype.addIndex=function(t){return this.indexBuffer=t,this.dirty=!0,this},i.prototype.clear=function(){return this.nativeVao&&this.nativeVaoExtension.bindVertexArrayOES(this.nativeVao),this.attributes.length=0,this.indexBuffer=null,this},i.prototype.draw=function(t,e,r){var i=this.gl;return this.indexBuffer?i.drawElements(t,e||this.indexBuffer.data.length,i.UNSIGNED_SHORT,2*(r||0)):i.drawArrays(t,r,e||this.getSize()),this},i.prototype.destroy=function(){this.gl=null,this.indexBuffer=null,this.attributes=null,this.nativeState=null,this.nativeVao&&this.nativeVaoExtension.deleteVertexArrayOES(this.nativeVao),this.nativeVaoExtension=null,this.nativeVao=null},i.prototype.getSize=function(){var t=this.attributes[0];return t.buffer.data.length/(t.stride/4||t.attribute.size)}},function(t,e,r){t.exports={compileProgram:r(3),defaultValue:r(7),extractAttributes:r(4),extractUniforms:r(6),generateUniformAccessObject:r(9),setPrecision:r(8),mapSize:r(5),mapType:r(0)}}])});\n//# sourceMappingURL=vf-gl-core.min.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import {\n    uid, getUrlFileExtension, decomposeDataUri, getSvgSize,\n    getResolutionOfUrl, BaseTextureCache, TextureCache,\n} from '../utils';\nimport settings from '../settings';\nimport EventEmitter from 'eventemitter3';\nimport determineCrossOrigin from '../utils/determineCrossOrigin';\nimport bitTwiddle from 'bit-twiddle';\n\n/**\n * A texture stores the information that represents an image. All textures have a base texture.\n *\n * @class\n * @extends EventEmitter\n * @memberof SINT\n */\nexport default class BaseTexture extends EventEmitter\n{\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} [source] - the source object of the texture.\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - See {@link SINT.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture\n     */\n    constructor(source, scaleMode, resolution)\n    {\n        super();\n\n        this.uid = uid();\n\n        this.touched = 0;\n\n        /**\n         * The resolution / device pixel ratio of the texture\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = resolution || settings.RESOLUTION;\n\n        /**\n         * The width of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.width = 100;\n\n        /**\n         * The height of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.height = 100;\n\n        // TODO docs\n        // used to store the actual dimensions of the source\n        /**\n         * Used to store the actual width of the source of this texture\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.realWidth = 100;\n        /**\n         * Used to store the actual height of the source of this texture\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.realHeight = 100;\n\n        /**\n         * The scale mode to apply when scaling this texture\n         *\n         * @member {number}\n         * @default SINT.settings.SCALE_MODE\n         * @see SINT.SCALE_MODES\n         */\n        this.scaleMode = scaleMode !== undefined ? scaleMode : settings.SCALE_MODE;\n\n        /**\n         * Set to true once the base texture has successfully loaded.\n         *\n         * This is never true if the underlying source fails to load or has no texture data.\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        this.hasLoaded = false;\n\n        /**\n         * Set to true if the source is currently loading.\n         *\n         * If an Image source is loading the 'loaded' or 'error' event will be\n         * dispatched when the operation ends. An underyling source that is\n         * immediately-available bypasses loading entirely.\n         *\n         * @readonly\n         * @member {boolean}\n         */\n        this.isLoading = false;\n\n        /**\n         * The image source that is used to create the texture.\n         *\n         * TODO: Make this a setter that calls loadSource();\n         *\n         * @readonly\n         * @member {HTMLImageElement|HTMLCanvasElement}\n         */\n        this.source = null; // set in loadSource, if at all\n\n        /**\n         * The image source that is used to create the texture. This is used to\n         * store the original Svg source when it is replaced with a canvas element.\n         *\n         * TODO: Currently not in use but could be used when re-scaling svg.\n         *\n         * @readonly\n         * @member {Image}\n         */\n        this.origSource = null; // set in loadSvg, if at all\n\n        /**\n         * Type of image defined in source, eg. `png` or `svg`\n         *\n         * @readonly\n         * @member {string}\n         */\n        this.imageType = null; // set in updateImageType\n\n        /**\n         * Scale for source image. Used with Svg images to scale them before rasterization.\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.sourceScale = 1.0;\n\n        /**\n         * Controls if RGB channels should be pre-multiplied by Alpha  (WebGL only)\n         * All blend modes, and shaders written for default value. Change it on your own risk.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        this.premultipliedAlpha = true;\n\n        /**\n         * The image url of the texture\n         *\n         * @member {string}\n         */\n        this.imageUrl = null;\n\n        /**\n         * Whether or not the texture is a power of two, try to use power of two textures as much\n         * as you can\n         *\n         * @private\n         * @member {boolean}\n         */\n        this.isPowerOfTwo = false;\n\n        // used for webGL\n\n        /**\n         *\n         * Set this to true if a mipmap of this texture needs to be generated. This value needs\n         * to be set before the texture is used\n         * Also the texture must be a power of two size to work\n         *\n         * @member {boolean}\n         * @see SINT.MIPMAP_TEXTURES\n         */\n        this.mipmap = settings.MIPMAP_TEXTURES;\n\n        /**\n         *\n         * WebGL Texture wrap mode\n         *\n         * @member {number}\n         * @see SINT.WRAP_MODES\n         */\n        this.wrapMode = settings.WRAP_MODE;\n\n        /**\n         * A map of renderer IDs to webgl textures\n         *\n         * @private\n         * @member {object<number, WebGLTexture>}\n         */\n        this._glTextures = {};\n\n        this._enabled = 0;\n        this._virtalBoundId = -1;\n\n        /**\n         * If the object has been destroyed via destroy(). If true, it should not be used.\n         *\n         * @member {boolean}\n         * @private\n         * @readonly\n         */\n        this._destroyed = false;\n\n        /**\n         * The ids under which this BaseTexture has been added to the base texture cache. This is\n         * automatically set as long as BaseTexture.addToCache is used, but may not be set if a\n         * BaseTexture is added directly to the BaseTextureCache array.\n         *\n         * @member {string[]}\n         */\n        this.textureCacheIds = [];\n\n        // if no source passed don't try to load\n        if (source)\n        {\n            this.loadSource(source);\n        }\n\n        /**\n         * Fired when a not-immediately-available source finishes loading.\n         *\n         * @protected\n         * @event SINT.BaseTexture#loaded\n         * @param {SINT.BaseTexture} baseTexture - Resource loaded.\n         */\n\n        /**\n         * Fired when a not-immediately-available source fails to load.\n         *\n         * @protected\n         * @event SINT.BaseTexture#error\n         * @param {SINT.BaseTexture} baseTexture - Resource errored.\n         */\n\n        /**\n         * Fired when BaseTexture is updated.\n         *\n         * @protected\n         * @event SINT.BaseTexture#update\n         * @param {SINT.BaseTexture} baseTexture - Instance of texture being updated.\n         */\n\n        /**\n         * Fired when BaseTexture is destroyed.\n         *\n         * @protected\n         * @event SINT.BaseTexture#dispose\n         * @param {SINT.BaseTexture} baseTexture - Instance of texture being destroyed.\n         */\n    }\n\n    /**\n     * Updates the texture on all the webgl renderers, this also assumes the src has changed.\n     *\n     * @fires SINT.BaseTexture#update\n     */\n    update()\n    {\n        // Svg size is handled during load\n        if (this.imageType !== 'svg')\n        {\n            this.realWidth = this.source.naturalWidth || this.source.videoWidth || this.source.width;\n            this.realHeight = this.source.naturalHeight || this.source.videoHeight || this.source.height;\n\n            this._updateDimensions();\n        }\n\n        this.emit('update', this);\n    }\n\n    /**\n     * Update dimensions from real values\n     */\n    _updateDimensions()\n    {\n        this.width = this.realWidth / this.resolution;\n        this.height = this.realHeight / this.resolution;\n\n        this.isPowerOfTwo = bitTwiddle.isPow2(this.realWidth) && bitTwiddle.isPow2(this.realHeight);\n    }\n\n    /**\n     * Load a source.\n     *\n     * If the source is not-immediately-available, such as an image that needs to be\n     * downloaded, then the 'loaded' or 'error' event will be dispatched in the future\n     * and `hasLoaded` will remain false after this call.\n     *\n     * The logic state after calling `loadSource` directly or indirectly (eg. `fromImage`, `new BaseTexture`) is:\n     *\n     *     if (texture.hasLoaded) {\n     *        // texture ready for use\n     *     } else if (texture.isLoading) {\n     *        // listen to 'loaded' and/or 'error' events on texture\n     *     } else {\n     *        // not loading, not going to load UNLESS the source is reloaded\n     *        // (it may still make sense to listen to the events)\n     *     }\n     *\n     * @protected\n     * @param {HTMLImageElement|HTMLCanvasElement} source - the source object of the texture.\n     */\n    loadSource(source)\n    {\n        const wasLoading = this.isLoading;\n\n        this.hasLoaded = false;\n        this.isLoading = false;\n\n        if (wasLoading && this.source)\n        {\n            this.source.onload = null;\n            this.source.onerror = null;\n        }\n\n        const firstSourceLoaded = !this.source;\n\n        this.source = source;\n\n        // Apply source if loaded. Otherwise setup appropriate loading monitors.\n        if (((source.src && source.complete) || source.getContext) && source.width && source.height)\n        {\n            this._updateImageType();\n\n            if (this.imageType === 'svg')\n            {\n                this._loadSvgSource();\n            }\n            else\n            {\n                this._sourceLoaded();\n            }\n\n            if (firstSourceLoaded)\n            {\n                // send loaded event if previous source was null and we have been passed a pre-loaded IMG element\n                this.emit('loaded', this);\n            }\n        }\n        else if (!source.getContext)\n        {\n            // Image fail / not ready\n            this.isLoading = true;\n\n            const scope = this;\n\n            source.onload = () =>\n            {\n                scope._updateImageType();\n                source.onload = null;\n                source.onerror = null;\n\n                if (!scope.isLoading)\n                {\n                    return;\n                }\n\n                scope.isLoading = false;\n                scope._sourceLoaded();\n\n                if (scope.imageType === 'svg')\n                {\n                    scope._loadSvgSource();\n\n                    return;\n                }\n\n                scope.emit('loaded', scope);\n            };\n\n            source.onerror = () =>\n            {\n                source.onload = null;\n                source.onerror = null;\n\n                if (!scope.isLoading)\n                {\n                    return;\n                }\n\n                scope.isLoading = false;\n                scope.emit('error', scope);\n            };\n\n            // Per http://www.w3.org/TR/html5/embedded-content-0.html#the-img-element\n            //   \"The value of `complete` can thus change while a script is executing.\"\n            // So complete needs to be re-checked after the callbacks have been added..\n            // NOTE: complete will be true if the image has no src so best to check if the src is set.\n            if (source.complete && source.src)\n            {\n                // ..and if we're complete now, no need for callbacks\n                source.onload = null;\n                source.onerror = null;\n\n                if (scope.imageType === 'svg')\n                {\n                    scope._loadSvgSource();\n\n                    return;\n                }\n\n                this.isLoading = false;\n\n                if (source.width && source.height)\n                {\n                    this._sourceLoaded();\n\n                    // If any previous subscribers possible\n                    if (wasLoading)\n                    {\n                        this.emit('loaded', this);\n                    }\n                }\n                // If any previous subscribers possible\n                else if (wasLoading)\n                {\n                    this.emit('error', this);\n                }\n            }\n        }\n    }\n\n    /**\n     * Updates type of the source image.\n     */\n    _updateImageType()\n    {\n        if (!this.imageUrl)\n        {\n            return;\n        }\n\n        const dataUri = decomposeDataUri(this.imageUrl);\n        let imageType;\n\n        if (dataUri && dataUri.mediaType === 'image')\n        {\n            // Check for subType validity\n            const firstSubType = dataUri.subType.split('+')[0];\n\n            imageType = getUrlFileExtension(`.${firstSubType}`);\n\n            if (!imageType)\n            {\n                throw new Error('Invalid image type in data URI.');\n            }\n        }\n        else\n        {\n            imageType = getUrlFileExtension(this.imageUrl);\n\n            if (!imageType)\n            {\n                imageType = 'png';\n            }\n        }\n\n        this.imageType = imageType;\n    }\n\n    /**\n     * Checks if `source` is an SVG image and whether it's loaded via a URL or a data URI. Then calls\n     * `_loadSvgSourceUsingDataUri` or `_loadSvgSourceUsingXhr`.\n     */\n    _loadSvgSource()\n    {\n        if (this.imageType !== 'svg')\n        {\n            // Do nothing if source is not svg\n            return;\n        }\n\n        const dataUri = decomposeDataUri(this.imageUrl);\n\n        if (dataUri)\n        {\n            this._loadSvgSourceUsingDataUri(dataUri);\n        }\n        else\n        {\n            // We got an URL, so we need to do an XHR to check the svg size\n            this._loadSvgSourceUsingXhr();\n        }\n    }\n\n    /**\n     * Reads an SVG string from data URI and then calls `_loadSvgSourceUsingString`.\n     *\n     * @param {string} dataUri - The data uri to load from.\n     */\n    _loadSvgSourceUsingDataUri(dataUri)\n    {\n        let svgString;\n\n        if (dataUri.encoding === 'base64')\n        {\n            if (!atob)\n            {\n                throw new Error('Your browser doesn\\'t support base64 conversions.');\n            }\n            svgString = atob(dataUri.data);\n        }\n        else\n        {\n            svgString = dataUri.data;\n        }\n\n        this._loadSvgSourceUsingString(svgString);\n    }\n\n    /**\n     * Loads an SVG string from `imageUrl` using XHR and then calls `_loadSvgSourceUsingString`.\n     */\n    _loadSvgSourceUsingXhr()\n    {\n        const svgXhr = new XMLHttpRequest();\n\n        // This throws error on IE, so SVG Document can't be used\n        // svgXhr.responseType = 'document';\n\n        // This is not needed since we load the svg as string (breaks IE too)\n        // but overrideMimeType() can be used to force the response to be parsed as XML\n        // svgXhr.overrideMimeType('image/svg+xml');\n\n        svgXhr.onload = () =>\n        {\n            if (svgXhr.readyState !== svgXhr.DONE || svgXhr.status !== 200)\n            {\n                throw new Error('Failed to load SVG using XHR.');\n            }\n\n            this._loadSvgSourceUsingString(svgXhr.response);\n        };\n\n        svgXhr.onerror = () => this.emit('error', this);\n\n        svgXhr.open('GET', this.imageUrl, true);\n        svgXhr.send();\n    }\n\n    /**\n     * Loads texture using an SVG string. The original SVG Image is stored as `origSource` and the\n     * created canvas is the new `source`. The SVG is scaled using `sourceScale`. Called by\n     * `_loadSvgSourceUsingXhr` or `_loadSvgSourceUsingDataUri`.\n     *\n     * @param  {string} svgString SVG source as string\n     *\n     * @fires SINT.BaseTexture#loaded\n     */\n    _loadSvgSourceUsingString(svgString)\n    {\n        const svgSize = getSvgSize(svgString);\n\n        const svgWidth = svgSize.width;\n        const svgHeight = svgSize.height;\n\n        if (!svgWidth || !svgHeight)\n        {\n            throw new Error('The SVG image must have width and height defined (in pixels), canvas API needs them.');\n        }\n\n        // Scale realWidth and realHeight\n        this.realWidth = Math.round(svgWidth * this.sourceScale);\n        this.realHeight = Math.round(svgHeight * this.sourceScale);\n\n        this._updateDimensions();\n\n        // Create a canvas element\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.realWidth;\n        canvas.height = this.realHeight;\n        canvas._SINTId = `canvas_${uid()}`;\n\n        // Draw the Svg to the canvas\n        canvas\n            .getContext('2d')\n            .drawImage(this.source, 0, 0, svgWidth, svgHeight, 0, 0, this.realWidth, this.realHeight);\n\n        // Replace the original source image with the canvas\n        this.origSource = this.source;\n        this.source = canvas;\n\n        // Add also the canvas in cache (destroy clears by `imageUrl` and `source._SINTId`)\n        BaseTexture.addToCache(this, canvas._SINTId);\n\n        this.isLoading = false;\n        this._sourceLoaded();\n        this.emit('loaded', this);\n    }\n\n    /**\n     * Used internally to update the width, height, and some other tracking vars once\n     * a source has successfully loaded.\n     *\n     * @private\n     */\n    _sourceLoaded()\n    {\n        this.hasLoaded = true;\n        this.update();\n    }\n\n    /**\n     * Destroys this base texture\n     *\n     */\n    destroy()\n    {\n        if (this.imageUrl)\n        {\n            delete TextureCache[this.imageUrl];\n\n            this.imageUrl = null;\n\n            if (!navigator.isCocoonJS)\n            {\n                this.source.src = '';\n            }\n        }\n\n        this.source = null;\n\n        this.dispose();\n\n        BaseTexture.removeFromCache(this);\n        this.textureCacheIds = null;\n\n        this._destroyed = true;\n    }\n\n    /**\n     * Frees the texture from WebGL memory without destroying this texture object.\n     * This means you can still use the texture later which will upload it to GPU\n     * memory again.\n     *\n     * @fires SINT.BaseTexture#dispose\n     */\n    dispose()\n    {\n        this.emit('dispose', this);\n    }\n\n    /**\n     * Changes the source image of the texture.\n     * The original source must be an Image element.\n     *\n     * @param {string} newSrc - the path of the image\n     */\n    updateSourceImage(newSrc)\n    {\n        this.source.src = newSrc;\n\n        this.loadSource(this.source);\n    }\n\n    /**\n     * Helper function that creates a base texture from the given image url.\n     * If the image is not in the base texture cache it will be created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin=(auto)] - Should use anonymous CORS? Defaults to true if the URL is not a data-URI.\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - See {@link SINT.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with Svg images.\n     * @return {SINT.BaseTexture} The new base texture.\n     */\n    static fromImage(imageUrl, crossorigin, scaleMode, sourceScale)\n    {\n        let baseTexture = BaseTextureCache[imageUrl];\n\n        if (!baseTexture)\n        {\n            // new Image() breaks tex loading in some versions of Chrome.\n            // See https://code.google.com/p/chromium/issues/detail?id=238071\n            const image = new Image();// document.createElement('img');\n\n            if (crossorigin === undefined && imageUrl.indexOf('data:') !== 0)\n            {\n                image.crossOrigin = determineCrossOrigin(imageUrl);\n            }\n            else if (crossorigin)\n            {\n                image.crossOrigin = typeof crossorigin === 'string' ? crossorigin : 'anonymous';\n            }\n\n            baseTexture = new BaseTexture(image, scaleMode);\n            baseTexture.imageUrl = imageUrl;\n\n            if (sourceScale)\n            {\n                baseTexture.sourceScale = sourceScale;\n            }\n\n            // if there is an @2x at the end of the url we are going to assume its a highres image\n            baseTexture.resolution = getResolutionOfUrl(imageUrl);\n\n            image.src = imageUrl; // Setting this triggers load\n\n            BaseTexture.addToCache(baseTexture, imageUrl);\n        }\n\n        return baseTexture;\n    }\n\n    /**\n     * Helper function that creates a base texture from the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} scaleMode - See {@link SINT.SCALE_MODES} for possible values\n     * @param {string} [origin='canvas'] - A string origin of who created the base texture\n     * @return {SINT.BaseTexture} The new base texture.\n     */\n    static fromCanvas(canvas, scaleMode, origin = 'canvas')\n    {\n        if (!canvas._SINTId)\n        {\n            canvas._SINTId = `${origin}_${uid()}`;\n        }\n\n        let baseTexture = BaseTextureCache[canvas._SINTId];\n\n        if (!baseTexture)\n        {\n            baseTexture = new BaseTexture(canvas, scaleMode);\n            BaseTexture.addToCache(baseTexture, canvas._SINTId);\n        }\n\n        return baseTexture;\n    }\n\n    /**\n     * Helper function that creates a base texture based on the source you provide.\n     * The source can be - image url, image element, canvas element. If the\n     * source is an image url or an image element and not in the base texture\n     * cache, it will be created and loaded.\n     *\n     * @static\n     * @param {string|HTMLImageElement|HTMLCanvasElement} source - The source to create base texture from.\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - See {@link SINT.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with Svg images.\n     * @return {SINT.BaseTexture} The new base texture.\n     */\n    static from(source, scaleMode, sourceScale)\n    {\n        if (typeof source === 'string')\n        {\n            return BaseTexture.fromImage(source, undefined, scaleMode, sourceScale);\n        }\n        else if (source instanceof HTMLImageElement)\n        {\n            const imageUrl = source.src;\n            let baseTexture = BaseTextureCache[imageUrl];\n\n            if (!baseTexture)\n            {\n                baseTexture = new BaseTexture(source, scaleMode);\n                baseTexture.imageUrl = imageUrl;\n\n                if (sourceScale)\n                {\n                    baseTexture.sourceScale = sourceScale;\n                }\n\n                // if there is an @2x at the end of the url we are going to assume its a highres image\n                baseTexture.resolution = getResolutionOfUrl(imageUrl);\n\n                BaseTexture.addToCache(baseTexture, imageUrl);\n            }\n\n            return baseTexture;\n        }\n        else if (source instanceof HTMLCanvasElement)\n        {\n            return BaseTexture.fromCanvas(source, scaleMode);\n        }\n\n        // lets assume its a base texture!\n        return source;\n    }\n\n    /**\n     * Adds a BaseTexture to the global BaseTextureCache. This cache is shared across the whole SINT object.\n     *\n     * @static\n     * @param {SINT.BaseTexture} baseTexture - The BaseTexture to add to the cache.\n     * @param {string} id - The id that the BaseTexture will be stored against.\n     */\n    static addToCache(baseTexture, id)\n    {\n        if (id)\n        {\n            if (baseTexture.textureCacheIds.indexOf(id) === -1)\n            {\n                baseTexture.textureCacheIds.push(id);\n            }\n\n            // @if DEBUG\n            /* eslint-disable no-console */\n            if (BaseTextureCache[id])\n            {\n                console.warn(`BaseTexture added to the cache with an id [${id}] that already had an entry`);\n            }\n            /* eslint-enable no-console */\n            // @endif\n\n            BaseTextureCache[id] = baseTexture;\n        }\n    }\n\n    /**\n     * Remove a BaseTexture from the global BaseTextureCache.\n     *\n     * @static\n     * @param {string|SINT.BaseTexture} baseTexture - id of a BaseTexture to be removed, or a BaseTexture instance itself.\n     * @return {SINT.BaseTexture|null} The BaseTexture that was removed.\n     */\n    static removeFromCache(baseTexture)\n    {\n        if (typeof baseTexture === 'string')\n        {\n            const baseTextureFromCache = BaseTextureCache[baseTexture];\n\n            if (baseTextureFromCache)\n            {\n                const index = baseTextureFromCache.textureCacheIds.indexOf(baseTexture);\n\n                if (index > -1)\n                {\n                    baseTextureFromCache.textureCacheIds.splice(index, 1);\n                }\n\n                delete BaseTextureCache[baseTexture];\n\n                return baseTextureFromCache;\n            }\n        }\n        else if (baseTexture && baseTexture.textureCacheIds)\n        {\n            for (let i = 0; i < baseTexture.textureCacheIds.length; ++i)\n            {\n                delete BaseTextureCache[baseTexture.textureCacheIds[i]];\n            }\n\n            baseTexture.textureCacheIds.length = 0;\n\n            return baseTexture;\n        }\n\n        return null;\n    }\n}\n","/**\n * @class\n * @memberof SINT\n */\nexport default class WebGLManager\n{\n    /**\n     * @param {SINT.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        /**\n         * The renderer this manager works for.\n         *\n         * @member {SINT.WebGLRenderer}\n         */\n        this.renderer = renderer;\n\n        this.renderer.on('context', this.onContextChange, this);\n    }\n\n    /**\n     * Generic method called when there is a WebGL context change.\n     *\n     */\n    onContextChange()\n    {\n        // do some codes init!\n    }\n\n    /**\n     * Generic destroy methods to be overridden by the subclass\n     *\n     */\n    destroy()\n    {\n        this.renderer.off('context', this.onContextChange, this);\n\n        this.renderer = null;\n    }\n}\n","/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * @class\n * @memberof SINT\n */\nexport default class Point\n{\n    /**\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(x = 0, y = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n    }\n\n    /**\n     * Creates a clone of this point\n     *\n     * @return {SINT.Point} a copy of the point\n     */\n    clone()\n    {\n        return new Point(this.x, this.y);\n    }\n\n    /**\n     * Copies x and y from the given point\n     *\n     * @param {SINT.Point} p - The point to copy.\n     */\n    copy(p)\n    {\n        this.set(p.x, p.y);\n    }\n\n    /**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {SINT.Point} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */\n    equals(p)\n    {\n        return (p.x === this.x) && (p.y === this.y);\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    set(x, y)\n    {\n        this.x = x || 0;\n        this.y = y || ((y !== 0) ? this.x : 0);\n    }\n\n}\n","import Point from './Point';\nimport { PI_2 } from '../const';\n\n/**\n * The SINTJS Matrix class as an object, which makes it a lot faster,\n * here is a representation of it :\n * | a | c | tx|\n * | b | d | ty|\n * | 0 | 0 | 1 |\n *\n * @class\n * @memberof SINT\n */\nexport default class Matrix\n{\n    /**\n     * @param {number} [a=1] - x scale\n     * @param {number} [b=0] - x skew\n     * @param {number} [c=0] - y skew\n     * @param {number} [d=1] - y scale\n     * @param {number} [tx=0] - x translation\n     * @param {number} [ty=0] - y translation\n     */\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0)\n    {\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.a = a;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.b = b;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.c = c;\n\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.d = d;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.tx = tx;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.ty = ty;\n\n        this.array = null;\n    }\n\n    /**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     *\n     * @param {number[]} array - The array that the matrix will be populated from.\n     */\n    fromArray(array)\n    {\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    }\n\n    /**\n     * sets the matrix properties\n     *\n     * @param {number} a - Matrix component\n     * @param {number} b - Matrix component\n     * @param {number} c - Matrix component\n     * @param {number} d - Matrix component\n     * @param {number} tx - Matrix component\n     * @param {number} ty - Matrix component\n     *\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    set(a, b, c, d, tx, ty)\n    {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    }\n\n    /**\n     * Creates an array from the current Matrix object.\n     *\n     * @param {boolean} transpose - Whether we need to transpose the matrix or not\n     * @param {Float32Array} [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @return {number[]} the newly created array which contains the matrix\n     */\n    toArray(transpose, out)\n    {\n        if (!this.array)\n        {\n            this.array = new Float32Array(9);\n        }\n\n        const array = out || this.array;\n\n        if (transpose)\n        {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        }\n        else\n        {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    }\n\n    /**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     *\n     * @param {SINT.Point} pos - The origin\n     * @param {SINT.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {SINT.Point} The new point, transformed through this matrix\n     */\n    apply(pos, newPos)\n    {\n        newPos = newPos || new Point();\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (this.a * x) + (this.c * y) + this.tx;\n        newPos.y = (this.b * x) + (this.d * y) + this.ty;\n\n        return newPos;\n    }\n\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     *\n     * @param {SINT.Point} pos - The origin\n     * @param {SINT.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {SINT.Point} The new point, inverse-transformed through this matrix\n     */\n    applyInverse(pos, newPos)\n    {\n        newPos = newPos || new Point();\n\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (this.d * id * x) + (-this.c * id * y) + (((this.ty * this.c) - (this.tx * this.d)) * id);\n        newPos.y = (this.a * id * y) + (-this.b * id * x) + (((-this.ty * this.a) + (this.tx * this.b)) * id);\n\n        return newPos;\n    }\n\n    /**\n     * Translates the matrix on the x and y.\n     *\n     * @param {number} x How much to translate x by\n     * @param {number} y How much to translate y by\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    translate(x, y)\n    {\n        this.tx += x;\n        this.ty += y;\n\n        return this;\n    }\n\n    /**\n     * Applies a scale transformation to the matrix.\n     *\n     * @param {number} x The amount to scale horizontally\n     * @param {number} y The amount to scale vertically\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    scale(x, y)\n    {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n\n        return this;\n    }\n\n    /**\n     * Applies a rotation transformation to the matrix.\n     *\n     * @param {number} angle - The angle in radians.\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    rotate(angle)\n    {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        const a1 = this.a;\n        const c1 = this.c;\n        const tx1 = this.tx;\n\n        this.a = (a1 * cos) - (this.b * sin);\n        this.b = (a1 * sin) + (this.b * cos);\n        this.c = (c1 * cos) - (this.d * sin);\n        this.d = (c1 * sin) + (this.d * cos);\n        this.tx = (tx1 * cos) - (this.ty * sin);\n        this.ty = (tx1 * sin) + (this.ty * cos);\n\n        return this;\n    }\n\n    /**\n     * Appends the given Matrix to this Matrix.\n     *\n     * @param {SINT.Matrix} matrix - The matrix to append.\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    append(matrix)\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n\n        this.a = (matrix.a * a1) + (matrix.b * c1);\n        this.b = (matrix.a * b1) + (matrix.b * d1);\n        this.c = (matrix.c * a1) + (matrix.d * c1);\n        this.d = (matrix.c * b1) + (matrix.d * d1);\n\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\n        return this;\n    }\n\n    /**\n     * Sets the matrix based on all the available properties\n     *\n     * @param {number} x - Position on the x axis\n     * @param {number} y - Position on the y axis\n     * @param {number} pivotX - Pivot on the x axis\n     * @param {number} pivotY - Pivot on the y axis\n     * @param {number} scaleX - Scale on the x axis\n     * @param {number} scaleY - Scale on the y axis\n     * @param {number} rotation - Rotation in radians\n     * @param {number} skewX - Skew on the x axis\n     * @param {number} skewY - Skew on the y axis\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    setTransform(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY)\n    {\n        this.a = Math.cos(rotation + skewY) * scaleX;\n        this.b = Math.sin(rotation + skewY) * scaleX;\n        this.c = -Math.sin(rotation - skewX) * scaleY;\n        this.d = Math.cos(rotation - skewX) * scaleY;\n\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\n        return this;\n    }\n\n    /**\n     * Prepends the given Matrix to this Matrix.\n     *\n     * @param {SINT.Matrix} matrix - The matrix to prepend\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    prepend(matrix)\n    {\n        const tx1 = this.tx;\n\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1)\n        {\n            const a1 = this.a;\n            const c1 = this.c;\n\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\n        }\n\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\n        return this;\n    }\n\n    /**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     *\n     * @param {SINT.Transform|SINT.TransformStatic} transform - The transform to apply the properties to.\n     * @return {SINT.Transform|SINT.TransformStatic} The transform with the newly applied properties\n     */\n    decompose(transform)\n    {\n        // sort out rotation / skew..\n        const a = this.a;\n        const b = this.b;\n        const c = this.c;\n        const d = this.d;\n\n        const skewX = -Math.atan2(-c, d);\n        const skewY = Math.atan2(b, a);\n\n        const delta = Math.abs(skewX + skewY);\n\n        if (delta < 0.00001 || Math.abs(PI_2 - delta) < 0.00001)\n        {\n            transform.rotation = skewY;\n\n            if (a < 0 && d >= 0)\n            {\n                transform.rotation += (transform.rotation <= 0) ? Math.PI : -Math.PI;\n            }\n\n            transform.skew.x = transform.skew.y = 0;\n        }\n        else\n        {\n            transform.rotation = 0;\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n\n        // next set scale\n        transform.scale.x = Math.sqrt((a * a) + (b * b));\n        transform.scale.y = Math.sqrt((c * c) + (d * d));\n\n        // next set position\n        transform.position.x = this.tx;\n        transform.position.y = this.ty;\n\n        return transform;\n    }\n\n    /**\n     * Inverts this matrix\n     *\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    invert()\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n        const tx1 = this.tx;\n        const n = (a1 * d1) - (b1 * c1);\n\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = ((c1 * this.ty) - (d1 * tx1)) / n;\n        this.ty = -((a1 * this.ty) - (b1 * tx1)) / n;\n\n        return this;\n    }\n\n    /**\n     * Resets this Matix to an identity (default) matrix.\n     *\n     * @return {SINT.Matrix} This matrix. Good for chaining method calls.\n     */\n    identity()\n    {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n\n        return this;\n    }\n\n    /**\n     * Creates a new Matrix object with the same values as this one.\n     *\n     * @return {SINT.Matrix} A copy of this matrix. Good for chaining method calls.\n     */\n    clone()\n    {\n        const matrix = new Matrix();\n\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     *\n     * @param {SINT.Matrix} matrix - The matrix to copy from.\n     * @return {SINT.Matrix} The matrix given in parameter with its values updated.\n     */\n    copy(matrix)\n    {\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * A default (identity) matrix\n     *\n     * @static\n     * @const\n     */\n    static get IDENTITY()\n    {\n        return new Matrix();\n    }\n\n    /**\n     * A temp matrix\n     *\n     * @static\n     * @const\n     */\n    static get TEMP_MATRIX()\n    {\n        return new Matrix();\n    }\n}\n","import { SHAPES } from '../../const';\n\n/**\n * Rectangle object is an area defined by its position, as indicated by its top-left corner\n * point (x, y) and by its width and its height.\n *\n * @class\n * @memberof SINT\n */\nexport default class Rectangle\n{\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rectangle\n     * @param {number} [width=0] - The overall width of this rectangle\n     * @param {number} [height=0] - The overall height of this rectangle\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = Number(x);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = Number(y);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = Number(width);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = Number(height);\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default SINT.SHAPES.RECT\n         * @see SINT.SHAPES\n         */\n        this.type = SHAPES.RECT;\n    }\n\n    /**\n     * returns the left edge of the rectangle\n     *\n     * @member {number}\n     */\n    get left()\n    {\n        return this.x;\n    }\n\n    /**\n     * returns the right edge of the rectangle\n     *\n     * @member {number}\n     */\n    get right()\n    {\n        return this.x + this.width;\n    }\n\n    /**\n     * returns the top edge of the rectangle\n     *\n     * @member {number}\n     */\n    get top()\n    {\n        return this.y;\n    }\n\n    /**\n     * returns the bottom edge of the rectangle\n     *\n     * @member {number}\n     */\n    get bottom()\n    {\n        return this.y + this.height;\n    }\n\n    /**\n     * A constant empty rectangle.\n     *\n     * @static\n     * @constant\n     */\n    static get EMPTY()\n    {\n        return new Rectangle(0, 0, 0, 0);\n    }\n\n    /**\n     * Creates a clone of this Rectangle\n     *\n     * @return {SINT.Rectangle} a copy of the rectangle\n     */\n    clone()\n    {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Copies another rectangle to this one.\n     *\n     * @param {SINT.Rectangle} rectangle - The rectangle to copy.\n     * @return {SINT.Rectangle} Returns itself.\n     */\n    copy(rectangle)\n    {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n\n        return this;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rectangle\n     */\n    contains(x, y)\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n\n        if (x >= this.x && x < this.x + this.width)\n        {\n            if (y >= this.y && y < this.y + this.height)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Pads the rectangle making it grow in all directions.\n     *\n     * @param {number} paddingX - The horizontal padding amount.\n     * @param {number} [paddingY] - The vertical padding amount.\n     */\n    pad(paddingX, paddingY)\n    {\n        paddingX = paddingX || 0;\n        paddingY = paddingY || ((paddingY !== 0) ? paddingX : 0);\n\n        this.x -= paddingX;\n        this.y -= paddingY;\n\n        this.width += paddingX * 2;\n        this.height += paddingY * 2;\n    }\n\n    /**\n     * Fits this rectangle around the passed one.\n     *\n     * @param {SINT.Rectangle} rectangle - The rectangle to fit.\n     */\n    fit(rectangle)\n    {\n        if (this.x < rectangle.x)\n        {\n            this.width += this.x;\n            if (this.width < 0)\n            {\n                this.width = 0;\n            }\n\n            this.x = rectangle.x;\n        }\n\n        if (this.y < rectangle.y)\n        {\n            this.height += this.y;\n            if (this.height < 0)\n            {\n                this.height = 0;\n            }\n            this.y = rectangle.y;\n        }\n\n        if (this.x + this.width > rectangle.x + rectangle.width)\n        {\n            this.width = rectangle.width - this.x;\n            if (this.width < 0)\n            {\n                this.width = 0;\n            }\n        }\n\n        if (this.y + this.height > rectangle.y + rectangle.height)\n        {\n            this.height = rectangle.height - this.y;\n            if (this.height < 0)\n            {\n                this.height = 0;\n            }\n        }\n    }\n\n    /**\n     * Enlarges this rectangle to include the passed rectangle.\n     *\n     * @param {SINT.Rectangle} rectangle - The rectangle to include.\n     */\n    enlarge(rectangle)\n    {\n        const x1 = Math.min(this.x, rectangle.x);\n        const x2 = Math.max(this.x + this.width, rectangle.x + rectangle.width);\n        const y1 = Math.min(this.y, rectangle.y);\n        const y2 = Math.max(this.y + this.height, rectangle.y + rectangle.height);\n\n        this.x = x1;\n        this.width = x2 - x1;\n        this.y = y1;\n        this.height = y2 - y1;\n    }\n}\n","import { removeItems } from '../utils';\nimport DisplayObject from './DisplayObject';\n\n/**\n * A Container represents a collection of display objects.\n * It is the base class of all display objects that act as a container for other objects.\n *\n *```js\n * let container = new SINT.Container();\n * container.addChild(sprite);\n * ```\n *\n * @class\n * @extends SINT.DisplayObject\n * @memberof SINT\n */\nexport default class Container extends DisplayObject\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n        /**\n         * The array of children of this container.\n         *\n         * @member {SINT.DisplayObject[]}\n         * @readonly\n         */\n        this.children = [];\n    }\n\n    /**\n     * Overridable method that can be used by Container subclasses whenever the children array is modified\n     *\n     * @private\n     */\n    onChildrenChange()\n    {\n        /* empty */\n    }\n\n    /**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     *\n     * @param {...SINT.DisplayObject} child - The DisplayObject(s) to add to the container\n     * @return {SINT.DisplayObject} The first child that was added.\n     */\n    addChild(child)\n    {\n        const argumentsLength = arguments.length;\n\n        // if there is only one argument we can bypass looping through the them\n        if (argumentsLength > 1)\n        {\n            // loop through the arguments property and add all children\n            // use it the right way (.length and [i]) so that this function can still be optimised by JS runtimes\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            // if the child has a parent then lets remove it as SINTJS objects can only exist in one place\n            if (child.parent)\n            {\n                child.parent.removeChild(child);\n            }\n\n            child.parent = this;\n            // ensure child transform will be recalculated\n            child.transform._parentID = -1;\n\n            this.children.push(child);\n\n            // ensure bounds will be recalculated\n            this._boundsID++;\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(this.children.length - 1);\n            child.emit('added', this);\n        }\n\n        return child;\n    }\n\n    /**\n     * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n     *\n     * @param {SINT.DisplayObject} child - The child to add\n     * @param {number} index - The index to place the child in\n     * @return {SINT.DisplayObject} The child that was added.\n     */\n    addChildAt(child, index)\n    {\n        if (index < 0 || index > this.children.length)\n        {\n            throw new Error(`${child}addChildAt: The index ${index} supplied is out of bounds ${this.children.length}`);\n        }\n\n        if (child.parent)\n        {\n            child.parent.removeChild(child);\n        }\n\n        child.parent = this;\n        // ensure child transform will be recalculated\n        child.transform._parentID = -1;\n\n        this.children.splice(index, 0, child);\n\n        // ensure bounds will be recalculated\n        this._boundsID++;\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('added', this);\n\n        return child;\n    }\n\n    /**\n     * Swaps the position of 2 Display Objects within this container.\n     *\n     * @param {SINT.DisplayObject} child - First display object to swap\n     * @param {SINT.DisplayObject} child2 - Second display object to swap\n     */\n    swapChildren(child, child2)\n    {\n        if (child === child2)\n        {\n            return;\n        }\n\n        const index1 = this.getChildIndex(child);\n        const index2 = this.getChildIndex(child2);\n\n        this.children[index1] = child2;\n        this.children[index2] = child;\n        this.onChildrenChange(index1 < index2 ? index1 : index2);\n    }\n\n    /**\n     * Returns the index position of a child DisplayObject instance\n     *\n     * @param {SINT.DisplayObject} child - The DisplayObject instance to identify\n     * @return {number} The index position of the child display object to identify\n     */\n    getChildIndex(child)\n    {\n        const index = this.children.indexOf(child);\n\n        if (index === -1)\n        {\n            throw new Error('The supplied DisplayObject must be a child of the caller');\n        }\n\n        return index;\n    }\n\n    /**\n     * Changes the position of an existing child in the display object container\n     *\n     * @param {SINT.DisplayObject} child - The child DisplayObject instance for which you want to change the index number\n     * @param {number} index - The resulting index number for the child display object\n     */\n    setChildIndex(child, index)\n    {\n        if (index < 0 || index >= this.children.length)\n        {\n            throw new Error(`The index ${index} supplied is out of bounds ${this.children.length}`);\n        }\n\n        const currentIndex = this.getChildIndex(child);\n\n        removeItems(this.children, currentIndex, 1); // remove from old position\n        this.children.splice(index, 0, child); // add at new position\n\n        this.onChildrenChange(index);\n    }\n\n    /**\n     * Returns the child at the specified index\n     *\n     * @param {number} index - The index to get the child at\n     * @return {SINT.DisplayObject} The child at the given index, if any.\n     */\n    getChildAt(index)\n    {\n        if (index < 0 || index >= this.children.length)\n        {\n            throw new Error(`getChildAt: Index (${index}) does not exist.`);\n        }\n\n        return this.children[index];\n    }\n\n    /**\n     * Removes one or more children from the container.\n     *\n     * @param {...SINT.DisplayObject} child - The DisplayObject(s) to remove\n     * @return {SINT.DisplayObject} The first child that was removed.\n     */\n    removeChild(child)\n    {\n        const argumentsLength = arguments.length;\n\n        // if there is only one argument we can bypass looping through the them\n        if (argumentsLength > 1)\n        {\n            // loop through the arguments property and add all children\n            // use it the right way (.length and [i]) so that this function can still be optimised by JS runtimes\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            const index = this.children.indexOf(child);\n\n            if (index === -1) return null;\n\n            child.parent = null;\n            // ensure child transform will be recalculated\n            child.transform._parentID = -1;\n            removeItems(this.children, index, 1);\n\n            // ensure bounds will be recalculated\n            this._boundsID++;\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(index);\n            child.emit('removed', this);\n        }\n\n        return child;\n    }\n\n    /**\n     * Removes a child from the specified index position.\n     *\n     * @param {number} index - The index to get the child from\n     * @return {SINT.DisplayObject} The child that was removed.\n     */\n    removeChildAt(index)\n    {\n        const child = this.getChildAt(index);\n\n        // ensure child transform will be recalculated..\n        child.parent = null;\n        child.transform._parentID = -1;\n        removeItems(this.children, index, 1);\n\n        // ensure bounds will be recalculated\n        this._boundsID++;\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('removed', this);\n\n        return child;\n    }\n\n    /**\n     * Removes all children from this container that are within the begin and end indexes.\n     *\n     * @param {number} [beginIndex=0] - The beginning position.\n     * @param {number} [endIndex=this.children.length] - The ending position. Default value is size of the container.\n     * @returns {DisplayObject[]} List of removed children\n     */\n    removeChildren(beginIndex = 0, endIndex)\n    {\n        const begin = beginIndex;\n        const end = typeof endIndex === 'number' ? endIndex : this.children.length;\n        const range = end - begin;\n        let removed;\n\n        if (range > 0 && range <= end)\n        {\n            removed = this.children.splice(begin, range);\n\n            for (let i = 0; i < removed.length; ++i)\n            {\n                removed[i].parent = null;\n                if (removed[i].transform)\n                {\n                    removed[i].transform._parentID = -1;\n                }\n            }\n\n            this._boundsID++;\n\n            this.onChildrenChange(beginIndex);\n\n            for (let i = 0; i < removed.length; ++i)\n            {\n                removed[i].emit('removed', this);\n            }\n\n            return removed;\n        }\n        else if (range === 0 && this.children.length === 0)\n        {\n            return [];\n        }\n\n        throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\n    }\n\n    /**\n     * Updates the transform on all children of this container for rendering\n     */\n    updateTransform()\n    {\n        this._boundsID++;\n\n        this.transform.updateTransform(this.parent.transform);\n\n        // TODO: check render flags, how to process stuff here\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        for (let i = 0, j = this.children.length; i < j; ++i)\n        {\n            const child = this.children[i];\n\n            if (child.visible)\n            {\n                child.updateTransform();\n            }\n        }\n    }\n\n    /**\n     * Recalculates the bounds of the container.\n     *\n     */\n    calculateBounds()\n    {\n        this._bounds.clear();\n\n        this._calculateBounds();\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            const child = this.children[i];\n\n            if (!child.visible || !child.renderable)\n            {\n                continue;\n            }\n\n            child.calculateBounds();\n\n            // TODO: filter+mask, need to mask both somehow\n            if (child._mask)\n            {\n                child._mask.calculateBounds();\n                this._bounds.addBoundsMask(child._bounds, child._mask._bounds);\n            }\n            else if (child.filterArea)\n            {\n                this._bounds.addBoundsArea(child._bounds, child.filterArea);\n            }\n            else\n            {\n                this._bounds.addBounds(child._bounds);\n            }\n        }\n\n        this._lastBoundsID = this._boundsID;\n    }\n\n    /**\n     * Recalculates the bounds of the object. Override this to\n     * calculate the bounds of the specific object (not including children).\n     *\n     */\n    _calculateBounds()\n    {\n        // FILL IN//\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {SINT.WebGLRenderer} renderer - The renderer\n     */\n    renderWebGL(renderer)\n    {\n        // if the object is not visible or the alpha is 0 then no need to render this element\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n        {\n            return;\n        }\n\n        // do a quick check to see if this element has a mask or a filter.\n        if (this._mask || this._filters)\n        {\n            this.renderAdvancedWebGL(renderer);\n        }\n        else\n        {\n            this._renderWebGL(renderer);\n\n            // simple render children!\n            for (let i = 0, j = this.children.length; i < j; ++i)\n            {\n                this.children[i].renderWebGL(renderer);\n            }\n        }\n    }\n\n    /**\n     * Render the object using the WebGL renderer and advanced features.\n     *\n     * @private\n     * @param {SINT.WebGLRenderer} renderer - The renderer\n     */\n    renderAdvancedWebGL(renderer)\n    {\n        renderer.flush();\n\n        const filters = this._filters;\n        const mask = this._mask;\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (filters)\n        {\n            if (!this._enabledFilters)\n            {\n                this._enabledFilters = [];\n            }\n\n            this._enabledFilters.length = 0;\n\n            for (let i = 0; i < filters.length; i++)\n            {\n                if (filters[i].enabled)\n                {\n                    this._enabledFilters.push(filters[i]);\n                }\n            }\n\n            if (this._enabledFilters.length)\n            {\n                renderer.filterManager.pushFilter(this, this._enabledFilters);\n            }\n        }\n\n        if (mask)\n        {\n            renderer.maskManager.pushMask(this, this._mask);\n        }\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._renderWebGL(renderer);\n\n        // now loop through the children and make sure they get rendered\n        for (let i = 0, j = this.children.length; i < j; i++)\n        {\n            this.children[i].renderWebGL(renderer);\n        }\n\n        renderer.flush();\n\n        if (mask)\n        {\n            renderer.maskManager.popMask(this, this._mask);\n        }\n\n        if (filters && this._enabledFilters && this._enabledFilters.length)\n        {\n            renderer.filterManager.popFilter();\n        }\n    }\n\n    /**\n     * To be overridden by the subclasses.\n     *\n     * @private\n     * @param {SINT.WebGLRenderer} renderer - The renderer\n     */\n    _renderWebGL(renderer) // eslint-disable-line no-unused-vars\n    {\n        // this is where content itself gets rendered...\n    }\n\n    /**\n     * To be overridden by the subclass\n     *\n     * @private\n     * @param {SINT.CanvasRenderer} renderer - The renderer\n     */\n    _renderCanvas(renderer) // eslint-disable-line no-unused-vars\n    {\n        // this is where content itself gets rendered...\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @param {SINT.CanvasRenderer} renderer - The renderer\n     */\n    renderCanvas(renderer)\n    {\n        // if not visible or the alpha is 0 then no need to render this\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n        {\n            return;\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.pushMask(this._mask);\n        }\n\n        this._renderCanvas(renderer);\n        for (let i = 0, j = this.children.length; i < j; ++i)\n        {\n            this.children[i].renderCanvas(renderer);\n        }\n\n        if (this._mask)\n        {\n            renderer.maskManager.popMask(renderer);\n        }\n    }\n\n    /**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n    destroy(options)\n    {\n        super.destroy();\n\n        const destroyChildren = typeof options === 'boolean' ? options : options && options.children;\n\n        const oldChildren = this.removeChildren(0, this.children.length);\n\n        if (destroyChildren)\n        {\n            for (let i = 0; i < oldChildren.length; ++i)\n            {\n                oldChildren[i].destroy(options);\n            }\n        }\n    }\n\n    /**\n     * The width of the Container, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     */\n    get width()\n    {\n        return this.scale.x * this.getLocalBounds().width;\n    }\n\n    set width(value) // eslint-disable-line require-jsdoc\n    {\n        const width = this.getLocalBounds().width;\n\n        if (width !== 0)\n        {\n            this.scale.x = value / width;\n        }\n        else\n        {\n            this.scale.x = 1;\n        }\n\n        this._width = value;\n    }\n\n    /**\n     * The height of the Container, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     */\n    get height()\n    {\n        return this.scale.y * this.getLocalBounds().height;\n    }\n\n    set height(value) // eslint-disable-line require-jsdoc\n    {\n        const height = this.getLocalBounds().height;\n\n        if (height !== 0)\n        {\n            this.scale.y = value / height;\n        }\n        else\n        {\n            this.scale.y = 1;\n        }\n\n        this._height = value;\n    }\n}\n\n// performance increase to avoid using call.. (10x faster)\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\n","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n","import BaseTexture from './BaseTexture';\nimport TextureUvs from './TextureUvs';\nimport EventEmitter from 'eventemitter3';\nimport { Rectangle, Point } from '../math';\nimport { TextureCache, getResolutionOfUrl } from '../utils';\nimport settings from '../settings';\n\n/**\n * A texture stores the information that represents an image or part of an image. It cannot be added\n * to the display list directly. Instead use it as the texture for a Sprite. If no frame is provided\n * then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * let texture = SINT.Texture.fromImage('assets/image.png');\n * let sprite1 = new SINT.Sprite(texture);\n * let sprite2 = new SINT.Sprite(texture);\n * ```\n *\n * Textures made from SVGs, loaded or not, cannot be used before the file finishes processing.\n * You can check for this by checking the sprite's _textureID property.\n * ```js\n * var texture = SINT.Texture.fromImage('assets/image.svg');\n * var sprite1 = new SINT.Sprite(texture);\n * //sprite1._textureID should not be undefined if the texture has finished processing the SVG file\n * ```\n * You can use a ticker or rAF to ensure your sprites load the finished textures after processing. See issue #3068.\n *\n * @class\n * @extends EventEmitter\n * @memberof SINT\n */\nexport default class Texture extends EventEmitter\n{\n    /**\n     * @param {SINT.BaseTexture} baseTexture - The base texture source to create the texture from\n     * @param {SINT.Rectangle} [frame] - The rectangle frame of the texture to show\n     * @param {SINT.Rectangle} [orig] - The area of original texture\n     * @param {SINT.Rectangle} [trim] - Trimmed rectangle of original texture\n     * @param {number} [rotate] - indicates how the texture was rotated by texture packer. See {@link SINT.GroupD8}\n     * @param {SINT.Point} [anchor] - Default anchor point used for sprite placement / rotation\n     */\n    constructor(baseTexture, frame, orig, trim, rotate, anchor)\n    {\n        super();\n\n        /**\n         * Does this Texture have any frame data assigned to it?\n         *\n         * @member {boolean}\n         */\n        this.noFrame = false;\n\n        if (!frame)\n        {\n            this.noFrame = true;\n            frame = new Rectangle(0, 0, 1, 1);\n        }\n\n        if (baseTexture instanceof Texture)\n        {\n            baseTexture = baseTexture.baseTexture;\n        }\n\n        /**\n         * The base texture that this texture uses.\n         *\n         * @member {SINT.BaseTexture}\n         */\n        this.baseTexture = baseTexture;\n\n        /**\n         * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n         * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n         *\n         * @member {SINT.Rectangle}\n         */\n        this._frame = frame;\n\n        /**\n         * This is the trimmed area of original texture, before it was put in atlas\n         * Please call `_updateUvs()` after you change coordinates of `trim` manually.\n         *\n         * @member {SINT.Rectangle}\n         */\n        this.trim = trim;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        this.valid = false;\n\n        /**\n         * This will let a renderer know that a texture has been updated (used mainly for webGL uv updates)\n         *\n         * @member {boolean}\n         */\n        this.requiresUpdate = false;\n\n        /**\n         * The WebGL UV data cache.\n         *\n         * @member {SINT.TextureUvs}\n         * @private\n         */\n        this._uvs = null;\n\n        /**\n         * This is the area of original texture, before it was put in atlas\n         *\n         * @member {SINT.Rectangle}\n         */\n        this.orig = orig || frame;// new Rectangle(0, 0, 1, 1);\n\n        this._rotate = Number(rotate || 0);\n\n        if (rotate === true)\n        {\n            // this is old texturepacker legacy, some games/libraries are passing \"true\" for rotated textures\n            this._rotate = 2;\n        }\n        else if (this._rotate % 2 !== 0)\n        {\n            throw new Error('attempt to use diamond-shaped UVs. If you are sure, set rotation manually');\n        }\n\n        if (baseTexture.hasLoaded)\n        {\n            if (this.noFrame)\n            {\n                frame = new Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n                // if there is no frame we should monitor for any base texture changes..\n                baseTexture.on('update', this.onBaseTextureUpdated, this);\n            }\n            this.frame = frame;\n        }\n        else\n        {\n            baseTexture.once('loaded', this.onBaseTextureLoaded, this);\n        }\n\n        /**\n         * Anchor point that is used as default if sprite is created with this texture.\n         * Changing the `defaultAnchor` at a later point of time will not update Sprite's anchor point.\n         * @member {SINT.Point}\n         * @default {0,0}\n         */\n        this.defaultAnchor = anchor ? new Point(anchor.x, anchor.y) : new Point(0, 0);\n\n        /**\n         * Fired when the texture is updated. This happens if the frame or the baseTexture is updated.\n         *\n         * @event SINT.Texture#update\n         * @protected\n         * @param {SINT.Texture} texture - Instance of texture being updated.\n         */\n\n        this._updateID = 0;\n\n        /**\n         * Contains data for uvs. May contain clamp settings and some matrices.\n         * Its a bit heavy, so by default that object is not created.\n         * @member {SINT.TextureMatrix}\n         * @default null\n         */\n        this.transform = null;\n\n        /**\n         * The ids under which this Texture has been added to the texture cache. This is\n         * automatically set as long as Texture.addToCache is used, but may not be set if a\n         * Texture is added directly to the TextureCache array.\n         *\n         * @member {string[]}\n         */\n        this.textureCacheIds = [];\n    }\n\n    /**\n     * Updates this texture on the gpu.\n     *\n     */\n    update()\n    {\n        this.baseTexture.update();\n    }\n\n    /**\n     * Called when the base texture is loaded\n     *\n     * @private\n     * @param {SINT.BaseTexture} baseTexture - The base texture.\n     */\n    onBaseTextureLoaded(baseTexture)\n    {\n        this._updateID++;\n\n        // TODO this code looks confusing.. boo to abusing getters and setters!\n        if (this.noFrame)\n        {\n            this.frame = new Rectangle(0, 0, baseTexture.width, baseTexture.height);\n        }\n        else\n        {\n            this.frame = this._frame;\n        }\n\n        this.baseTexture.on('update', this.onBaseTextureUpdated, this);\n        this.emit('update', this);\n    }\n\n    /**\n     * Called when the base texture is updated\n     *\n     * @private\n     * @param {SINT.BaseTexture} baseTexture - The base texture.\n     */\n    onBaseTextureUpdated(baseTexture)\n    {\n        this._updateID++;\n\n        this._frame.width = baseTexture.width;\n        this._frame.height = baseTexture.height;\n\n        this.emit('update', this);\n    }\n\n    /**\n     * Destroys this texture\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture as well\n     */\n    destroy(destroyBase)\n    {\n        if (this.baseTexture)\n        {\n            if (destroyBase)\n            {\n                // delete the texture if it exists in the texture cache..\n                // this only needs to be removed if the base texture is actually destroyed too..\n                if (TextureCache[this.baseTexture.imageUrl])\n                {\n                    Texture.removeFromCache(this.baseTexture.imageUrl);\n                }\n\n                this.baseTexture.destroy();\n            }\n\n            this.baseTexture.off('update', this.onBaseTextureUpdated, this);\n            this.baseTexture.off('loaded', this.onBaseTextureLoaded, this);\n\n            this.baseTexture = null;\n        }\n\n        this._frame = null;\n        this._uvs = null;\n        this.trim = null;\n        this.orig = null;\n\n        this.valid = false;\n\n        Texture.removeFromCache(this);\n        this.textureCacheIds = null;\n    }\n\n    /**\n     * Creates a new texture object that acts the same as this one.\n     *\n     * @return {SINT.Texture} The new texture\n     */\n    clone()\n    {\n        return new Texture(this.baseTexture, this.frame, this.orig, this.trim, this.rotate);\n    }\n\n    /**\n     * Updates the internal WebGL UV cache. Use it after you change `frame` or `trim` of the texture.\n     */\n    _updateUvs()\n    {\n        if (!this._uvs)\n        {\n            this._uvs = new TextureUvs();\n        }\n\n        this._uvs.set(this._frame, this.baseTexture, this.rotate);\n\n        this._updateID++;\n    }\n\n    /**\n     * Helper function that creates a Texture object from the given image url.\n     * If the image is not in the texture cache it will be  created and loaded.\n     *\n     * @static\n     * @param {string} imageUrl - The image url of the texture\n     * @param {boolean} [crossorigin] - Whether requests should be treated as crossorigin\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - See {@link SINT.SCALE_MODES} for possible values\n     * @param {number} [sourceScale=(auto)] - Scale for the original image, used with SVG images.\n     * @return {SINT.Texture} The newly created texture\n     */\n    static fromImage(imageUrl, crossorigin, scaleMode, sourceScale)\n    {\n        let texture = TextureCache[imageUrl];\n\n        if (!texture)\n        {\n            texture = new Texture(BaseTexture.fromImage(imageUrl, crossorigin, scaleMode, sourceScale));\n            Texture.addToCache(texture, imageUrl);\n        }\n\n        return texture;\n    }\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {SINT.Texture} The newly created texture\n     */\n    static fromFrame(frameId)\n    {\n        const texture = TextureCache[frameId];\n\n        if (!texture)\n        {\n            throw new Error(`The frameId \"${frameId}\" does not exist in the texture cache`);\n        }\n\n        return texture;\n    }\n\n    /**\n     * Helper function that creates a new Texture based on the given canvas element.\n     *\n     * @static\n     * @param {HTMLCanvasElement} canvas - The canvas element source of the texture\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - See {@link SINT.SCALE_MODES} for possible values\n     * @param {string} [origin='canvas'] - A string origin of who created the base texture\n     * @return {SINT.Texture} The newly created texture\n     */\n    static fromCanvas(canvas, scaleMode, origin = 'canvas')\n    {\n        return new Texture(BaseTexture.fromCanvas(canvas, scaleMode, origin));\n    }\n\n\n    /**\n     * Helper function that creates a new Texture based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|SINT.BaseTexture}\n     *        source - Source to create texture from\n     * @return {SINT.Texture} The newly created texture\n     */\n    static from(source)\n    {\n        // TODO auto detect cross origin..\n        // TODO pass in scale mode?\n        if (source instanceof HTMLImageElement)\n        {\n            return new Texture(BaseTexture.from(source));\n        }\n        else if (source instanceof HTMLCanvasElement)\n        {\n            return Texture.fromCanvas(source, settings.SCALE_MODE, 'HTMLCanvasElement');\n        }\n        else if (source instanceof HTMLVideoElement)\n        {\n            return Texture.fromVideo(source);\n        }\n        else if (source instanceof BaseTexture)\n        {\n            return new Texture(source);\n        }\n\n        // lets assume its a texture!\n        return source;\n    }\n\n    /**\n     * Create a texture from a source and add to the cache.\n     *\n     * @static\n     * @param {HTMLImageElement|HTMLCanvasElement} source - The input source.\n     * @param {String} imageUrl - File name of texture, for cache and resolving resolution.\n     * @param {String} [name] - Human readible name for the texture cache. If no name is\n     *        specified, only `imageUrl` will be used as the cache ID.\n     * @return {SINT.Texture} Output texture\n     */\n    static fromLoader(source, imageUrl, name)\n    {\n        const baseTexture = new BaseTexture(source, undefined, getResolutionOfUrl(imageUrl));\n        const texture = new Texture(baseTexture);\n\n        baseTexture.imageUrl = imageUrl;\n\n        // No name, use imageUrl instead\n        if (!name)\n        {\n            name = imageUrl;\n        }\n\n        // lets also add the frame to SINT's global cache for fromFrame and fromImage fucntions\n        BaseTexture.addToCache(texture.baseTexture, name);\n        Texture.addToCache(texture, name);\n\n        // also add references by url if they are different.\n        if (name !== imageUrl)\n        {\n            BaseTexture.addToCache(texture.baseTexture, imageUrl);\n            Texture.addToCache(texture, imageUrl);\n        }\n\n        return texture;\n    }\n\n    /**\n     * Adds a Texture to the global TextureCache. This cache is shared across the whole SINT object.\n     *\n     * @static\n     * @param {SINT.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the Texture will be stored against.\n     */\n    static addToCache(texture, id)\n    {\n        if (id)\n        {\n            if (texture.textureCacheIds.indexOf(id) === -1)\n            {\n                texture.textureCacheIds.push(id);\n            }\n\n            // @if DEBUG\n            /* eslint-disable no-console */\n            if (TextureCache[id])\n            {\n                console.warn(`Texture added to the cache with an id [${id}] that already had an entry`);\n            }\n            /* eslint-enable no-console */\n            // @endif\n\n            TextureCache[id] = texture;\n        }\n    }\n\n    /**\n     * Remove a Texture from the global TextureCache.\n     *\n     * @static\n     * @param {string|SINT.Texture} texture - id of a Texture to be removed, or a Texture instance itself\n     * @return {SINT.Texture|null} The Texture that was removed\n     */\n    static removeFromCache(texture)\n    {\n        if (typeof texture === 'string')\n        {\n            const textureFromCache = TextureCache[texture];\n\n            if (textureFromCache)\n            {\n                const index = textureFromCache.textureCacheIds.indexOf(texture);\n\n                if (index > -1)\n                {\n                    textureFromCache.textureCacheIds.splice(index, 1);\n                }\n\n                delete TextureCache[texture];\n\n                return textureFromCache;\n            }\n        }\n        else if (texture && texture.textureCacheIds)\n        {\n            for (let i = 0; i < texture.textureCacheIds.length; ++i)\n            {\n                // Check that texture matches the one being passed in before deleting it from the cache.\n                if (TextureCache[texture.textureCacheIds[i]] === texture)\n                {\n                    delete TextureCache[texture.textureCacheIds[i]];\n                }\n            }\n\n            texture.textureCacheIds.length = 0;\n\n            return texture;\n        }\n\n        return null;\n    }\n\n    /**\n     * The frame specifies the region of the base texture that this texture uses.\n     * Please call `_updateUvs()` after you change coordinates of `frame` manually.\n     *\n     * @member {SINT.Rectangle}\n     */\n    get frame()\n    {\n        return this._frame;\n    }\n\n    set frame(frame) // eslint-disable-line require-jsdoc\n    {\n        this._frame = frame;\n\n        this.noFrame = false;\n\n        const { x, y, width, height } = frame;\n        const xNotFit = x + width > this.baseTexture.width;\n        const yNotFit = y + height > this.baseTexture.height;\n\n        if (xNotFit || yNotFit)\n        {\n            const relationship = xNotFit && yNotFit ? 'and' : 'or';\n            const errorX = `X: ${x} + ${width} = ${x + width} > ${this.baseTexture.width}`;\n            const errorY = `Y: ${y} + ${height} = ${y + height} > ${this.baseTexture.height}`;\n\n            throw new Error('Texture Error: frame does not fit inside the base Texture dimensions: '\n                + `${errorX} ${relationship} ${errorY}`);\n        }\n\n        // this.valid = width && height && this.baseTexture.source && this.baseTexture.hasLoaded;\n        this.valid = width && height && this.baseTexture.hasLoaded;\n\n        if (!this.trim && !this.rotate)\n        {\n            this.orig = frame;\n        }\n\n        if (this.valid)\n        {\n            this._updateUvs();\n        }\n    }\n\n    /**\n     * Indicates whether the texture is rotated inside the atlas\n     * set to 2 to compensate for texture packer rotation\n     * set to 6 to compensate for spine packer rotation\n     * can be used to rotate or mirror sprites\n     * See {@link SINT.GroupD8} for explanation\n     *\n     * @member {number}\n     */\n    get rotate()\n    {\n        return this._rotate;\n    }\n\n    set rotate(rotate) // eslint-disable-line require-jsdoc\n    {\n        this._rotate = rotate;\n        if (this.valid)\n        {\n            this._updateUvs();\n        }\n    }\n\n    /**\n     * The width of the Texture in pixels.\n     *\n     * @member {number}\n     */\n    get width()\n    {\n        return this.orig.width;\n    }\n\n    /**\n     * The height of the Texture in pixels.\n     *\n     * @member {number}\n     */\n    get height()\n    {\n        return this.orig.height;\n    }\n}\n\nfunction createWhiteTexture()\n{\n    const canvas = document.createElement('canvas');\n\n    canvas.width = 10;\n    canvas.height = 10;\n\n    const context = canvas.getContext('2d');\n\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 10, 10);\n\n    return new Texture(new BaseTexture(canvas));\n}\n\nfunction removeAllHandlers(tex)\n{\n    tex.destroy = function _emptyDestroy() { /* empty */ };\n    tex.on = function _emptyOn() { /* empty */ };\n    tex.once = function _emptyOnce() { /* empty */ };\n    tex.emit = function _emptyEmit() { /* empty */ };\n}\n\n/**\n * An empty texture, used often to not have to create multiple empty textures.\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\nTexture.EMPTY = new Texture(new BaseTexture());\nremoveAllHandlers(Texture.EMPTY);\nremoveAllHandlers(Texture.EMPTY.baseTexture);\n\n/**\n * A white texture of 10x10 size, used for graphics and other things\n * Can not be destroyed.\n *\n * @static\n * @constant\n */\nTexture.WHITE = createWhiteTexture();\nremoveAllHandlers(Texture.WHITE);\nremoveAllHandlers(Texture.WHITE.baseTexture);\n","import { Rectangle, Matrix } from '../../math';\nimport { SCALE_MODES } from '../../const';\nimport settings from '../../settings';\nimport { GLFramebuffer } from 'vf-gl-core';\n\n/**\n * @class\n * @memberof SINT\n */\nexport default class RenderTarget\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n     * @param {number} [width=0] - the horizontal range of the filter\n     * @param {number} [height=0] - the vertical range of the filter\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - See {@link SINT.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The current resolution / device pixel ratio\n     * @param {boolean} [root=false] - Whether this object is the root element or not\n     */\n    constructor(gl, width, height, scaleMode, resolution, root)\n    {\n        // TODO Resolution could go here ( eg low res blurs )\n\n        /**\n         * The current WebGL drawing context.\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        // next time to create a frame buffer and texture\n\n        /**\n         * A frame buffer\n         *\n         * @member {SINT.glCore.GLFramebuffer}\n         */\n        this.frameBuffer = null;\n\n        /**\n         * The texture\n         *\n         * @member {SINT.glCore.GLTexture}\n         */\n        this.texture = null;\n\n        /**\n         * The background colour of this render target, as an array of [r,g,b,a] values\n         *\n         * @member {number[]}\n         */\n        this.clearColor = [0, 0, 0, 0];\n\n        /**\n         * The size of the object as a rectangle\n         *\n         * @member {SINT.Rectangle}\n         */\n        this.size = new Rectangle(0, 0, 1, 1);\n\n        /**\n         * The current resolution / device pixel ratio\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = resolution || settings.RESOLUTION;\n\n        /**\n         * The projection matrix\n         *\n         * @member {SINT.Matrix}\n         */\n        this.projectionMatrix = new Matrix();\n\n        /**\n         * The object's transform\n         *\n         * @member {SINT.Matrix}\n         */\n        this.transform = null;\n\n        /**\n         * The frame.\n         *\n         * @member {SINT.Rectangle}\n         */\n        this.frame = null;\n\n        /**\n         * The stencil buffer stores masking data for the render target\n         *\n         * @member {glCore.GLBuffer}\n         */\n        this.defaultFrame = new Rectangle();\n        this.destinationFrame = null;\n        this.sourceFrame = null;\n\n        /**\n         * The stencil buffer stores masking data for the render target\n         *\n         * @member {glCore.GLBuffer}\n         */\n        this.stencilBuffer = null;\n\n        /**\n         * The data structure for the stencil masks\n         *\n         * @member {SINT.Graphics[]}\n         */\n        this.stencilMaskStack = [];\n\n        /**\n         * Stores filter data for the render target\n         *\n         * @member {object[]}\n         */\n        this.filterData = null;\n\n        /**\n         * The key for pooled texture of FilterSystem\n         * @private\n         * @member {string}\n         */\n        this.filterPoolKey = '';\n\n        /**\n         * The scale mode.\n         *\n         * @member {number}\n         * @default SINT.settings.SCALE_MODE\n         * @see SINT.SCALE_MODES\n         */\n        this.scaleMode = scaleMode !== undefined ? scaleMode : settings.SCALE_MODE;\n\n        /**\n         * Whether this object is the root element or not\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.root = root || false;\n\n        if (!this.root)\n        {\n            this.frameBuffer = GLFramebuffer.createRGBA(gl, 100, 100);\n\n            if (this.scaleMode === SCALE_MODES.NEAREST)\n            {\n                this.frameBuffer.texture.enableNearestScaling();\n            }\n            else\n            {\n                this.frameBuffer.texture.enableLinearScaling();\n            }\n            /*\n                A frame buffer needs a target to render to..\n                create a texture and bind it attach it to the framebuffer..\n             */\n\n            // this is used by the base texture\n            this.texture = this.frameBuffer.texture;\n        }\n        else\n        {\n            // make it a null framebuffer..\n            this.frameBuffer = new GLFramebuffer(gl, 100, 100);\n            this.frameBuffer.framebuffer = null;\n        }\n\n        this.setFrame();\n\n        this.resize(width, height);\n    }\n\n    /**\n     * Clears the filter texture.\n     *\n     * @param {number[]} [clearColor=this.clearColor] - Array of [r,g,b,a] to clear the framebuffer\n     */\n    clear(clearColor)\n    {\n        const cc = clearColor || this.clearColor;\n\n        this.frameBuffer.clear(cc[0], cc[1], cc[2], cc[3]);// r,g,b,a);\n    }\n\n    /**\n     * Binds the stencil buffer.\n     *\n     */\n    attachStencilBuffer()\n    {\n        // TODO check if stencil is done?\n        /**\n         * The stencil buffer is used for masking in SINT\n         * lets create one and then add attach it to the framebuffer..\n         */\n        if (!this.root)\n        {\n            this.frameBuffer.enableStencil();\n        }\n    }\n\n    /**\n     * Sets the frame of the render target.\n     *\n     * @param {Rectangle} destinationFrame - The destination frame.\n     * @param {Rectangle} sourceFrame - The source frame.\n     */\n    setFrame(destinationFrame, sourceFrame)\n    {\n        this.destinationFrame = destinationFrame || this.destinationFrame || this.defaultFrame;\n        this.sourceFrame = sourceFrame || this.sourceFrame || this.destinationFrame;\n    }\n\n    /**\n     * Binds the buffers and initialises the viewport.\n     *\n     */\n    activate()\n    {\n        // TODO refactor usage of frame..\n        const gl = this.gl;\n\n        // make sure the texture is unbound!\n        this.frameBuffer.bind();\n\n        this.calculateProjection(this.destinationFrame, this.sourceFrame);\n\n        if (this.transform)\n        {\n            this.projectionMatrix.append(this.transform);\n        }\n\n        // TODO add a check as them may be the same!\n        if (this.destinationFrame !== this.sourceFrame)\n        {\n            gl.enable(gl.SCISSOR_TEST);\n            gl.scissor(\n                this.destinationFrame.x | 0,\n                this.destinationFrame.y | 0,\n                (this.destinationFrame.width * this.resolution) | 0,\n                (this.destinationFrame.height * this.resolution) | 0\n            );\n        }\n        else\n        {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n\n        // TODO - does not need to be updated all the time??\n        gl.viewport(\n            this.destinationFrame.x | 0,\n            this.destinationFrame.y | 0,\n            (this.destinationFrame.width * this.resolution) | 0,\n            (this.destinationFrame.height * this.resolution) | 0\n        );\n    }\n\n    /**\n     * Updates the projection matrix based on a projection frame (which is a rectangle)\n     *\n     * @param {Rectangle} destinationFrame - The destination frame.\n     * @param {Rectangle} sourceFrame - The source frame.\n     */\n    calculateProjection(destinationFrame, sourceFrame)\n    {\n        const pm = this.projectionMatrix;\n\n        sourceFrame = sourceFrame || destinationFrame;\n\n        pm.identity();\n\n        // TODO: make dest scale source\n        if (!this.root)\n        {\n            pm.a = 1 / destinationFrame.width * 2;\n            pm.d = 1 / destinationFrame.height * 2;\n\n            pm.tx = -1 - (sourceFrame.x * pm.a);\n            pm.ty = -1 - (sourceFrame.y * pm.d);\n        }\n        else\n        {\n            pm.a = 1 / destinationFrame.width * 2;\n            pm.d = -1 / destinationFrame.height * 2;\n\n            pm.tx = -1 - (sourceFrame.x * pm.a);\n            pm.ty = 1 - (sourceFrame.y * pm.d);\n        }\n    }\n\n    /**\n     * Resizes the texture to the specified width and height\n     *\n     * @param {number} width - the new width of the texture\n     * @param {number} height - the new height of the texture\n     */\n    resize(width, height)\n    {\n        width = width | 0;\n        height = height | 0;\n\n        if (this.size.width === width && this.size.height === height)\n        {\n            return;\n        }\n\n        this.size.width = width;\n        this.size.height = height;\n\n        this.defaultFrame.width = width;\n        this.defaultFrame.height = height;\n\n        this.frameBuffer.resize(width * this.resolution, height * this.resolution);\n\n        const projectionFrame = this.frame || this.size;\n\n        this.calculateProjection(projectionFrame);\n    }\n\n    /**\n     * Destroys the render target.\n     *\n     */\n    destroy()\n    {\n        this.frameBuffer.destroy();\n\n        this.frameBuffer = null;\n        this.texture = null;\n    }\n}\n","// Your friendly neighbour https://en.wikipedia.org/wiki/Dihedral_group of order 16\nimport Matrix from './Matrix';\n\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nconst uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\nconst tempMatrices = [];\n\nconst mul = [];\n\nfunction signum(x)\n{\n    if (x < 0)\n    {\n        return -1;\n    }\n    if (x > 0)\n    {\n        return 1;\n    }\n\n    return 0;\n}\n\nfunction init()\n{\n    for (let i = 0; i < 16; i++)\n    {\n        const row = [];\n\n        mul.push(row);\n\n        for (let j = 0; j < 16; j++)\n        {\n            const _ux = signum((ux[i] * ux[j]) + (vx[i] * uy[j]));\n            const _uy = signum((uy[i] * ux[j]) + (vy[i] * uy[j]));\n            const _vx = signum((ux[i] * vx[j]) + (vx[i] * vy[j]));\n            const _vy = signum((uy[i] * vx[j]) + (vy[i] * vy[j]));\n\n            for (let k = 0; k < 16; k++)\n            {\n                if (ux[k] === _ux && uy[k] === _uy && vx[k] === _vx && vy[k] === _vy)\n                {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < 16; i++)\n    {\n        const mat = new Matrix();\n\n        mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n        tempMatrices.push(mat);\n    }\n}\n\ninit();\n\n/**\n * Implements Dihedral Group D_8, see [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html},\n * D8 is the same but with diagonals. Used for texture rotations.\n *\n * Vector xX(i), xY(i) is U-axis of sprite with rotation i\n * Vector yY(i), yY(i) is V-axis of sprite with rotation i\n * Rotations: 0 grad (0), 90 grad (2), 180 grad (4), 270 grad (6)\n * Mirrors: vertical (8), main diagonal (10), horizontal (12), reverse diagonal (14)\n * This is the small part of gameofbombs.com portal system. It works.\n *\n * @author Ivan @ivanpopelyshev\n * @class\n * @memberof SINT\n */\nconst GroupD8 = {\n    E: 0,\n    SE: 1,\n    S: 2,\n    SW: 3,\n    W: 4,\n    NW: 5,\n    N: 6,\n    NE: 7,\n    MIRROR_VERTICAL: 8,\n    MIRROR_HORIZONTAL: 12,\n    uX: (ind) => ux[ind],\n    uY: (ind) => uy[ind],\n    vX: (ind) => vx[ind],\n    vY: (ind) => vy[ind],\n    inv: (rotation) =>\n    {\n        if (rotation & 8)\n        {\n            return rotation & 15;\n        }\n\n        return (-rotation) & 7;\n    },\n    add: (rotationSecond, rotationFirst) => mul[rotationSecond][rotationFirst],\n    sub: (rotationSecond, rotationFirst) => mul[rotationSecond][GroupD8.inv(rotationFirst)],\n\n    /**\n     * Adds 180 degrees to rotation. Commutative operation.\n     *\n     * @memberof SINT.GroupD8\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} rotated number\n     */\n    rotate180: (rotation) => rotation ^ 4,\n\n    /**\n     * Direction of main vector can be horizontal, vertical or diagonal.\n     * Some objects work with vertical directions different.\n     *\n     * @memberof SINT.GroupD8\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     */\n    isVertical: (rotation) => (rotation & 3) === 2,\n\n    /**\n     * @memberof SINT.GroupD8\n     * @param {number} dx - TODO\n     * @param {number} dy - TODO\n     *\n     * @return {number} TODO\n     */\n    byDirection: (dx, dy) =>\n    {\n        if (Math.abs(dx) * 2 <= Math.abs(dy))\n        {\n            if (dy >= 0)\n            {\n                return GroupD8.S;\n            }\n\n            return GroupD8.N;\n        }\n        else if (Math.abs(dy) * 2 <= Math.abs(dx))\n        {\n            if (dx > 0)\n            {\n                return GroupD8.E;\n            }\n\n            return GroupD8.W;\n        }\n        else if (dy > 0)\n        {\n            if (dx > 0)\n            {\n                return GroupD8.SE;\n            }\n\n            return GroupD8.SW;\n        }\n        else if (dx > 0)\n        {\n            return GroupD8.NE;\n        }\n\n        return GroupD8.NW;\n    },\n\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     *\n     * @memberof SINT.GroupD8\n     * @param {SINT.Matrix} matrix - sprite world matrix\n     * @param {number} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: (matrix, rotation, tx = 0, ty = 0) =>\n    {\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        const mat = tempMatrices[GroupD8.inv(rotation)];\n\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    },\n};\n\nexport default GroupD8;\n","import EventEmitter from 'eventemitter3';\nimport { TRANSFORM_MODE } from '../const';\nimport settings from '../settings';\nimport TransformStatic from './TransformStatic';\nimport Transform from './Transform';\nimport Bounds from './Bounds';\nimport { Rectangle } from '../math';\n// _tempDisplayObjectParent = new DisplayObject();\n\n/**\n * The base class for all objects that are rendered on the screen.\n * This is an abstract class and should not be used on its own rather it should be extended.\n *\n * @class\n * @extends EventEmitter\n * @memberof SINT\n */\nexport default class DisplayObject extends EventEmitter\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n        const TransformClass = settings.TRANSFORM_MODE === TRANSFORM_MODE.STATIC ? TransformStatic : Transform;\n\n        this.tempDisplayObjectParent = null;\n\n        // TODO: need to create Transform from factory\n        /**\n         * World transform and local transform of this object.\n         * This will become read-only later, please do not assign anything there unless you know what are you doing\n         *\n         * @member {SINT.TransformBase}\n         */\n        this.transform = new TransformClass();\n\n        /**\n         * The opacity of the object.\n         *\n         * @member {number}\n         */\n        this.alpha = 1;\n\n        /**\n         * The visibility of the object. If false the object will not be drawn, and\n         * the updateTransform function will not be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds or call updateTransform manually\n         *\n         * @member {boolean}\n         */\n        this.visible = true;\n\n        /**\n         * Can this object be rendered, if false the object will not be drawn but the updateTransform\n         * methods will still be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds manually\n         *\n         * @member {boolean}\n         */\n        this.renderable = true;\n\n        /**\n         * The display object container that contains this display object.\n         *\n         * @member {SINT.Container}\n         * @readonly\n         */\n        this.parent = null;\n\n        /**\n         * The multiplied alpha of the displayObject\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.worldAlpha = 1;\n\n        /**\n         * The area the filter is applied to. This is used as more of an optimisation\n         * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle\n         *\n         * Also works as an interaction mask\n         *\n         * @member {SINT.Rectangle}\n         */\n        this.filterArea = null;\n\n        this._filters = null;\n        this._enabledFilters = null;\n\n        /**\n         * The bounds object, this is used to calculate and store the bounds of the displayObject\n         *\n         * @member {SINT.Rectangle}\n         * @private\n         */\n        this._bounds = new Bounds();\n        this._boundsID = 0;\n        this._lastBoundsID = -1;\n        this._boundsRect = null;\n        this._localBoundsRect = null;\n\n        /**\n         * The original, cached mask of the object\n         *\n         * @member {SINT.Graphics|SINT.Sprite}\n         * @private\n         */\n        this._mask = null;\n\n        /**\n         * If the object has been destroyed via destroy(). If true, it should not be used.\n         *\n         * @member {boolean}\n         * @private\n         * @readonly\n         */\n        this._destroyed = false;\n\n        /**\n         * Fired when this DisplayObject is added to a Container.\n         *\n         * @event SINT.DisplayObject#added\n         * @param {SINT.Container} container - The container added to.\n         */\n\n        /**\n         * Fired when this DisplayObject is removed from a Container.\n         *\n         * @event SINT.DisplayObject#removed\n         * @param {SINT.Container} container - The container removed from.\n         */\n    }\n\n    /**\n     * @private\n     * @member {SINT.DisplayObject}\n     */\n    get _tempDisplayObjectParent()\n    {\n        if (this.tempDisplayObjectParent === null)\n        {\n            this.tempDisplayObjectParent = new DisplayObject();\n        }\n\n        return this.tempDisplayObjectParent;\n    }\n\n    /**\n     * Updates the object transform for rendering\n     *\n     * TODO - Optimization pass!\n     */\n    updateTransform()\n    {\n        this.transform.updateTransform(this.parent.transform);\n        // multiply the alphas..\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        this._bounds.updateID++;\n    }\n\n    /**\n     * recursively updates transform of all objects from the root to this one\n     * internal function for toLocal()\n     */\n    _recursivePostUpdateTransform()\n    {\n        if (this.parent)\n        {\n            this.parent._recursivePostUpdateTransform();\n            this.transform.updateTransform(this.parent.transform);\n        }\n        else\n        {\n            this.transform.updateTransform(this._tempDisplayObjectParent.transform);\n        }\n    }\n\n    /**\n     * Retrieves the bounds of the displayObject as a rectangle object.\n     *\n     * @param {boolean} skipUpdate - setting to true will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost\n     * @param {SINT.Rectangle} rect - Optional rectangle to store the result of the bounds calculation\n     * @return {SINT.Rectangle} the rectangular bounding area\n     */\n    getBounds(skipUpdate, rect)\n    {\n        if (!skipUpdate)\n        {\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.updateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this._recursivePostUpdateTransform();\n                this.updateTransform();\n            }\n        }\n\n        if (this._boundsID !== this._lastBoundsID)\n        {\n            this.calculateBounds();\n        }\n\n        if (!rect)\n        {\n            if (!this._boundsRect)\n            {\n                this._boundsRect = new Rectangle();\n            }\n\n            rect = this._boundsRect;\n        }\n\n        return this._bounds.getRectangle(rect);\n    }\n\n    /**\n     * Retrieves the local bounds of the displayObject as a rectangle object\n     *\n     * @param {SINT.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation\n     * @return {SINT.Rectangle} the rectangular bounding area\n     */\n    getLocalBounds(rect)\n    {\n        const transformRef = this.transform;\n        const parentRef = this.parent;\n\n        this.parent = null;\n        this.transform = this._tempDisplayObjectParent.transform;\n\n        if (!rect)\n        {\n            if (!this._localBoundsRect)\n            {\n                this._localBoundsRect = new Rectangle();\n            }\n\n            rect = this._localBoundsRect;\n        }\n\n        const bounds = this.getBounds(false, rect);\n\n        this.parent = parentRef;\n        this.transform = transformRef;\n\n        return bounds;\n    }\n\n    /**\n     * Calculates the global position of the display object\n     *\n     * @param {SINT.Point} position - The world origin to calculate from\n     * @param {SINT.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point)\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform.\n     * @return {SINT.Point} A point object representing the position of this object\n     */\n    toGlobal(position, point, skipUpdate = false)\n    {\n        if (!skipUpdate)\n        {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // don't need to update the lot\n        return this.worldTransform.apply(position, point);\n    }\n\n    /**\n     * Calculates the local position of the display object relative to another point\n     *\n     * @param {SINT.Point} position - The world origin to calculate from\n     * @param {SINT.DisplayObject} [from] - The DisplayObject to calculate the global position from\n     * @param {SINT.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point)\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform\n     * @return {SINT.Point} A point object representing the position of this object\n     */\n    toLocal(position, from, point, skipUpdate)\n    {\n        if (from)\n        {\n            position = from.toGlobal(position, point, skipUpdate);\n        }\n\n        if (!skipUpdate)\n        {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // simply apply the matrix..\n        return this.worldTransform.applyInverse(position, point);\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {SINT.WebGLRenderer} renderer - The renderer\n     */\n    renderWebGL(renderer) // eslint-disable-line no-unused-vars\n    {\n        // OVERWRITE;\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @param {SINT.CanvasRenderer} renderer - The renderer\n     */\n    renderCanvas(renderer) // eslint-disable-line no-unused-vars\n    {\n        // OVERWRITE;\n    }\n\n    /**\n     * Set the parent Container of this DisplayObject\n     *\n     * @param {SINT.Container} container - The Container to add this DisplayObject to\n     * @return {SINT.Container} The Container that this DisplayObject was added to\n     */\n    setParent(container)\n    {\n        if (!container || !container.addChild)\n        {\n            throw new Error('setParent: Argument must be a Container');\n        }\n\n        container.addChild(this);\n\n        return container;\n    }\n\n    /**\n     * Convenience function to set the position, scale, skew and pivot at once.\n     *\n     * @param {number} [x=0] - The X position\n     * @param {number} [y=0] - The Y position\n     * @param {number} [scaleX=1] - The X scale value\n     * @param {number} [scaleY=1] - The Y scale value\n     * @param {number} [rotation=0] - The rotation\n     * @param {number} [skewX=0] - The X skew value\n     * @param {number} [skewY=0] - The Y skew value\n     * @param {number} [pivotX=0] - The X pivot value\n     * @param {number} [pivotY=0] - The Y pivot value\n     * @return {SINT.DisplayObject} The DisplayObject instance\n     */\n    setTransform(x = 0, y = 0, scaleX = 1, scaleY = 1, rotation = 0, skewX = 0, skewY = 0, pivotX = 0, pivotY = 0)\n    {\n        this.position.x = x;\n        this.position.y = y;\n        this.scale.x = !scaleX ? 1 : scaleX;\n        this.scale.y = !scaleY ? 1 : scaleY;\n        this.rotation = rotation;\n        this.skew.x = skewX;\n        this.skew.y = skewY;\n        this.pivot.x = pivotX;\n        this.pivot.y = pivotY;\n\n        return this;\n    }\n\n    /**\n     * Base destroy method for generic display objects. This will automatically\n     * remove the display object from its parent Container as well as remove\n     * all current event listeners and internal references. Do not use a DisplayObject\n     * after calling `destroy`.\n     *\n     */\n    destroy()\n    {\n        this.removeAllListeners();\n        if (this.parent)\n        {\n            this.parent.removeChild(this);\n        }\n        this.transform = null;\n\n        this.parent = null;\n\n        this._bounds = null;\n        this._currentBounds = null;\n        this._mask = null;\n\n        this.filterArea = null;\n\n        this.interactive = false;\n        this.interactiveChildren = false;\n\n        this._destroyed = true;\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     * An alias to position.x\n     *\n     * @member {number}\n     */\n    get x()\n    {\n        return this.position.x;\n    }\n\n    set x(value) // eslint-disable-line require-jsdoc\n    {\n        this.transform.position.x = value;\n    }\n\n    /**\n     * The position of the displayObject on the y axis relative to the local coordinates of the parent.\n     * An alias to position.y\n     *\n     * @member {number}\n     */\n    get y()\n    {\n        return this.position.y;\n    }\n\n    set y(value) // eslint-disable-line require-jsdoc\n    {\n        this.transform.position.y = value;\n    }\n\n    /**\n     * Current transform of the object based on world (parent) factors\n     *\n     * @member {SINT.Matrix}\n     * @readonly\n     */\n    get worldTransform()\n    {\n        return this.transform.worldTransform;\n    }\n\n    /**\n     * Current transform of the object based on local factors: position, scale, other stuff\n     *\n     * @member {SINT.Matrix}\n     * @readonly\n     */\n    get localTransform()\n    {\n        return this.transform.localTransform;\n    }\n\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * Assignment by value since SINT-v4.\n     *\n     * @member {SINT.Point|SINT.ObservablePoint}\n     */\n    get position()\n    {\n        return this.transform.position;\n    }\n\n    set position(value) // eslint-disable-line require-jsdoc\n    {\n        this.transform.position.copy(value);\n    }\n\n    /**\n     * The scale factor of the object.\n     * Assignment by value since SINT-v4.\n     *\n     * @member {SINT.Point|SINT.ObservablePoint}\n     */\n    get scale()\n    {\n        return this.transform.scale;\n    }\n\n    set scale(value) // eslint-disable-line require-jsdoc\n    {\n        this.transform.scale.copy(value);\n    }\n\n    /**\n     * The pivot point of the displayObject that it rotates around.\n     * Assignment by value since SINT-v4.\n     *\n     * @member {SINT.Point|SINT.ObservablePoint}\n     */\n    get pivot()\n    {\n        return this.transform.pivot;\n    }\n\n    set pivot(value) // eslint-disable-line require-jsdoc\n    {\n        this.transform.pivot.copy(value);\n    }\n\n    /**\n     * The skew factor for the object in radians.\n     * Assignment by value since SINT-v4.\n     *\n     * @member {SINT.ObservablePoint}\n     */\n    get skew()\n    {\n        return this.transform.skew;\n    }\n\n    set skew(value) // eslint-disable-line require-jsdoc\n    {\n        this.transform.skew.copy(value);\n    }\n\n    /**\n     * The rotation of the object in radians.\n     *\n     * @member {number}\n     */\n    get rotation()\n    {\n        return this.transform.rotation;\n    }\n\n    set rotation(value) // eslint-disable-line require-jsdoc\n    {\n        this.transform.rotation = value;\n    }\n\n    /**\n     * Indicates if the object is globally visible.\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    get worldVisible()\n    {\n        let item = this;\n\n        do\n        {\n            if (!item.visible)\n            {\n                return false;\n            }\n\n            item = item.parent;\n        } while (item);\n\n        return true;\n    }\n\n    /**\n     * Sets a mask for the displayObject. A mask is an object that limits the visibility of an\n     * object to the shape of the mask applied to it. In SINT a regular mask must be a\n     * SINT.Graphics or a SINT.Sprite object. This allows for much faster masking in canvas as it\n     * utilises shape clipping. To remove a mask, set this property to null.\n     *\n     * @todo For the moment, SINT.CanvasRenderer doesn't support SINT.Sprite as mask.\n     *\n     * @member {SINT.Graphics|SINT.Sprite}\n     */\n    get mask()\n    {\n        return this._mask;\n    }\n\n    set mask(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._mask)\n        {\n            this._mask.renderable = true;\n            this._mask.isMask = false;\n        }\n\n        this._mask = value;\n\n        if (this._mask)\n        {\n            this._mask.renderable = false;\n            this._mask.isMask = true;\n        }\n    }\n\n    /**\n     * Sets the filters for the displayObject.\n     * * IMPORTANT: This is a webGL only feature and will be ignored by the canvas renderer.\n     * To remove filters simply set this property to 'null'\n     *\n     * @member {SINT.Filter[]}\n     */\n    get filters()\n    {\n        return this._filters && this._filters.slice();\n    }\n\n    set filters(value) // eslint-disable-line require-jsdoc\n    {\n        this._filters = value && value.slice();\n    }\n}\n\n// performance increase to avoid using call.. (10x faster)\nDisplayObject.prototype.displayObjectUpdateTransform = DisplayObject.prototype.updateTransform;\n","import { Matrix } from '../math';\n\n/**\n * Generic class to deal with traditional 2D matrix transforms\n *\n * @class\n * @memberof SINT\n */\nexport default class TransformBase\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * The global matrix transform. It can be swapped temporarily by some functions like getLocalBounds()\n         *\n         * @member {SINT.Matrix}\n         */\n        this.worldTransform = new Matrix();\n\n        /**\n         * The local matrix transform\n         *\n         * @member {SINT.Matrix}\n         */\n        this.localTransform = new Matrix();\n\n        this._worldID = 0;\n        this._parentID = 0;\n    }\n\n    /**\n     * TransformBase does not have decomposition, so this function wont do anything\n     */\n    updateLocalTransform()\n    {\n        // empty\n    }\n\n    /**\n     * Updates the values of the object and applies the parent's transform.\n     *\n     * @param {SINT.TransformBase} parentTransform - The transform of the parent of this object\n     */\n    updateTransform(parentTransform)\n    {\n        const pt = parentTransform.worldTransform;\n        const wt = this.worldTransform;\n        const lt = this.localTransform;\n\n        // concat the parent matrix with the objects transform.\n        wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n        wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n        wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n        wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n        wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n        wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n\n        this._worldID ++;\n    }\n\n}\n\n/**\n * Updates the values of the object and applies the parent's transform.\n * @param  parentTransform {SINT.Transform} The transform of the parent of this object\n *\n */\nTransformBase.prototype.updateWorldTransform = TransformBase.prototype.updateTransform;\n\nTransformBase.IDENTITY = new TransformBase();\n","import WebGLManager from '../managers/WebGLManager';\n\n/**\n * Base for a common object renderer that can be used as a system renderer plugin.\n *\n * @class\n * @extends SINT.WebGLManager\n * @memberof SINT\n */\nexport default class ObjectRenderer extends WebGLManager\n{\n    /**\n     * Starts the renderer and sets the shader\n     *\n     */\n    start()\n    {\n        // set the shader..\n    }\n\n    /**\n     * Stops the renderer\n     *\n     */\n    stop()\n    {\n        this.flush();\n    }\n\n    /**\n     * Stub method for rendering content and emptying the current batch.\n     *\n     */\n    flush()\n    {\n        // flush!\n    }\n\n    /**\n     * Renders an object\n     *\n     * @param {SINT.DisplayObject} object - The object to render.\n     */\n    render(object) // eslint-disable-line no-unused-vars\n    {\n        // render the object\n    }\n}\n","import SystemRenderer from './SystemRenderer';\nimport MaskManager from './managers/MaskManager';\nimport StencilManager from './managers/StencilManager';\nimport FilterManager from './managers/FilterManager';\nimport RenderTarget from './utils/RenderTarget';\nimport ObjectRenderer from './utils/ObjectRenderer';\nimport TextureManager from './TextureManager';\nimport BaseTexture from '../textures/BaseTexture';\nimport TextureGarbageCollector from './TextureGarbageCollector';\nimport WebGLState from './WebGLState';\nimport mapWebGLDrawModesToPixi from './utils/mapWebGLDrawModesToPixi';\nimport validateContext from './utils/validateContext';\nimport { pluginTarget } from '../utils';\nimport glCore from 'vf-gl-core';\nimport { RENDERER_TYPE } from '../const';\n\nlet CONTEXT_UID = 0;\n\n/**\n * The WebGLRenderer draws the scene and all its content onto a webGL enabled canvas. This renderer\n * should be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\n * So no need for Sprite Batches or Sprite Clouds.\n * Don't forget to add the view to your DOM or you will not see anything :)\n *\n * @class\n * @memberof SINT\n * @extends SINT.SystemRenderer\n */\nexport default class WebGLRenderer extends SystemRenderer\n{\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     *\n     * @param {object} [options] - The optional renderer parameters\n     * @param {number} [options.width=800] - the width of the screen\n     * @param {number} [options.height=600] - the height of the screen\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias. If not available natively then FXAA\n     *  antialiasing is used\n     * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n     *  FXAA is faster, but may not always look as great\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer.\n     *  The resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear\n     *  the canvas or not before the new render pass. If you wish to set this to false, you *must* set\n     *  preserveDrawingBuffer to `true`.\n     * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation,\n     *  enable this if you need to call toDataUrl on the webgl context.\n     * @param {boolean} [options.roundPixels=false] - If true SINTJS will Math.floor() x/y values when\n     *  rendering, stopping pixel interpolation.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {boolean} [options.legacy=false] - If true SINTJS will aim to ensure compatibility\n     *  with older / less advanced devices. If you experience unexplained flickering try setting this to true.\n     * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n     *  for devices with dual graphics card\n     */\n    constructor(options, arg2, arg3)\n    {\n        super('WebGL', options, arg2, arg3);\n\n        this.legacy = this.options.legacy;\n\n        if (this.legacy)\n        {\n            glCore.VertexArrayObject.FORCE_NATIVE = true;\n        }\n\n        /**\n         * The type of this renderer as a standardised const\n         *\n         * @member {number}\n         * @see SINT.RENDERER_TYPE\n         */\n        this.type = RENDERER_TYPE.WEBGL;\n\n        this.handleContextLost = this.handleContextLost.bind(this);\n        this.handleContextRestored = this.handleContextRestored.bind(this);\n\n        this.view.addEventListener('webglcontextlost', this.handleContextLost, false);\n        this.view.addEventListener('webglcontextrestored', this.handleContextRestored, false);\n\n        /**\n         * The options passed in to create a new webgl context.\n         *\n         * @member {object}\n         * @private\n         */\n        this._contextOptions = {\n            alpha: this.transparent,\n            antialias: this.options.antialias,\n            premultipliedAlpha: this.transparent && this.transparent !== 'notMultiplied',\n            stencil: true,\n            preserveDrawingBuffer: this.options.preserveDrawingBuffer,\n            powerPreference: this.options.powerPreference,\n        };\n\n        this._backgroundColorRgba[3] = this.transparent ? 0 : 1;\n\n        /**\n         * Manages the masks using the stencil buffer.\n         *\n         * @member {SINT.MaskManager}\n         */\n        this.maskManager = new MaskManager(this);\n\n        /**\n         * Manages the stencil buffer.\n         *\n         * @member {SINT.StencilManager}\n         */\n        this.stencilManager = new StencilManager(this);\n\n        /**\n         * An empty renderer.\n         *\n         * @member {SINT.ObjectRenderer}\n         */\n        this.emptyRenderer = new ObjectRenderer(this);\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {SINT.ObjectRenderer}\n         */\n        this.currentRenderer = this.emptyRenderer;\n\n        /**\n         * Manages textures\n         * @member {SINT.TextureManager}\n         */\n        this.textureManager = null;\n\n        /**\n         * Manages the filters.\n         *\n         * @member {SINT.FilterManager}\n         */\n        this.filterManager = null;\n\n        this.initPlugins();\n\n        /**\n         * The current WebGL rendering context, it is created here\n         *\n         * @member {WebGLRenderingContext}\n         */\n        // initialize the context so it is ready for the managers.\n        if (this.options.context)\n        {\n            // checks to see if a context is valid..\n            validateContext(this.options.context);\n        }\n\n        this.gl = this.options.context || glCore.createContext(this.view, this._contextOptions);\n\n        this.CONTEXT_UID = CONTEXT_UID++;\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {SINT.WebGLState}\n         */\n        this.state = new WebGLState(this.gl);\n\n        this.renderingToScreen = true;\n\n        /**\n         * Holds the current state of textures bound to the GPU.\n         * @type {Array}\n         */\n        this.boundTextures = null;\n\n        /**\n         * Holds the current shader\n         *\n         * @member {SINT.Shader}\n         */\n        this._activeShader = null;\n\n        this._activeVao = null;\n\n        /**\n         * Holds the current render target\n         *\n         * @member {SINT.RenderTarget}\n         */\n        this._activeRenderTarget = null;\n\n        this._initContext();\n\n        // map some webGL blend and drawmodes..\n        // this.drawModes = mapWebGLDrawModesToPixi(this.gl);\n\n        this._nextTextureLocation = 0;\n\n        // this.setBlendMode(0);\n\n        /**\n         * Fired after rendering finishes.\n         *\n         * @event SINT.WebGLRenderer#postrender\n         */\n\n        /**\n         * Fired before rendering starts.\n         *\n         * @event SINT.WebGLRenderer#prerender\n         */\n\n        /**\n         * Fired when the WebGL context is set.\n         *\n         * @event SINT.WebGLRenderer#context\n         * @param {WebGLRenderingContext} gl - WebGL context.\n         */\n    }\n\n    /**\n     * Creates the WebGL context\n     *\n     * @private\n     */\n    _initContext()\n    {\n        const gl = this.gl;\n\n        // restore a context if it was previously lost\n        if (gl.isContextLost() && gl.getExtension('WEBGL_lose_context'))\n        {\n            gl.getExtension('WEBGL_lose_context').restoreContext();\n        }\n\n        const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n        this._activeShader = null;\n        this._activeVao = null;\n\n        this.boundTextures = new Array(maxTextures);\n        this.emptyTextures = new Array(maxTextures);\n\n        // create a texture manager...\n        this.textureManager = new TextureManager(this);\n        this.filterManager = new FilterManager(this);\n        this.textureGC = new TextureGarbageCollector(this);\n\n        this.state.resetToDefault();\n\n        this.rootRenderTarget = new RenderTarget(gl, this.width, this.height, null, this.resolution, true);\n        this.rootRenderTarget.clearColor = this._backgroundColorRgba;\n\n        this.bindRenderTarget(this.rootRenderTarget);\n\n        // now lets fill up the textures with empty ones!\n        const emptyGLTexture = new glCore.GLTexture.fromData(gl, null, 1, 1);\n\n        const tempObj = { _glTextures: {} };\n\n        tempObj._glTextures[this.CONTEXT_UID] = {};\n\n        for (let i = 0; i < maxTextures; i++)\n        {\n            const empty = new BaseTexture();\n\n            empty._glTextures[this.CONTEXT_UID] = emptyGLTexture;\n\n            this.boundTextures[i] = tempObj;\n            this.emptyTextures[i] = empty;\n            this.bindTexture(null, i);\n        }\n\n        this.emit('context', gl);\n\n        // setup the width/height properties and gl viewport\n        this.resize(this.screen.width, this.screen.height);\n    }\n\n    /**\n     * Renders the object to its webGL view\n     *\n     * @param {SINT.DisplayObject} displayObject - the object to be rendered\n     * @param {SINT.RenderTexture} renderTexture - The render texture to render to.\n     * @param {boolean} [clear] - Should the canvas be cleared before the new render\n     * @param {SINT.Matrix} [transform] - A transform to apply to the render texture before rendering.\n     * @param {boolean} [skipUpdateTransform] - Should we skip the update transform pass?\n     */\n    render(displayObject, renderTexture, clear, transform, skipUpdateTransform)\n    {\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.emit('prerender');\n\n        // no point rendering if our context has been blown up!\n        if (!this.gl || this.gl.isContextLost())\n        {\n            return;\n        }\n\n        this._nextTextureLocation = 0;\n\n        if (!renderTexture)\n        {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform)\n        {\n            // update the scene graph\n            const cacheParent = displayObject.parent;\n\n            displayObject.parent = this._tempDisplayObjectParent;\n            displayObject.updateTransform();\n            displayObject.parent = cacheParent;\n           // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        this.bindRenderTexture(renderTexture, transform);\n\n        this.currentRenderer.start();\n\n        if (clear !== undefined ? clear : this.clearBeforeRender)\n        {\n            this._activeRenderTarget.clear();\n        }\n\n        displayObject.renderWebGL(this);\n\n        // apply transform..\n        this.currentRenderer.flush();\n\n        // this.setObjectRenderer(this.emptyRenderer);\n\n        this.textureGC.update();\n\n        this.emit('postrender');\n    }\n\n    /**\n     * Changes the current renderer to the one given in parameter\n     *\n     * @param {SINT.ObjectRenderer} objectRenderer - The object renderer to use.\n     */\n    setObjectRenderer(objectRenderer)\n    {\n        if (this.currentRenderer === objectRenderer)\n        {\n            return;\n        }\n\n        this.currentRenderer.stop();\n        this.currentRenderer = objectRenderer;\n        this.currentRenderer.start();\n        console.log(\"setObjectRenderer\");\n    }\n\n    /**\n     * This should be called if you wish to do some custom rendering\n     * It will basically render anything that may be batched up such as sprites\n     *\n     */\n    flush()\n    {\n        this.setObjectRenderer(this.emptyRenderer);\n    }\n\n    /**\n     * Resizes the webGL view to the specified width and height.\n     *\n     * @param {number} screenWidth - the new width of the screen\n     * @param {number} screenHeight - the new height of the screen\n     */\n    resize(screenWidth, screenHeight)\n    {\n      //  if(width * this.resolution === this.width && height * this.resolution === this.height)return;\n\n        SystemRenderer.prototype.resize.call(this, screenWidth, screenHeight);\n\n        this.rootRenderTarget.resize(screenWidth, screenHeight);\n\n        if (this._activeRenderTarget === this.rootRenderTarget)\n        {\n            this.rootRenderTarget.activate();\n\n            if (this._activeShader)\n            {\n                this._activeShader.uniforms.projectionMatrix = this.rootRenderTarget.projectionMatrix.toArray(true);\n            }\n        }\n    }\n\n    /**\n     * Resizes the webGL view to the specified width and height.\n     *\n     * @param {number} blendMode - the desired blend mode\n     */\n    setBlendMode(blendMode)\n    {\n        this.state.setBlendMode(blendMode);\n    }\n\n    /**\n     * Erases the active render target and fills the drawing area with a colour\n     *\n     * @param {number} [clearColor] - The colour\n     */\n    clear(clearColor)\n    {\n        this._activeRenderTarget.clear(clearColor);\n    }\n\n    /**\n     * Sets the transform of the active render target to the given matrix\n     *\n     * @param {SINT.Matrix} matrix - The transformation matrix\n     */\n    setTransform(matrix)\n    {\n        this._activeRenderTarget.transform = matrix;\n    }\n\n    /**\n     * Erases the render texture and fills the drawing area with a colour\n     *\n     * @param {SINT.RenderTexture} renderTexture - The render texture to clear\n     * @param {number} [clearColor] - The colour\n     * @return {SINT.WebGLRenderer} Returns itself.\n     */\n    clearRenderTexture(renderTexture, clearColor)\n    {\n        const baseTexture = renderTexture.baseTexture;\n        const renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n\n        if (renderTarget)\n        {\n            renderTarget.clear(clearColor);\n        }\n\n        return this;\n    }\n\n    /**\n     * Binds a render texture for rendering\n     *\n     * @param {SINT.RenderTexture} renderTexture - The render texture to render\n     * @param {SINT.Matrix} transform - The transform to be applied to the render texture\n     * @return {SINT.WebGLRenderer} Returns itself.\n     */\n    bindRenderTexture(renderTexture, transform)\n    {\n        let renderTarget;\n\n        if (renderTexture)\n        {\n            const baseTexture = renderTexture.baseTexture;\n\n            if (!baseTexture._glRenderTargets[this.CONTEXT_UID])\n            {\n                // bind the current texture\n                this.textureManager.updateTexture(baseTexture, 0);\n            }\n\n            this.unbindTexture(baseTexture);\n\n            renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n            renderTarget.setFrame(renderTexture.frame);\n        }\n        else\n        {\n            renderTarget = this.rootRenderTarget;\n        }\n\n        renderTarget.transform = transform;\n        this.bindRenderTarget(renderTarget);\n\n        return this;\n    }\n\n    /**\n     * Changes the current render target to the one given in parameter\n     *\n     * @param {SINT.RenderTarget} renderTarget - the new render target\n     * @return {SINT.WebGLRenderer} Returns itself.\n     */\n    bindRenderTarget(renderTarget)\n    {\n        if (renderTarget !== this._activeRenderTarget)\n        {\n            this._activeRenderTarget = renderTarget;\n            renderTarget.activate();\n\n            if (this._activeShader)\n            {\n                this._activeShader.uniforms.projectionMatrix = renderTarget.projectionMatrix.toArray(true);\n            }\n\n            this.stencilManager.setMaskStack(renderTarget.stencilMaskStack);\n        }\n\n        return this;\n    }\n\n    /**\n     * Changes the current shader to the one given in parameter\n     *\n     * @param {SINT.Shader} shader - the new shader\n     * @param {boolean} [autoProject=true] - Whether automatically set the projection matrix\n     * @return {SINT.WebGLRenderer} Returns itself.\n     */\n    bindShader(shader, autoProject=true)\n    {\n        // TODO cache\n        if (this._activeShader !== shader)\n        {\n            this._activeShader = shader;\n            shader.bind();\n\n            // `autoProject` normally would be a default parameter set to true\n            // but because of how Babel transpiles default parameters\n            // it hinders the performance of this method.\n            if (autoProject !== false)\n            {\n                // automatically set the projection matrix\n                shader.uniforms.projectionMatrix = this._activeRenderTarget.projectionMatrix.toArray(true);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Binds the texture. This will return the location of the bound texture.\n     * It may not be the same as the one you pass in. This is due to optimisation that prevents\n     * needless binding of textures. For example if the texture is already bound it will return the\n     * current location of the texture instead of the one provided. To bypass this use force location\n     *\n     * @param {SINT.Texture} texture - the new texture\n     * @param {number} location - the suggested texture location\n     * @param {boolean} forceLocation - force the location\n     * @return {number} bound texture location\n     */\n    bindTexture(texture, location, forceLocation)\n    {\n        texture = texture || this.emptyTextures[location];\n        texture = texture.baseTexture || texture;\n        texture.touched = this.textureGC.count;\n\n        if (!forceLocation)\n        {\n            // TODO - maybe look into adding boundIds.. save us the loop?\n            for (let i = 0; i < this.boundTextures.length; i++)\n            {\n                if (this.boundTextures[i] === texture)\n                {\n                    return i;\n                }\n            }\n\n            if (location === undefined)\n            {\n                this._nextTextureLocation++;\n                this._nextTextureLocation %= this.boundTextures.length;\n                location = this.boundTextures.length - this._nextTextureLocation - 1;\n            }\n        }\n        else\n        {\n            location = location || 0;\n        }\n\n        const gl = this.gl;\n        const glTexture = texture._glTextures[this.CONTEXT_UID];\n\n        if (!glTexture)\n        {\n            // this will also bind the texture..\n            this.textureManager.updateTexture(texture, location);\n        }\n        else\n        {\n            // bind the current texture\n            this.boundTextures[location] = texture;\n            gl.activeTexture(gl.TEXTURE0 + location);\n            gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n        }\n\n        return location;\n    }\n\n     /**\n     * unbinds the texture ...\n     *\n     * @param {SINT.Texture} texture - the texture to unbind\n     * @return {SINT.WebGLRenderer} Returns itself.\n     */\n    unbindTexture(texture)\n    {\n        const gl = this.gl;\n\n        texture = texture.baseTexture || texture;\n\n        for (let i = 0; i < this.boundTextures.length; i++)\n        {\n            if (this.boundTextures[i] === texture)\n            {\n                this.boundTextures[i] = this.emptyTextures[i];\n\n                gl.activeTexture(gl.TEXTURE0 + i);\n                gl.bindTexture(gl.TEXTURE_2D, this.emptyTextures[i]._glTextures[this.CONTEXT_UID].texture);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Creates a new VAO from this renderer's context and state.\n     *\n     * @return {VertexArrayObject} The new VAO.\n     */\n    createVao()\n    {\n        return new glCore.VertexArrayObject(this.gl, this.state.attribState);\n    }\n\n    /**\n     * Changes the current Vao to the one given in parameter\n     *\n     * @param {SINT.VertexArrayObject} vao - the new Vao\n     * @return {SINT.WebGLRenderer} Returns itself.\n     */\n    bindVao(vao)\n    {\n        if (this._activeVao === vao)\n        {\n            return this;\n        }\n\n        if (vao)\n        {\n            vao.bind();\n        }\n        else if (this._activeVao)\n        {\n            // TODO this should always be true i think?\n            this._activeVao.unbind();\n        }\n\n        this._activeVao = vao;\n\n        return this;\n    }\n\n    /**\n     * Resets the WebGL state so you can render things however you fancy!\n     *\n     * @return {SINT.WebGLRenderer} Returns itself.\n     */\n    reset()\n    {\n        this.setObjectRenderer(this.emptyRenderer);\n\n        this.bindVao(null);\n        this._activeShader = null;\n        this._activeRenderTarget = this.rootRenderTarget;\n\n        for (let i = 0; i < this.boundTextures.length; i++)\n        {\n            this.boundTextures[i] = this.emptyTextures[i];\n        }\n\n        // bind the main frame buffer (the screen);\n        this.rootRenderTarget.activate();\n\n        this.state.resetToDefault();\n\n        return this;\n    }\n\n    /**\n     * Handles a lost webgl context\n     *\n     * @private\n     * @param {WebGLContextEvent} event - The context lost event.\n     */\n    handleContextLost(event)\n    {\n        event.preventDefault();\n    }\n\n    /**\n     * Handles a restored webgl context\n     *\n     * @private\n     */\n    handleContextRestored()\n    {\n        this.textureManager.removeAll();\n        this.filterManager.destroy(true);\n        this._initContext();\n    }\n\n    /**\n     * Removes everything from the renderer (event listeners, spritebatch, etc...)\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     *  See: https://github.com/SINTjs/SINT.js/issues/2233\n     */\n    destroy(removeView)\n    {\n        this.destroyPlugins();\n\n        // remove listeners\n        this.view.removeEventListener('webglcontextlost', this.handleContextLost);\n        this.view.removeEventListener('webglcontextrestored', this.handleContextRestored);\n\n        this.textureManager.destroy();\n\n        // call base destroy\n        super.destroy(removeView);\n\n        this.uid = 0;\n\n        // destroy the managers\n        this.maskManager.destroy();\n        this.stencilManager.destroy();\n        this.filterManager.destroy();\n\n        this.maskManager = null;\n        this.filterManager = null;\n        this.textureManager = null;\n        this.currentRenderer = null;\n\n        this.handleContextLost = null;\n        this.handleContextRestored = null;\n\n        this._contextOptions = null;\n        this.gl.useProgram(null);\n\n        if (this.gl.getExtension('WEBGL_lose_context'))\n        {\n            this.gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n\n        this.gl = null;\n\n        // this = null;\n    }\n}\n\n/**\n * Collection of installed plugins. These are included by default in SINT, but can be excluded\n * by creating a custom build. Consult the README for more information about creating custom\n * builds and excluding plugins.\n * @name SINT.WebGLRenderer#plugins\n * @type {object}\n * @readonly\n * @property {SINT.accessibility.AccessibilityManager} accessibility Support tabbing interactive elements.\n * @property {SINT.extract.WebGLExtract} extract Extract image data from renderer.\n * @property {SINT.interaction.InteractionManager} interaction Handles mouse, touch and pointer events.\n * @property {SINT.prepare.WebGLPrepare} prepare Pre-render display objects.\n */\n\n/**\n * Adds a plugin to the renderer.\n *\n * @method SINT.WebGLRenderer#registerPlugin\n * @param {string} pluginName - The name of the plugin.\n * @param {Function} ctor - The constructor function or class for the plugin.\n */\n\npluginTarget.mixin(WebGLRenderer);\n","/**\n * Generic Mask Stack data structure\n *\n * @memberof SINT\n * @function createIndicesForQuads\n * @private\n * @param {number} size - Number of quads\n * @return {Uint16Array} indices\n */\nexport default function createIndicesForQuads(size)\n{\n    // the total number of indices in our array, there are 6 points per quad.\n\n    const totalIndices = size * 6;\n\n    const indices = new Uint16Array(totalIndices);\n\n    // fill the indices with the quads to draw\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4)\n    {\n        indices[i + 0] = j + 0;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 0;\n        indices[i + 4] = j + 2;\n        indices[i + 5] = j + 3;\n    }\n\n    return indices;\n}\n","import { GLShader } from 'vf-gl-core';\nimport settings from './settings';\n\nfunction checkPrecision(src, def)\n{\n    if (src instanceof Array)\n    {\n        if (src[0].substring(0, 9) !== 'precision')\n        {\n            const copy = src.slice(0);\n\n            copy.unshift(`precision ${def} float;`);\n\n            return copy;\n        }\n    }\n    else if (src.trim().substring(0, 9) !== 'precision')\n    {\n        return `precision ${def} float;\\n${src}`;\n    }\n\n    return src;\n}\n\n/**\n * Wrapper class, webGL Shader for SINT.\n * Adds precision string if vertexSrc or fragmentSrc have no mention of it.\n *\n * @class\n * @extends GLShader\n * @memberof SINT\n */\nexport default class Shader extends GLShader\n{\n    /**\n     *\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     * @param {string|string[]} vertexSrc - The vertex shader source as an array of strings.\n     * @param {string|string[]} fragmentSrc - The fragment shader source as an array of strings.\n     * @param {object} [attributeLocations] - A key value pair showing which location eact attribute should sit.\n                       e.g. {position:0, uvs:1}.\n     * @param {string} [precision] - The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n     */\n    constructor(gl, vertexSrc, fragmentSrc, attributeLocations, precision)\n    {\n        super(gl, checkPrecision(vertexSrc, precision || settings.PRECISION_VERTEX),\n            checkPrecision(fragmentSrc, precision || settings.PRECISION_FRAGMENT), undefined, attributeLocations);\n    }\n}\n","\nexport * from './const';\nexport * from './math';\n\nimport * as utils from './utils';\nimport * as ticker from './ticker';\nimport WebGLRenderer from './renderer/WebGLRenderer';\n\nexport { utils,ticker,WebGLRenderer };\n\nexport { default as DisplayObject } from './display/DisplayObject';\nexport { default as Container } from './display/Container';\nexport { default as BaseTexture } from './textures/BaseTexture';\nexport { default as Texture } from './textures/Texture';\nexport { default as Sprite } from './sprites/Sprite';\nexport { default as SpriteRenderer } from './sprites/SpriteRenderer';\n\nexport { default as Application } from './Application';\n\n\nif (typeof window !== 'undefined')\n{\n    window.vf = window.vf || {};\n    window.vf.renderer = exports;\n}","/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n * An observable point is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof SINT\n */\nexport default class ObservablePoint\n{\n    /**\n     * @param {Function} cb - callback when changed\n     * @param {object} scope - owner of callback\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(cb, scope, x = 0, y = 0)\n    {\n        this._x = x;\n        this._y = y;\n\n        this.cb = cb;\n        this.scope = scope;\n    }\n\n    /**\n     * Creates a clone of this point.\n     * The callback and scope params can be overidden otherwise they will default\n     * to the clone object's values.\n     *\n     * @override\n     * @param {Function} [cb=null] - callback when changed\n     * @param {object} [scope=null] - owner of callback\n     * @return {SINT.ObservablePoint} a copy of the point\n     */\n    clone(cb = null, scope = null)\n    {\n        const _cb = cb || this.cb;\n        const _scope = scope || this.scope;\n\n        return new ObservablePoint(_cb, _scope, this._x, this._y);\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    set(x, y)\n    {\n        const _x = x || 0;\n        const _y = y || ((y !== 0) ? _x : 0);\n\n        if (this._x !== _x || this._y !== _y)\n        {\n            this._x = _x;\n            this._y = _y;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * Copies the data from another point\n     *\n     * @param {SINT.Point|SINT.ObservablePoint} point - point to copy from\n     */\n    copy(point)\n    {\n        if (this._x !== point.x || this._y !== point.y)\n        {\n            this._x = point.x;\n            this._y = point.y;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {SINT.Point|SINT.ObservablePoint} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */\n    equals(p)\n    {\n        return (p.x === this._x) && (p.y === this._y);\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n    get x()\n    {\n        return this._x;\n    }\n\n    set x(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._x !== value)\n        {\n            this._x = value;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n    get y()\n    {\n        return this._y;\n    }\n\n    set y(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._y !== value)\n        {\n            this._y = value;\n            this.cb.call(this.scope);\n        }\n    }\n}\n","import Rectangle from './Rectangle';\nimport { SHAPES } from '../../const';\n\n/**\n * The Circle object can be used to specify a hit area for displayObjects\n *\n * @class\n * @memberof SINT\n */\nexport default class Circle\n{\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this circle\n     * @param {number} [y=0] - The Y coordinate of the center of this circle\n     * @param {number} [radius=0] - The radius of the circle\n     */\n    constructor(x = 0, y = 0, radius = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.radius = radius;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default SINT.SHAPES.CIRC\n         * @see SINT.SHAPES\n         */\n        this.type = SHAPES.CIRC;\n    }\n\n    /**\n     * Creates a clone of this Circle instance\n     *\n     * @return {SINT.Circle} a copy of the Circle\n     */\n    clone()\n    {\n        return new Circle(this.x, this.y, this.radius);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this circle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Circle\n     */\n    contains(x, y)\n    {\n        if (this.radius <= 0)\n        {\n            return false;\n        }\n\n        const r2 = this.radius * this.radius;\n        let dx = (this.x - x);\n        let dy = (this.y - y);\n\n        dx *= dx;\n        dy *= dy;\n\n        return (dx + dy <= r2);\n    }\n\n    /**\n    * Returns the framing rectangle of the circle as a Rectangle object\n    *\n    * @return {SINT.Rectangle} the framing rectangle\n    */\n    getBounds()\n    {\n        return new Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n    }\n}\n","import Rectangle from './Rectangle';\nimport { SHAPES } from '../../const';\n\n/**\n * The Ellipse object can be used to specify a hit area for displayObjects\n *\n * @class\n * @memberof SINT\n */\nexport default class Ellipse\n{\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this circle\n     * @param {number} [y=0] - The Y coordinate of the center of this circle\n     * @param {number} [width=0] - The half width of this ellipse\n     * @param {number} [height=0] - The half height of this ellipse\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default SINT.SHAPES.ELIP\n         * @see SINT.SHAPES\n         */\n        this.type = SHAPES.ELIP;\n    }\n\n    /**\n     * Creates a clone of this Ellipse instance\n     *\n     * @return {SINT.Ellipse} a copy of the ellipse\n     */\n    clone()\n    {\n        return new Ellipse(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this ellipse\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coords are within this ellipse\n     */\n    contains(x, y)\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n\n        // normalize the coords to an ellipse with center 0,0\n        let normx = ((x - this.x) / this.width);\n        let normy = ((y - this.y) / this.height);\n\n        normx *= normx;\n        normy *= normy;\n\n        return (normx + normy <= 1);\n    }\n\n    /**\n     * Returns the framing rectangle of the ellipse as a Rectangle object\n     *\n     * @return {SINT.Rectangle} the framing rectangle\n     */\n    getBounds()\n    {\n        return new Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);\n    }\n}\n","import Point from '../Point';\nimport { SHAPES } from '../../const';\n\n/**\n * @class\n * @memberof SINT\n */\nexport default class Polygon\n{\n    /**\n     * @param {SINT.Point[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new SINT.Polygon(new SINT.Point(), new SINT.Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    constructor(...points)\n    {\n        if (Array.isArray(points[0]))\n        {\n            points = points[0];\n        }\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (points[0] instanceof Point)\n        {\n            const p = [];\n\n            for (let i = 0, il = points.length; i < il; i++)\n            {\n                p.push(points[i].x, points[i].y);\n            }\n\n            points = p;\n        }\n\n        this.closed = true;\n\n        /**\n         * An array of the points of this polygon\n         *\n         * @member {number[]}\n         */\n        this.points = points;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default SINT.SHAPES.POLY\n         * @see SINT.SHAPES\n         */\n        this.type = SHAPES.POLY;\n    }\n\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {SINT.Polygon} a copy of the polygon\n     */\n    clone()\n    {\n        return new Polygon(this.points.slice());\n    }\n\n    /**\n     * Closes the polygon, adding points if necessary.\n     *\n     */\n    close()\n    {\n        const points = this.points;\n\n        // close the poly if the value is true!\n        if (points[0] !== points[points.length - 2] || points[1] !== points[points.length - 1])\n        {\n            points.push(points[0], points[1]);\n        }\n    }\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n    contains(x, y)\n    {\n        let inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        const length = this.points.length / 2;\n\n        for (let i = 0, j = length - 1; i < length; j = i++)\n        {\n            const xi = this.points[i * 2];\n            const yi = this.points[(i * 2) + 1];\n            const xj = this.points[j * 2];\n            const yj = this.points[(j * 2) + 1];\n            const intersect = ((yi > y) !== (yj > y)) && (x < ((xj - xi) * ((y - yi) / (yj - yi))) + xi);\n\n            if (intersect)\n            {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    }\n}\n","import { SHAPES } from '../../const';\n\n/**\n * The Rounded Rectangle object is an area that has nice rounded corners, as indicated by its\n * top-left corner point (x, y) and by its width and its height and its radius.\n *\n * @class\n * @memberof SINT\n */\nexport default class RoundedRectangle\n{\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [width=0] - The overall width of this rounded rectangle\n     * @param {number} [height=0] - The overall height of this rounded rectangle\n     * @param {number} [radius=20] - Controls the radius of the rounded corners\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0, radius = 20)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * @member {number}\n         * @default 20\n         */\n        this.radius = radius;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readonly\n         * @default SINT.SHAPES.RREC\n         * @see SINT.SHAPES\n         */\n        this.type = SHAPES.RREC;\n    }\n\n    /**\n     * Creates a clone of this Rounded Rectangle\n     *\n     * @return {SINT.RoundedRectangle} a copy of the rounded rectangle\n     */\n    clone()\n    {\n        return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rounded Rectangle\n     */\n    contains(x, y)\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.width)\n        {\n            if (y >= this.y && y <= this.y + this.height)\n            {\n                if ((y >= this.y + this.radius && y <= this.y + this.height - this.radius)\n                || (x >= this.x + this.radius && x <= this.x + this.width - this.radius))\n                {\n                    return true;\n                }\n                let dx = x - (this.x + this.radius);\n                let dy = y - (this.y + this.radius);\n                const radius2 = this.radius * this.radius;\n\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dx = x - (this.x + this.width - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dy = y - (this.y + this.height - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dx = x - (this.x + this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n}\n","// import Device from 'ismobilejs';\n\nexport default function maxRecommendedTextures(max)\n{\n    // if (Device.tablet || Device.phone)\n    // {\n    //     // check if the res is iphone 6 or higher..\n    //     return 4;\n    // }\n\n    // desktop should be ok\n    return max;\n}\n","export default function canUploadSameBuffer()\n{\n\t// Uploading the same buffer multiple times in a single frame can cause perf issues.\n\t// Apparent on IOS so only check for that at the moment\n\t// this check may become more complex if this issue pops up elsewhere.\n    const ios = !!navigator.platform && (/iPad|iPhone|iPod/).test(navigator.platform);\n\n    return !ios;\n}\n","import { ObservablePoint } from '../math';\nimport TransformBase from './TransformBase';\n\n/**\n * Transform that takes care about its versions\n *\n * @class\n * @extends SINT.TransformBase\n * @memberof SINT\n */\nexport default class TransformStatic extends TransformBase\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n         /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         *\n         * @member {SINT.ObservablePoint}\n         */\n        this.position = new ObservablePoint(this.onChange, this, 0, 0);\n\n        /**\n         * The scale factor of the object.\n         *\n         * @member {SINT.ObservablePoint}\n         */\n        this.scale = new ObservablePoint(this.onChange, this, 1, 1);\n\n        /**\n         * The pivot point of the displayObject that it rotates around.\n         *\n         * @member {SINT.ObservablePoint}\n         */\n        this.pivot = new ObservablePoint(this.onChange, this, 0, 0);\n\n        /**\n         * The skew amount, on the x and y axis.\n         *\n         * @member {SINT.ObservablePoint}\n         */\n        this.skew = new ObservablePoint(this.updateSkew, this, 0, 0);\n\n        this._rotation = 0;\n\n        this._cx = 1; // cos rotation + skewY;\n        this._sx = 0; // sin rotation + skewY;\n        this._cy = 0; // cos rotation + Math.PI/2 - skewX;\n        this._sy = 1; // sin rotation + Math.PI/2 - skewX;\n\n        this._localID = 0;\n        this._currentLocalID = 0;\n    }\n\n    /**\n     * Called when a value changes.\n     *\n     * @private\n     */\n    onChange()\n    {\n        this._localID ++;\n    }\n\n    /**\n     * Called when skew or rotation changes\n     *\n     * @private\n     */\n    updateSkew()\n    {\n        this._cx = Math.cos(this._rotation + this.skew._y);\n        this._sx = Math.sin(this._rotation + this.skew._y);\n        this._cy = -Math.sin(this._rotation - this.skew._x); // cos, added PI/2\n        this._sy = Math.cos(this._rotation - this.skew._x); // sin, added PI/2\n\n        this._localID ++;\n    }\n\n    /**\n     * Updates only local matrix\n     */\n    updateLocalTransform()\n    {\n        const lt = this.localTransform;\n\n        if (this._localID !== this._currentLocalID)\n        {\n            // get the matrix values of the displayobject based on its transform properties..\n            lt.a = this._cx * this.scale._x;\n            lt.b = this._sx * this.scale._x;\n            lt.c = this._cy * this.scale._y;\n            lt.d = this._sy * this.scale._y;\n\n            lt.tx = this.position._x - ((this.pivot._x * lt.a) + (this.pivot._y * lt.c));\n            lt.ty = this.position._y - ((this.pivot._x * lt.b) + (this.pivot._y * lt.d));\n            this._currentLocalID = this._localID;\n\n            // force an update..\n            this._parentID = -1;\n        }\n    }\n\n    /**\n     * Updates the values of the object and applies the parent's transform.\n     *\n     * @param {SINT.Transform} parentTransform - The transform of the parent of this object\n     */\n    updateTransform(parentTransform)\n    {\n        const lt = this.localTransform;\n\n        if (this._localID !== this._currentLocalID)\n        {\n            // get the matrix values of the displayobject based on its transform properties..\n            lt.a = this._cx * this.scale._x;\n            lt.b = this._sx * this.scale._x;\n            lt.c = this._cy * this.scale._y;\n            lt.d = this._sy * this.scale._y;\n\n            lt.tx = this.position._x - ((this.pivot._x * lt.a) + (this.pivot._y * lt.c));\n            lt.ty = this.position._y - ((this.pivot._x * lt.b) + (this.pivot._y * lt.d));\n            this._currentLocalID = this._localID;\n\n            // force an update..\n            this._parentID = -1;\n        }\n\n        if (this._parentID !== parentTransform._worldID)\n        {\n            // concat the parent matrix with the objects transform.\n            const pt = parentTransform.worldTransform;\n            const wt = this.worldTransform;\n\n            wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n            wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n            wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n            wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n            wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n            wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n\n            this._parentID = parentTransform._worldID;\n\n            // update the id of the transform..\n            this._worldID ++;\n        }\n    }\n\n    /**\n     * Decomposes a matrix and sets the transforms properties based on it.\n     *\n     * @param {SINT.Matrix} matrix - The matrix to decompose\n     */\n    setFromMatrix(matrix)\n    {\n        matrix.decompose(this);\n        this._localID ++;\n    }\n\n    /**\n     * The rotation of the object in radians.\n     *\n     * @member {number}\n     */\n    get rotation()\n    {\n        return this._rotation;\n    }\n\n    set rotation(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._rotation !== value)\n        {\n            this._rotation = value;\n            this.updateSkew();\n        }\n    }\n}\n","import { Point, ObservablePoint } from '../math';\nimport TransformBase from './TransformBase';\n\n/**\n * Generic class to deal with traditional 2D matrix transforms\n * local transformation is calculated from position,scale,skew and rotation\n *\n * @class\n * @extends SINT.TransformBase\n * @memberof SINT\n */\nexport default class Transform extends TransformBase\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        super();\n\n         /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         *\n         * @member {SINT.Point}\n         */\n        this.position = new Point(0, 0);\n\n        /**\n         * The scale factor of the object.\n         *\n         * @member {SINT.Point}\n         */\n        this.scale = new Point(1, 1);\n\n        /**\n         * The skew amount, on the x and y axis.\n         *\n         * @member {SINT.ObservablePoint}\n         */\n        this.skew = new ObservablePoint(this.updateSkew, this, 0, 0);\n\n        /**\n         * The pivot point of the displayObject that it rotates around.\n         *\n         * @member {SINT.Point}\n         */\n        this.pivot = new Point(0, 0);\n\n        /**\n         * The rotation value of the object, in radians\n         *\n         * @member {Number}\n         * @private\n         */\n        this._rotation = 0;\n\n        this._cx = 1; // cos rotation + skewY;\n        this._sx = 0; // sin rotation + skewY;\n        this._cy = 0; // cos rotation + Math.PI/2 - skewX;\n        this._sy = 1; // sin rotation + Math.PI/2 - skewX;\n    }\n\n    /**\n     * Updates the skew values when the skew or rotation changes.\n     *\n     * @private\n     */\n    updateSkew()\n    {\n        this._cx = Math.cos(this._rotation + this.skew._y);\n        this._sx = Math.sin(this._rotation + this.skew._y);\n        this._cy = -Math.sin(this._rotation - this.skew._x); // cos, added PI/2\n        this._sy = Math.cos(this._rotation - this.skew._x); // sin, added PI/2\n    }\n\n    /**\n     * Updates only local matrix\n     */\n    updateLocalTransform()\n    {\n        const lt = this.localTransform;\n\n        lt.a = this._cx * this.scale.x;\n        lt.b = this._sx * this.scale.x;\n        lt.c = this._cy * this.scale.y;\n        lt.d = this._sy * this.scale.y;\n\n        lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\n        lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\n    }\n\n    /**\n     * Updates the values of the object and applies the parent's transform.\n     *\n     * @param {SINT.Transform} parentTransform - The transform of the parent of this object\n     */\n    updateTransform(parentTransform)\n    {\n        const lt = this.localTransform;\n\n        lt.a = this._cx * this.scale.x;\n        lt.b = this._sx * this.scale.x;\n        lt.c = this._cy * this.scale.y;\n        lt.d = this._sy * this.scale.y;\n\n        lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\n        lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\n\n        // concat the parent matrix with the objects transform.\n        const pt = parentTransform.worldTransform;\n        const wt = this.worldTransform;\n\n        wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n        wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n        wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n        wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n        wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n        wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n\n        this._worldID ++;\n    }\n\n    /**\n     * Decomposes a matrix and sets the transforms properties based on it.\n     *\n     * @param {SINT.Matrix} matrix - The matrix to decompose\n     */\n    setFromMatrix(matrix)\n    {\n        matrix.decompose(this);\n    }\n\n    /**\n     * The rotation of the object in radians.\n     *\n     * @member {number}\n     */\n    get rotation()\n    {\n        return this._rotation;\n    }\n\n    set rotation(value) // eslint-disable-line require-jsdoc\n    {\n        this._rotation = value;\n        this.updateSkew();\n    }\n}\n","import { Rectangle } from '../math';\n\n/**\n * 'Builder' pattern for bounds rectangles\n * Axis-Aligned Bounding Box\n * It is not a shape! Its mutable thing, no 'EMPTY' or that kind of problems\n *\n * @class\n * @memberof SINT\n */\nexport default class Bounds\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minX = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minY = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxX = -Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxY = -Infinity;\n\n        this.rect = null;\n    }\n\n    /**\n     * Checks if bounds are empty.\n     *\n     * @return {boolean} True if empty.\n     */\n    isEmpty()\n    {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    }\n\n    /**\n     * Clears the bounds and resets.\n     *\n     */\n    clear()\n    {\n        this.updateID++;\n\n        this.minX = Infinity;\n        this.minY = Infinity;\n        this.maxX = -Infinity;\n        this.maxY = -Infinity;\n    }\n\n    /**\n     * Can return Rectangle.EMPTY constant, either construct new rectangle, either use your rectangle\n     * It is not guaranteed that it will return tempRect\n     *\n     * @param {SINT.Rectangle} rect - temporary object will be used if AABB is not empty\n     * @returns {SINT.Rectangle} A rectangle of the bounds\n     */\n    getRectangle(rect)\n    {\n        if (this.minX > this.maxX || this.minY > this.maxY)\n        {\n            return Rectangle.EMPTY;\n        }\n\n        rect = rect || new Rectangle(0, 0, 1, 1);\n\n        rect.x = this.minX;\n        rect.y = this.minY;\n        rect.width = this.maxX - this.minX;\n        rect.height = this.maxY - this.minY;\n\n        return rect;\n    }\n\n    /**\n     * This function should be inlined when its possible.\n     *\n     * @param {SINT.Point} point - The point to add.\n     */\n    addPoint(point)\n    {\n        this.minX = Math.min(this.minX, point.x);\n        this.maxX = Math.max(this.maxX, point.x);\n        this.minY = Math.min(this.minY, point.y);\n        this.maxY = Math.max(this.maxY, point.y);\n    }\n\n    /**\n     * Adds a quad, not transformed\n     *\n     * @param {Float32Array} vertices - The verts to add.\n     */\n    addQuad(vertices)\n    {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        let x = vertices[0];\n        let y = vertices[1];\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[2];\n        y = vertices[3];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[4];\n        y = vertices[5];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[6];\n        y = vertices[7];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds sprite frame, transformed.\n     *\n     * @param {SINT.TransformBase} transform - TODO\n     * @param {number} x0 - TODO\n     * @param {number} y0 - TODO\n     * @param {number} x1 - TODO\n     * @param {number} y1 - TODO\n     */\n    addFrame(transform, x0, y0, x1, y1)\n    {\n        const matrix = transform.worldTransform;\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        let x = (a * x0) + (c * y0) + tx;\n        let y = (b * x0) + (d * y0) + ty;\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x1) + (c * y0) + tx;\n        y = (b * x1) + (d * y0) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x0) + (c * y1) + tx;\n        y = (b * x0) + (d * y1) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x1) + (c * y1) + tx;\n        y = (b * x1) + (d * y1) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Add an array of vertices\n     *\n     * @param {SINT.TransformBase} transform - TODO\n     * @param {Float32Array} vertices - TODO\n     * @param {number} beginOffset - TODO\n     * @param {number} endOffset - TODO\n     */\n    addVertices(transform, vertices, beginOffset, endOffset)\n    {\n        const matrix = transform.worldTransform;\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        for (let i = beginOffset; i < endOffset; i += 2)\n        {\n            const rawX = vertices[i];\n            const rawY = vertices[i + 1];\n            const x = (a * rawX) + (c * rawY) + tx;\n            const y = (d * rawY) + (b * rawX) + ty;\n\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds other Bounds\n     *\n     * @param {SINT.Bounds} bounds - TODO\n     */\n    addBounds(bounds)\n    {\n        const minX = this.minX;\n        const minY = this.minY;\n        const maxX = this.maxX;\n        const maxY = this.maxY;\n\n        this.minX = bounds.minX < minX ? bounds.minX : minX;\n        this.minY = bounds.minY < minY ? bounds.minY : minY;\n        this.maxX = bounds.maxX > maxX ? bounds.maxX : maxX;\n        this.maxY = bounds.maxY > maxY ? bounds.maxY : maxY;\n    }\n\n    /**\n     * Adds other Bounds, masked with Bounds\n     *\n     * @param {SINT.Bounds} bounds - TODO\n     * @param {SINT.Bounds} mask - TODO\n     */\n    addBoundsMask(bounds, mask)\n    {\n        const _minX = bounds.minX > mask.minX ? bounds.minX : mask.minX;\n        const _minY = bounds.minY > mask.minY ? bounds.minY : mask.minY;\n        const _maxX = bounds.maxX < mask.maxX ? bounds.maxX : mask.maxX;\n        const _maxY = bounds.maxY < mask.maxY ? bounds.maxY : mask.maxY;\n\n        if (_minX <= _maxX && _minY <= _maxY)\n        {\n            const minX = this.minX;\n            const minY = this.minY;\n            const maxX = this.maxX;\n            const maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    }\n\n    /**\n     * Adds other Bounds, masked with Rectangle\n     *\n     * @param {SINT.Bounds} bounds - TODO\n     * @param {SINT.Rectangle} area - TODO\n     */\n    addBoundsArea(bounds, area)\n    {\n        const _minX = bounds.minX > area.x ? bounds.minX : area.x;\n        const _minY = bounds.minY > area.y ? bounds.minY : area.y;\n        const _maxX = bounds.maxX < area.x + area.width ? bounds.maxX : (area.x + area.width);\n        const _maxY = bounds.maxY < area.y + area.height ? bounds.maxY : (area.y + area.height);\n\n        if (_minX <= _maxX && _minY <= _maxY)\n        {\n            const minX = this.minX;\n            const minY = this.minY;\n            const maxX = this.maxX;\n            const maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    }\n}\n","/**\n * Mixins functionality to make an object have \"plugins\".\n *\n * @example\n *      function MyObject() {}\n *\n *      pluginTarget.mixin(MyObject);\n *\n * @mixin\n * @memberof SINT.utils\n * @param {object} obj - The object to mix into.\n */\nfunction pluginTarget(obj)\n{\n    obj.__plugins = {};\n\n    /**\n     * Adds a plugin to an object\n     *\n     * @param {string} pluginName - The events that should be listed.\n     * @param {Function} ctor - The constructor function for the plugin.\n     */\n    obj.registerPlugin = function registerPlugin(pluginName, ctor)\n    {\n        obj.__plugins[pluginName] = ctor;\n    };\n\n    /**\n     * Instantiates all the plugins of this object\n     *\n     */\n    obj.prototype.initPlugins = function initPlugins()\n    {\n        this.plugins = this.plugins || {};\n\n        for (const o in obj.__plugins)\n        {\n            this.plugins[o] = new (obj.__plugins[o])(this);\n        }\n    };\n\n    /**\n     * Removes all the plugins of this object\n     *\n     */\n    obj.prototype.destroyPlugins = function destroyPlugins()\n    {\n        for (const o in this.plugins)\n        {\n            this.plugins[o].destroy();\n            this.plugins[o] = null;\n        }\n\n        this.plugins = null;\n    };\n}\n\nexport default {\n    /**\n     * Mixes in the properties of the pluginTarget into another object\n     *\n     * @param {object} obj - The obj to mix into\n     */\n    mixin: function mixin(obj)\n    {\n        pluginTarget(obj);\n    },\n};\n","/**\n * Mixes all enumerable properties and methods from a source object to a target object.\n *\n * @memberof SINT.utils.mixins\n * @function mixin\n * @param {object} target The prototype or instance that properties and methods should be added to.\n * @param {object} source The source of properties and methods to mix in.\n */\nexport function mixin(target, source)\n{\n    if (!target || !source) return;\n    // in ES8/ES2017, this would be really easy:\n    // Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n\n    // get all the enumerable property keys\n    const keys = Object.keys(source);\n\n    // loop through properties\n    for (let i = 0; i < keys.length; ++i)\n    {\n        const propertyName = keys[i];\n\n        // Set the property using the property descriptor - this works for accessors and normal value properties\n        Object.defineProperty(target, propertyName, Object.getOwnPropertyDescriptor(source, propertyName));\n    }\n}\n\nconst mixins = [];\n\n/**\n * Queues a mixin to be handled towards the end of the initialization of SINT, so that deprecation\n * can take effect.\n *\n * @memberof SINT.utils.mixins\n * @function delayMixin\n * @private\n * @param {object} target The prototype or instance that properties and methods should be added to.\n * @param {object} source The source of properties and methods to mix in.\n */\nexport function delayMixin(target, source)\n{\n    mixins.push(target, source);\n}\n\n/**\n * Handles all mixins queued via delayMixin().\n *\n * @memberof SINT.utils.mixins\n * @function performMixins\n * @private\n */\nexport function performMixins()\n{\n    for (let i = 0; i < mixins.length; i += 2)\n    {\n        mixin(mixins[i], mixins[i + 1]);\n    }\n    mixins.length = 0;\n}\n","'use strict'\n\n/**\n * Remove a range of items from an array\n *\n * @function removeItems\n * @param {Array<*>} arr The target array\n * @param {number} startIdx The index to begin removing from (inclusive)\n * @param {number} removeCount How many items to remove\n */\nmodule.exports = function removeItems (arr, startIdx, removeCount) {\n  var i, length = arr.length\n\n  if (startIdx >= length || removeCount === 0) {\n    return\n  }\n\n  removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount)\n\n  var len = length - removeCount\n\n  for (i = startIdx; i < len; ++i) {\n    arr[i] = arr[i + removeCount]\n  }\n\n  arr.length = len\n}\n","import { BLEND_MODES } from '../const';\n\n/**\n * Corrects SintJS blend, takes premultiplied alpha into account\n *\n * @memberof SINT\n * @function mapPremultipliedBlendModes\n * @private\n * @param {Array<number[]>} [array] - The array to output into.\n * @return {Array<number[]>} Mapped modes.\n */\n\nexport default function mapPremultipliedBlendModes()\n{\n    const pm = [];\n    const npm = [];\n\n    for (let i = 0; i < 32; i++)\n    {\n        pm[i] = i;\n        npm[i] = i;\n    }\n\n    pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n    pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n    pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n\n    npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n    npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n    npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n\n    const array = [];\n\n    array.push(npm);\n    array.push(pm);\n\n    return array;\n}\n","import _url from 'url';\n\nlet tempAnchor;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nexport default function determineCrossOrigin(url, loc = window.location)\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0)\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = _url.parse(tempAnchor.href);\n\n    const samePort = (!url.port && loc.port === '') || (url.port === loc.port);\n\n    // if cross origin\n    if (url.hostname !== loc.hostname || !samePort || url.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","import GroupD8 from '../math/GroupD8';\n\n/**\n * A standard object to store the Uvs of a texture\n *\n * @class\n * @private\n * @memberof SINT\n */\nexport default class TextureUvs\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        this.x0 = 0;\n        this.y0 = 0;\n\n        this.x1 = 1;\n        this.y1 = 0;\n\n        this.x2 = 1;\n        this.y2 = 1;\n\n        this.x3 = 0;\n        this.y3 = 1;\n\n        this.uvsUint32 = new Uint32Array(4);\n    }\n\n    /**\n     * Sets the texture Uvs based on the given frame information.\n     *\n     * @private\n     * @param {SINT.Rectangle} frame - The frame of the texture\n     * @param {SINT.Rectangle} baseFrame - The base frame of the texture\n     * @param {number} rotate - Rotation of frame, see {@link SINT.GroupD8}\n     */\n    set(frame, baseFrame, rotate)\n    {\n        const tw = baseFrame.width;\n        const th = baseFrame.height;\n\n        if (rotate)\n        {\n            // width and height div 2 div baseFrame size\n            const w2 = frame.width / 2 / tw;\n            const h2 = frame.height / 2 / th;\n\n            // coordinates of center\n            const cX = (frame.x / tw) + w2;\n            const cY = (frame.y / th) + h2;\n\n            rotate = GroupD8.add(rotate, GroupD8.NW); // NW is top-left corner\n            this.x0 = cX + (w2 * GroupD8.uX(rotate));\n            this.y0 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2); // rotate 90 degrees clockwise\n            this.x1 = cX + (w2 * GroupD8.uX(rotate));\n            this.y1 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2);\n            this.x2 = cX + (w2 * GroupD8.uX(rotate));\n            this.y2 = cY + (h2 * GroupD8.uY(rotate));\n\n            rotate = GroupD8.add(rotate, 2);\n            this.x3 = cX + (w2 * GroupD8.uX(rotate));\n            this.y3 = cY + (h2 * GroupD8.uY(rotate));\n        }\n        else\n        {\n            this.x0 = frame.x / tw;\n            this.y0 = frame.y / th;\n\n            this.x1 = (frame.x + frame.width) / tw;\n            this.y1 = frame.y / th;\n\n            this.x2 = (frame.x + frame.width) / tw;\n            this.y2 = (frame.y + frame.height) / th;\n\n            this.x3 = frame.x / tw;\n            this.y3 = (frame.y + frame.height) / th;\n        }\n\n        this.uvsUint32[0] = ((Math.round(this.y0 * 65535) & 0xFFFF) << 16) | (Math.round(this.x0 * 65535) & 0xFFFF);\n        this.uvsUint32[1] = ((Math.round(this.y1 * 65535) & 0xFFFF) << 16) | (Math.round(this.x1 * 65535) & 0xFFFF);\n        this.uvsUint32[2] = ((Math.round(this.y2 * 65535) & 0xFFFF) << 16) | (Math.round(this.x2 * 65535) & 0xFFFF);\n        this.uvsUint32[3] = ((Math.round(this.y3 * 65535) & 0xFFFF) << 16) | (Math.round(this.x3 * 65535) & 0xFFFF);\n    }\n}\n","import { Point, ObservablePoint, Rectangle } from '../math';\nimport { sign, TextureCache } from '../utils';\nimport { BLEND_MODES } from '../const';\nimport Texture from '../textures/Texture';\nimport Container from '../display/Container';\n\nconst tempPoint = new Point();\n\n/**\n * The Sprite object is the base for all textured objects that are rendered to the screen\n *\n * A sprite can be created directly from an image like this:\n *\n * ```js\n * let sprite = new SINT.Sprite.fromImage('assets/image.png');\n * ```\n *\n * The more efficient way to create sprites is using a {@link SINT.Spritesheet}:\n *\n * ```js\n * SINT.loader.add(\"assets/spritesheet.json\").load(setup);\n *\n * function setup() {\n *   let sheet = SINT.loader.resources[\"assets/spritesheet.json\"].spritesheet;\n *   let sprite = new SINT.Sprite(sheet.textures[\"image.png\"]);\n *   ...\n * }\n * ```\n *\n * @class\n * @extends SINT.Container\n * @memberof SINT\n */\nexport default class Sprite extends Container\n{\n    /**\n     * @param {SINT.Texture} texture - The texture for this sprite\n     */\n    constructor(texture)\n    {\n        super();\n\n        /**\n         * The anchor sets the origin point of the texture.\n         * The default is 0,0 or taken from the {@link SINT.Texture#defaultAnchor|Texture}\n         * passed to the constructor. A value of 0,0 means the texture's origin is the top left.\n         * Setting the anchor to 0.5,0.5 means the texture's origin is centered.\n         * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner.\n         * Note: Updating the {@link SINT.Texture#defaultAnchor} after a Texture is\n         * created does _not_ update the Sprite's anchor values.\n         *\n         * @member {SINT.ObservablePoint}\n         * @private\n         */\n        this._anchor = new ObservablePoint(\n            this._onAnchorUpdate,\n            this,\n            (texture ? texture.defaultAnchor.x : 0),\n            (texture ? texture.defaultAnchor.y : 0)\n        );\n\n        /**\n         * The texture that the sprite is using\n         *\n         * @private\n         * @member {SINT.Texture}\n         */\n        this._texture = null;\n\n        /**\n         * The width of the sprite (this is initially set by the texture)\n         *\n         * @private\n         * @member {number}\n         */\n        this._width = 0;\n\n        /**\n         * The height of the sprite (this is initially set by the texture)\n         *\n         * @private\n         * @member {number}\n         */\n        this._height = 0;\n\n        /**\n         * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        this._tint = null;\n        this._tintRGB = null;\n        this.tint = 0xFFFFFF;\n\n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `SINT.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default SINT.BLEND_MODES.NORMAL\n         * @see SINT.BLEND_MODES\n         */\n        this.blendMode = BLEND_MODES.NORMAL;\n\n        /**\n         * The shader that will be used to render the sprite. Set to null to remove a current shader.\n         *\n         * @member {SINT.Filter|SINT.Shader}\n         */\n        this.shader = null;\n\n        /**\n         * An internal cached value of the tint.\n         *\n         * @private\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        this.cachedTint = 0xFFFFFF;\n\n        // call texture setter\n        this.texture = texture || Texture.EMPTY;\n\n        /**\n         * this is used to store the vertex data of the sprite (basically a quad)\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        this.vertexData = new Float32Array(8);\n\n        /**\n         * This is used to calculate the bounds of the object IF it is a trimmed sprite\n         *\n         * @private\n         * @member {Float32Array}\n         */\n        this.vertexTrimmedData = null;\n\n        this._transformID = -1;\n        this._textureID = -1;\n\n        this._transformTrimmedID = -1;\n        this._textureTrimmedID = -1;\n\n        /**\n         * Plugin that is responsible for rendering this element.\n         * Allows to customize the rendering process without overriding '_renderWebGL' & '_renderCanvas' methods.\n         *\n         * @member {string}\n         * @default 'sprite'\n         */\n        this.pluginName = 'sprite';\n    }\n\n    /**\n     * When the texture is updated, this event will fire to update the scale and frame\n     *\n     * @private\n     */\n    _onTextureUpdate()\n    {\n        this._textureID = -1;\n        this._textureTrimmedID = -1;\n        this.cachedTint = 0xFFFFFF;\n\n        // so if _width is 0 then width was not set..\n        if (this._width)\n        {\n            this.scale.x = sign(this.scale.x) * this._width / this._texture.orig.width;\n        }\n\n        if (this._height)\n        {\n            this.scale.y = sign(this.scale.y) * this._height / this._texture.orig.height;\n        }\n    }\n\n    /**\n     * Called when the anchor position updates.\n     *\n     * @private\n     */\n    _onAnchorUpdate()\n    {\n        this._transformID = -1;\n        this._transformTrimmedID = -1;\n    }\n\n    /**\n     * calculates worldTransform * vertices, store it in vertexData\n     */\n    calculateVertices()\n    {\n        if (this._transformID === this.transform._worldID && this._textureID === this._texture._updateID)\n        {\n            return;\n        }\n\n        this._transformID = this.transform._worldID;\n        this._textureID = this._texture._updateID;\n\n        // set the vertex data\n\n        const texture = this._texture;\n        const wt = this.transform.worldTransform;\n        const a = wt.a;\n        const b = wt.b;\n        const c = wt.c;\n        const d = wt.d;\n        const tx = wt.tx;\n        const ty = wt.ty;\n        const vertexData = this.vertexData;\n        const trim = texture.trim;\n        const orig = texture.orig;\n        const anchor = this._anchor;\n\n        let w0 = 0;\n        let w1 = 0;\n        let h0 = 0;\n        let h1 = 0;\n\n        if (trim)\n        {\n            // if the sprite is trimmed and is not a tilingsprite then we need to add the extra\n            // space before transforming the sprite coords.\n            w1 = trim.x - (anchor._x * orig.width);\n            w0 = w1 + trim.width;\n\n            h1 = trim.y - (anchor._y * orig.height);\n            h0 = h1 + trim.height;\n        }\n        else\n        {\n            w1 = -anchor._x * orig.width;\n            w0 = w1 + orig.width;\n\n            h1 = -anchor._y * orig.height;\n            h0 = h1 + orig.height;\n        }\n\n        // xy\n        vertexData[0] = (a * w1) + (c * h1) + tx;\n        vertexData[1] = (d * h1) + (b * w1) + ty;\n\n        // xy\n        vertexData[2] = (a * w0) + (c * h1) + tx;\n        vertexData[3] = (d * h1) + (b * w0) + ty;\n\n         // xy\n        vertexData[4] = (a * w0) + (c * h0) + tx;\n        vertexData[5] = (d * h0) + (b * w0) + ty;\n\n        // xy\n        vertexData[6] = (a * w1) + (c * h0) + tx;\n        vertexData[7] = (d * h0) + (b * w1) + ty;\n    }\n\n    /**\n     * calculates worldTransform * vertices for a non texture with a trim. store it in vertexTrimmedData\n     * This is used to ensure that the true width and height of a trimmed texture is respected\n     */\n    calculateTrimmedVertices()\n    {\n        if (!this.vertexTrimmedData)\n        {\n            this.vertexTrimmedData = new Float32Array(8);\n        }\n        else if (this._transformTrimmedID === this.transform._worldID && this._textureTrimmedID === this._texture._updateID)\n        {\n            return;\n        }\n\n        this._transformTrimmedID = this.transform._worldID;\n        this._textureTrimmedID = this._texture._updateID;\n\n        // lets do some special trim code!\n        const texture = this._texture;\n        const vertexData = this.vertexTrimmedData;\n        const orig = texture.orig;\n        const anchor = this._anchor;\n\n        // lets calculate the new untrimmed bounds..\n        const wt = this.transform.worldTransform;\n        const a = wt.a;\n        const b = wt.b;\n        const c = wt.c;\n        const d = wt.d;\n        const tx = wt.tx;\n        const ty = wt.ty;\n\n        const w1 = -anchor._x * orig.width;\n        const w0 = w1 + orig.width;\n\n        const h1 = -anchor._y * orig.height;\n        const h0 = h1 + orig.height;\n\n        // xy\n        vertexData[0] = (a * w1) + (c * h1) + tx;\n        vertexData[1] = (d * h1) + (b * w1) + ty;\n\n        // xy\n        vertexData[2] = (a * w0) + (c * h1) + tx;\n        vertexData[3] = (d * h1) + (b * w0) + ty;\n\n        // xy\n        vertexData[4] = (a * w0) + (c * h0) + tx;\n        vertexData[5] = (d * h0) + (b * w0) + ty;\n\n        // xy\n        vertexData[6] = (a * w1) + (c * h0) + tx;\n        vertexData[7] = (d * h0) + (b * w1) + ty;\n    }\n\n    /**\n    *\n    * Renders the object using the WebGL renderer\n    *\n    * @private\n    * @param {SINT.WebGLRenderer} renderer - The webgl renderer to use.\n    */\n    _renderWebGL(renderer)\n    {\n        this.calculateVertices();\n        // console.log(renderer.plugins);\n\n        renderer.setObjectRenderer(renderer.plugins[this.pluginName]);\n        renderer.plugins[this.pluginName].render(this);\n    }\n\n    /**\n    * Renders the object using the Canvas renderer\n    *\n    * @private\n    * @param {SINT.CanvasRenderer} renderer - The renderer\n    */\n    _renderCanvas(renderer)\n    {\n        renderer.plugins[this.pluginName].render(this);\n    }\n\n    /**\n     * Updates the bounds of the sprite.\n     *\n     * @private\n     */\n    _calculateBounds()\n    {\n        const trim = this._texture.trim;\n        const orig = this._texture.orig;\n\n        // First lets check to see if the current texture has a trim..\n        if (!trim || (trim.width === orig.width && trim.height === orig.height))\n        {\n            // no trim! lets use the usual calculations..\n            this.calculateVertices();\n            this._bounds.addQuad(this.vertexData);\n        }\n        else\n        {\n            // lets calculate a special trimmed bounds...\n            this.calculateTrimmedVertices();\n            this._bounds.addQuad(this.vertexTrimmedData);\n        }\n    }\n\n    /**\n     * Gets the local bounds of the sprite object.\n     *\n     * @param {SINT.Rectangle} rect - The output rectangle.\n     * @return {SINT.Rectangle} The bounds.\n     */\n    getLocalBounds(rect)\n    {\n        // we can do a fast local bounds if the sprite has no children!\n        if (this.children.length === 0)\n        {\n            this._bounds.minX = this._texture.orig.width * -this._anchor._x;\n            this._bounds.minY = this._texture.orig.height * -this._anchor._y;\n            this._bounds.maxX = this._texture.orig.width * (1 - this._anchor._x);\n            this._bounds.maxY = this._texture.orig.height * (1 - this._anchor._y);\n\n            if (!rect)\n            {\n                if (!this._localBoundsRect)\n                {\n                    this._localBoundsRect = new Rectangle();\n                }\n\n                rect = this._localBoundsRect;\n            }\n\n            return this._bounds.getRectangle(rect);\n        }\n\n        return super.getLocalBounds.call(this, rect);\n    }\n\n    /**\n     * Tests if a point is inside this sprite\n     *\n     * @param {SINT.Point} point - the point to test\n     * @return {boolean} the result of the test\n     */\n    containsPoint(point)\n    {\n        this.worldTransform.applyInverse(point, tempPoint);\n\n        const width = this._texture.orig.width;\n        const height = this._texture.orig.height;\n        const x1 = -width * this.anchor.x;\n        let y1 = 0;\n\n        if (tempPoint.x >= x1 && tempPoint.x < x1 + width)\n        {\n            y1 = -height * this.anchor.y;\n\n            if (tempPoint.y >= y1 && tempPoint.y < y1 + height)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Destroys this sprite and optionally its texture and children\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *      method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the sprite as well\n     * @param {boolean} [options.baseTexture=false] - Should it destroy the base texture of the sprite as well\n     */\n    destroy(options)\n    {\n        super.destroy(options);\n\n        this._texture.off('update', this._onTextureUpdate, this);\n\n        this._anchor = null;\n\n        const destroyTexture = typeof options === 'boolean' ? options : options && options.texture;\n\n        if (destroyTexture)\n        {\n            const destroyBaseTexture = typeof options === 'boolean' ? options : options && options.baseTexture;\n\n            this._texture.destroy(!!destroyBaseTexture);\n        }\n\n        this._texture = null;\n        this.shader = null;\n    }\n\n    // some helper functions..\n\n    /**\n     * Helper function that creates a new sprite based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {number|string|SINT.BaseTexture|HTMLCanvasElement|HTMLVideoElement} source Source to create texture from\n     * @return {SINT.Sprite} The newly created sprite\n     */\n    static from(source)\n    {\n        return new Sprite(Texture.from(source));\n    }\n\n    /**\n     * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n     * The frame ids are created when a Texture packer file has been loaded\n     *\n     * @static\n     * @param {string} frameId - The frame Id of the texture in the cache\n     * @return {SINT.Sprite} A new Sprite using a texture from the texture cache matching the frameId\n     */\n    static fromFrame(frameId)\n    {\n        const texture = TextureCache[frameId];\n\n        if (!texture)\n        {\n            throw new Error(`The frameId \"${frameId}\" does not exist in the texture cache`);\n        }\n\n        return new Sprite(texture);\n    }\n\n    /**\n     * Helper function that creates a sprite that will contain a texture based on an image url\n     * If the image is not in the texture cache it will be loaded\n     *\n     * @static\n     * @param {string} imageId - The image url of the texture\n     * @param {boolean} [crossorigin=(auto)] - if you want to specify the cross-origin parameter\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - if you want to specify the scale mode,\n     *  see {@link SINT.SCALE_MODES} for possible values\n     * @return {SINT.Sprite} A new Sprite using a texture from the texture cache matching the image id\n     */\n    static fromImage(imageId, crossorigin, scaleMode)\n    {\n        return new Sprite(Texture.fromImage(imageId, crossorigin, scaleMode));\n    }\n\n    /**\n     * The width of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     */\n    get width()\n    {\n        return Math.abs(this.scale.x) * this._texture.orig.width;\n    }\n\n    set width(value) // eslint-disable-line require-jsdoc\n    {\n        const s = sign(this.scale.x) || 1;\n\n        this.scale.x = s * value / this._texture.orig.width;\n        this._width = value;\n    }\n\n    /**\n     * The height of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     */\n    get height()\n    {\n        return Math.abs(this.scale.y) * this._texture.orig.height;\n    }\n\n    set height(value) // eslint-disable-line require-jsdoc\n    {\n        const s = sign(this.scale.y) || 1;\n\n        this.scale.y = s * value / this._texture.orig.height;\n        this._height = value;\n    }\n\n    /**\n     * The anchor sets the origin point of the texture.\n     * The default is 0,0 or taken from the {@link SINT.Texture|Texture} passed to the constructor.\n     * Setting the texture at a later point of time does not change the anchor.\n     *\n     * 0,0 means the texture's origin is the top left, 0.5,0.5 is the center, 1,1 the bottom right corner.\n     *\n     * @member {SINT.ObservablePoint}\n     */\n    get anchor()\n    {\n        return this._anchor;\n    }\n\n    set anchor(value) // eslint-disable-line require-jsdoc\n    {\n        this._anchor.copy(value);\n    }\n\n    /**\n     * The tint applied to the sprite. This is a hex value.\n     * A value of 0xFFFFFF will remove any tint effect.\n     *\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    get tint()\n    {\n        return this._tint;\n    }\n\n    set tint(value) // eslint-disable-line require-jsdoc\n    {\n        this._tint = value;\n        this._tintRGB = (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\n    }\n\n    /**\n     * The texture that the sprite is using\n     *\n     * @member {SINT.Texture}\n     */\n    get texture()\n    {\n        return this._texture;\n    }\n\n    set texture(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._texture === value)\n        {\n            return;\n        }\n\n        this._texture = value || Texture.EMPTY;\n        this.cachedTint = 0xFFFFFF;\n\n        this._textureID = -1;\n        this._textureTrimmedID = -1;\n\n        if (value)\n        {\n            // wait for the texture to load\n            if (value.baseTexture.hasLoaded)\n            {\n                this._onTextureUpdate();\n            }\n            else\n            {\n                value.once('update', this._onTextureUpdate, this);\n            }\n        }\n    }\n}\n","import ObjectRenderer from '../renderer/utils/ObjectRenderer';\nimport WebGLRenderer from '../renderer/WebGLRenderer';\nimport createIndicesForQuads from '../utils/createIndicesForQuads';\nimport generateMultiTextureShader from './generateMultiTextureShader';\nimport checkMaxIfStatmentsInShader from '../renderer/utils/checkMaxIfStatmentsInShader';\nimport Buffer from './BatchBuffer';\nimport settings from '../settings';\nimport { premultiplyBlendMode, premultiplyTint } from '../utils';\nimport glCore from 'vf-gl-core';\nimport bitTwiddle from 'bit-twiddle';\n\nlet TICK = 0;\nlet TEXTURE_TICK = 0;\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @private\n * @memberof SINT\n * @extends SINT.ObjectRenderer\n */\nexport default class SpriteRenderer extends ObjectRenderer\n{\n    /**\n     * @param {SINT.WebGLRenderer} renderer - The renderer this sprite batch works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        /**\n         * Number of values sent in the vertex buffer.\n         * aVertexPosition(2), aTextureCoord(1), aColor(1), aTextureId(1) = 5\n         *\n         * @member {number}\n         */\n        this.vertSize = 5;\n\n        /**\n         * The size of the vertex information in bytes.\n         *\n         * @member {number}\n         */\n        this.vertByteSize = this.vertSize * 4;\n\n        /**\n         * The number of images in the SpriteRenderer before it flushes.\n         *\n         * @member {number}\n         */\n        this.size = settings.SPRITE_BATCH_SIZE; // 2000 is a nice balance between mobile / desktop\n\n        // the total number of bytes in our batch\n        // let numVerts = this.size * 4 * this.vertByteSize;\n\n        this.buffers = [];\n        for (let i = 1; i <= bitTwiddle.nextPow2(this.size); i *= 2)\n        {\n            this.buffers.push(new Buffer(i * 4 * this.vertByteSize));\n        }\n\n        /**\n         * Holds the indices of the geometry (quads) to draw\n         *\n         * @member {Uint16Array}\n         */\n        this.indices = createIndicesForQuads(this.size);\n\n        /**\n         * The default shaders that is used if a sprite doesn't have a more specific one.\n         * there is a shader for each number of textures that can be rendererd.\n         * These shaders will also be generated on the fly as required.\n         * @member {SINT.Shader[]}\n         */\n        this.shader = null;\n\n        this.currentIndex = 0;\n        this.groups = [];\n\n        for (let k = 0; k < this.size; k++)\n        {\n            this.groups[k] = { textures: [], textureCount: 0, ids: [], size: 0, start: 0, blend: 0 };\n        }\n\n        this.sprites = [];\n\n        this.vertexBuffers = [];\n        this.vaos = [];\n\n        this.vaoMax = 2;\n        this.vertexCount = 0;\n\n        this.renderer.on('prerender', this.onPrerender, this);\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     *\n     * @private\n     */\n    onContextChange()\n    {\n        const gl = this.renderer.gl;\n\n        if (this.renderer.legacy)\n        {\n            this.MAX_TEXTURES = 1;\n        }\n        else\n        {\n            // step 1: first check max textures the GPU can handle.\n            this.MAX_TEXTURES = Math.min(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), settings.SPRITE_MAX_TEXTURES);\n\n            // step 2: check the maximum number of if statements the shader can have too..\n            // this.MAX_TEXTURES = checkMaxIfStatmentsInShader(this.MAX_TEXTURES, gl);\n        }\n\n        this.shader = generateMultiTextureShader(gl, this.MAX_TEXTURES);\n\n        // create a couple of buffers\n        this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        // we use the second shader as the first one depending on your browser may omit aTextureId\n        // as it is not used by the shader so is optimized out.\n\n        this.renderer.bindVao(null);\n\n        const attrs = this.shader.attributes;\n\n        for (let i = 0; i < this.vaoMax; i++)\n        {\n            /* eslint-disable max-len */\n            const vertexBuffer = this.vertexBuffers[i] = glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n            /* eslint-enable max-len */\n\n            // build the vao object that will render..\n            const vao = this.renderer.createVao()\n                .addIndex(this.indexBuffer)\n                .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n                .addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4)\n                .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4);\n\n            if (attrs.aTextureId)\n            {\n                vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n            }\n\n            this.vaos[i] = vao;\n        }\n\n        this.vao = this.vaos[0];\n        this.currentBlendMode = 99999;\n\n        this.boundTextures = new Array(this.MAX_TEXTURES);\n    }\n\n    /**\n     * Called before the renderer starts rendering.\n     *\n     */\n    onPrerender()\n    {\n        this.vertexCount = 0;\n    }\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {SINT.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n    render(sprite)\n    {\n        // TODO set blend modes..\n        // check texture..\n        if (this.currentIndex >= this.size)\n        {\n            this.flush();\n        }\n\n        // get the uvs for the texture\n\n        // if the uvs have not updated then no point rendering just yet!\n        if (!sprite._texture._uvs)\n        {\n            return;\n        }\n\n        // push a texture.\n        // increment the batchsize\n        this.sprites[this.currentIndex++] = sprite;\n    }\n\n    /**\n     * Renders the content and empties the current batch.\n     *\n     */\n    flush()\n    {\n        if (this.currentIndex === 0)\n        {\n            return;\n        }\n\n        const gl = this.renderer.gl;\n        const MAX_TEXTURES = this.MAX_TEXTURES;\n\n        const np2 = bitTwiddle.nextPow2(this.currentIndex);\n        const log2 = bitTwiddle.log2(np2);\n        const buffer = this.buffers[log2];\n\n        const sprites = this.sprites;\n        const groups = this.groups;\n\n        const float32View = buffer.float32View;\n        const uint32View = buffer.uint32View;\n\n        const boundTextures = this.boundTextures;\n        const rendererBoundTextures = this.renderer.boundTextures;\n        const touch = this.renderer.textureGC.count;\n\n        let index = 0;\n        let nextTexture;\n        let currentTexture;\n        let groupCount = 1;\n        let textureCount = 0;\n        let currentGroup = groups[0];\n        let vertexData;\n        let uvs;\n        let blendMode = 0;\n\n        currentGroup.textureCount = 0;\n        currentGroup.start = 0;\n        currentGroup.blend = blendMode;\n\n        TICK++;\n\n        let i;\n\n        // copy textures..\n        for (i = 0; i < MAX_TEXTURES; ++i)\n        {\n            const bt = rendererBoundTextures[i];\n\n            if (bt._enabled === TICK)\n            {\n                boundTextures[i] = this.renderer.emptyTextures[i];\n                continue;\n            }\n\n            boundTextures[i] = bt;\n            bt._virtalBoundId = i;\n            bt._enabled = TICK;\n        }\n        TICK++;\n\n        for (i = 0; i < this.currentIndex; ++i)\n        {\n            // upload the sprite elemetns...\n            // they have all ready been calculated so we just need to push them into the buffer.\n            const sprite = sprites[i];\n\n            sprites[i] = null;\n\n            nextTexture = sprite._texture.baseTexture;\n\n            const spriteBlendMode = 0;\n\n            if (blendMode !== spriteBlendMode)\n            {\n                // finish a group..\n                blendMode = spriteBlendMode;\n\n                // force the batch to break!\n                currentTexture = null;\n                textureCount = MAX_TEXTURES;\n                TICK++;\n            }\n\n            if (currentTexture !== nextTexture)\n            {\n                currentTexture = nextTexture;\n\n                if (nextTexture._enabled !== TICK)\n                {\n                    if (textureCount === MAX_TEXTURES)\n                    {\n                        TICK++;\n\n                        currentGroup.size = i - currentGroup.start;\n\n                        textureCount = 0;\n\n                        currentGroup = groups[groupCount++];\n                        currentGroup.blend = blendMode;\n                        currentGroup.textureCount = 0;\n                        currentGroup.start = i;\n                    }\n\n                    nextTexture.touched = touch;\n\n                    if (nextTexture._virtalBoundId === -1)\n                    {\n                        for (let j = 0; j < MAX_TEXTURES; ++j)\n                        {\n                            const tIndex = (j + TEXTURE_TICK) % MAX_TEXTURES;\n\n                            const t = boundTextures[tIndex];\n\n                            if (t._enabled !== TICK)\n                            {\n                                TEXTURE_TICK++;\n\n                                t._virtalBoundId = -1;\n\n                                nextTexture._virtalBoundId = tIndex;\n\n                                boundTextures[tIndex] = nextTexture;\n                                break;\n                            }\n                        }\n                    }\n\n                    nextTexture._enabled = TICK;\n\n                    currentGroup.textureCount++;\n                    currentGroup.ids[textureCount] = nextTexture._virtalBoundId;\n                    currentGroup.textures[textureCount++] = nextTexture;\n                }\n            }\n\n            vertexData = sprite.vertexData;\n\n            // TODO this sum does not need to be set each frame..\n            uvs = sprite._texture._uvs.uvsUint32;\n\n            if (this.renderer.roundPixels)\n            {\n                const resolution = this.renderer.resolution;\n\n                // xy\n                float32View[index] = ((vertexData[0] * resolution) | 0) / resolution;\n                float32View[index + 1] = ((vertexData[1] * resolution) | 0) / resolution;\n\n                // xy\n                float32View[index + 5] = ((vertexData[2] * resolution) | 0) / resolution;\n                float32View[index + 6] = ((vertexData[3] * resolution) | 0) / resolution;\n\n                // xy\n                float32View[index + 10] = ((vertexData[4] * resolution) | 0) / resolution;\n                float32View[index + 11] = ((vertexData[5] * resolution) | 0) / resolution;\n\n                // xy\n                float32View[index + 15] = ((vertexData[6] * resolution) | 0) / resolution;\n                float32View[index + 16] = ((vertexData[7] * resolution) | 0) / resolution;\n            }\n            else\n            {\n                // xy\n                float32View[index] = vertexData[0];\n                float32View[index + 1] = vertexData[1];\n\n                // xy\n                float32View[index + 5] = vertexData[2];\n                float32View[index + 6] = vertexData[3];\n\n                // xy\n                float32View[index + 10] = vertexData[4];\n                float32View[index + 11] = vertexData[5];\n\n                // xy\n                float32View[index + 15] = vertexData[6];\n                float32View[index + 16] = vertexData[7];\n            }\n\n            uint32View[index + 2] = uvs[0];\n            uint32View[index + 7] = uvs[1];\n            uint32View[index + 12] = uvs[2];\n            uint32View[index + 17] = uvs[3];\n            /* eslint-disable max-len */\n            const alpha = Math.min(sprite.worldAlpha, 1.0);\n            // we dont call extra function if alpha is 1.0, that's faster\n            const argb = alpha < 1.0 && nextTexture.premultipliedAlpha ? premultiplyTint(sprite._tintRGB, alpha)\n                : sprite._tintRGB + (alpha * 255 << 24);\n\n            uint32View[index + 3] = uint32View[index + 8] = uint32View[index + 13] = uint32View[index + 18] = argb;\n            float32View[index + 4] = float32View[index + 9] = float32View[index + 14] = float32View[index + 19] = nextTexture._virtalBoundId;\n            /* eslint-enable max-len */\n\n            index += 20;\n        }\n\n        currentGroup.size = i - currentGroup.start;\n\n        if (!settings.CAN_UPLOAD_SAME_BUFFER)\n        {\n            // this is still needed for IOS performance..\n            // it really does not like uploading to the same buffer in a single frame!\n            if (this.vaoMax <= this.vertexCount)\n            {\n                this.vaoMax++;\n\n                const attrs = this.shader.attributes;\n\n                /* eslint-disable max-len */\n                const vertexBuffer = this.vertexBuffers[this.vertexCount] = glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n                /* eslint-enable max-len */\n\n                // build the vao object that will render..\n                const vao = this.renderer.createVao()\n                    .addIndex(this.indexBuffer)\n                    .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\n                    .addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4)\n                    .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4);\n\n                if (attrs.aTextureId)\n                {\n                    vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\n                }\n\n                this.vaos[this.vertexCount] = vao;\n            }\n\n            this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\n\n            this.vertexCount++;\n        }\n        else\n        {\n            // lets use the faster option, always use buffer number 0\n            this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\n        }\n\n        for (i = 0; i < MAX_TEXTURES; ++i)\n        {\n            rendererBoundTextures[i]._virtalBoundId = -1;\n        }\n\n        // render the groups..\n        for (i = 0; i < groupCount; ++i)\n        {\n            const group = groups[i];\n            const groupTextureCount = group.textureCount;\n\n            for (let j = 0; j < groupTextureCount; j++)\n            {\n                currentTexture = group.textures[j];\n\n                // reset virtual ids..\n                // lets do a quick check..\n                if (rendererBoundTextures[group.ids[j]] !== currentTexture)\n                {\n                    this.renderer.bindTexture(currentTexture, group.ids[j], true);\n                }\n\n                // reset the virtualId..\n                currentTexture._virtalBoundId = -1;\n            }\n\n            // set the blend mode..\n            this.renderer.state.setBlendMode(group.blend);\n\n            gl.drawElements(gl.TRIANGLES, group.size * 6, gl.UNSIGNED_SHORT, group.start * 6 * 2);\n        }\n\n        // reset elements for the next flush\n        this.currentIndex = 0;\n    }\n\n    /**\n     * Starts a new sprite batch.\n     */\n    start()\n    {\n        this.renderer.bindShader(this.shader);\n\n        if (settings.CAN_UPLOAD_SAME_BUFFER)\n        {\n            // bind buffer #0, we don't need others\n            this.renderer.bindVao(this.vaos[this.vertexCount]);\n\n            this.vertexBuffers[this.vertexCount].bind();\n        }\n    }\n\n    /**\n     * Stops and flushes the current batch.\n     *\n     */\n    stop()\n    {\n        this.flush();\n    }\n\n    /**\n     * Destroys the SpriteRenderer.\n     *\n     */\n    destroy()\n    {\n        for (let i = 0; i < this.vaoMax; i++)\n        {\n            if (this.vertexBuffers[i])\n            {\n                this.vertexBuffers[i].destroy();\n            }\n            if (this.vaos[i])\n            {\n                this.vaos[i].destroy();\n            }\n        }\n\n        if (this.indexBuffer)\n        {\n            this.indexBuffer.destroy();\n        }\n\n        this.renderer.off('prerender', this.onPrerender, this);\n\n        super.destroy();\n\n        if (this.shader)\n        {\n            this.shader.destroy();\n            this.shader = null;\n        }\n\n        this.vertexBuffers = null;\n        this.vaos = null;\n        this.indexBuffer = null;\n        this.indices = null;\n\n        this.sprites = null;\n\n        for (let i = 0; i < this.buffers.length; ++i)\n        {\n            this.buffers[i].destroy();\n        }\n    }\n}\n\nWebGLRenderer.registerPlugin('sprite', SpriteRenderer);\n","import { sayHello, hex2string, hex2rgb } from '../utils';\nimport { Matrix, Rectangle } from '../math';\nimport { RENDERER_TYPE } from '../const';\nimport settings from '../settings';\nimport Container from '../display/Container';\nimport RenderTexture from '../textures/RenderTexture';\nimport EventEmitter from 'eventemitter3';\n\nconst tempMatrix = new Matrix();\n\n/**\n * The SystemRenderer is the base for a SINTJS Renderer. It is extended by the {@link SINT.CanvasRenderer}\n * and {@link SINT.WebGLRenderer} which can be used for rendering a SINTJS scene.\n *\n * @abstract\n * @class\n * @extends EventEmitter\n * @memberof SINT\n */\nexport default class SystemRenderer extends EventEmitter\n{\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * @param {string} system - The name of the system this renderer is for.\n     * @param {object} [options] - The optional renderer parameters\n     * @param {number} [options.width=800] - the width of the screen\n     * @param {number} [options.height=600] - the height of the screen\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoResize=false] - If the render view is automatically resized, default false\n     * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n     *  resolution of the renderer retina would be 2.\n     * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation,\n     *  enable this if you need to call toDataUrl on the webgl context.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n     *      not before the new render pass.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {boolean} [options.roundPixels=false] - If true SINTJS will Math.floor() x/y values when rendering,\n     *  stopping pixel interpolation.\n     */\n    constructor(system, options, arg2, arg3)\n    {\n        super();\n\n        sayHello(system);\n\n        // Support for constructor(system, screenWidth, screenHeight, options)\n        if (typeof options === 'number')\n        {\n            options = Object.assign({\n                width: options,\n                height: arg2 || settings.RENDER_OPTIONS.height,\n            }, arg3);\n        }\n\n        // Add the default render options\n        options = Object.assign({}, settings.RENDER_OPTIONS, options);\n\n        /**\n         * The supplied constructor options.\n         *\n         * @member {Object}\n         * @readOnly\n         */\n        this.options = options;\n\n        /**\n         * The type of the renderer.\n         *\n         * @member {number}\n         * @default SINT.RENDERER_TYPE.UNKNOWN\n         * @see SINT.RENDERER_TYPE\n         */\n        this.type = RENDERER_TYPE.UNKNOWN;\n\n        /**\n         * Measurements of the screen. (0, 0, screenWidth, screenHeight)\n         *\n         * Its safe to use as filterArea or hitArea for whole stage\n         *\n         * @member {SINT.Rectangle}\n         */\n        this.screen = new Rectangle(0, 0, options.width, options.height);\n\n        /**\n         * The canvas element that everything is drawn to\n         *\n         * @member {HTMLCanvasElement}\n         */\n        this.view = options.view || document.createElement('canvas');\n\n        /**\n         * The resolution / device pixel ratio of the renderer\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = options.resolution || settings.RESOLUTION;\n\n        /**\n         * Whether the render view is transparent\n         *\n         * @member {boolean}\n         */\n        this.transparent = options.transparent;\n\n        /**\n         * Whether css dimensions of canvas view should be resized to screen dimensions automatically\n         *\n         * @member {boolean}\n         */\n        this.autoResize = options.autoResize || false;\n\n        /**\n         * Tracks the blend modes useful for this renderer.\n         *\n         * @member {object<string, mixed>}\n         */\n        this.blendModes = null;\n\n        /**\n         * The value of the preserveDrawingBuffer flag affects whether or not the contents of\n         * the stencil buffer is retained after rendering.\n         *\n         * @member {boolean}\n         */\n        this.preserveDrawingBuffer = options.preserveDrawingBuffer;\n\n        /**\n         * This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n         * If the scene is NOT transparent SINTJS will use a canvas sized fillRect operation every\n         * frame to set the canvas background color. If the scene is transparent SINTJS will use clearRect\n         * to clear the canvas every frame. Disable this by setting this to false. For example if\n         * your game has a canvas filling background image you often don't need this set.\n         *\n         * @member {boolean}\n         * @default\n         */\n        this.clearBeforeRender = options.clearBeforeRender;\n\n        /**\n         * If true SINTJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n         * Handy for crisp pixel art and speed on legacy devices.\n         *\n         * @member {boolean}\n         */\n        this.roundPixels = options.roundPixels;\n\n        /**\n         * The background color as a number.\n         *\n         * @member {number}\n         * @private\n         */\n        this._backgroundColor = 0x000000;\n\n        /**\n         * The background color as an [R, G, B] array.\n         *\n         * @member {number[]}\n         * @private\n         */\n        this._backgroundColorRgba = [0, 0, 0, 0];\n\n        /**\n         * The background color as a string.\n         *\n         * @member {string}\n         * @private\n         */\n        this._backgroundColorString = '#000000';\n\n        this.backgroundColor = options.backgroundColor || this._backgroundColor; // run bg color setter\n\n        /**\n         * This temporary display object used as the parent of the currently being rendered item\n         *\n         * @member {SINT.DisplayObject}\n         * @private\n         */\n        this._tempDisplayObjectParent = new Container();\n\n        /**\n         * The last root object that the renderer tried to render.\n         *\n         * @member {SINT.DisplayObject}\n         * @private\n         */\n        this._lastObjectRendered = this._tempDisplayObjectParent;\n    }\n\n    /**\n     * Same as view.width, actual number of pixels in the canvas by horizontal\n     *\n     * @member {number}\n     * @readonly\n     * @default 800\n     */\n    get width()\n    {\n        return this.view.width;\n    }\n\n    /**\n     * Same as view.height, actual number of pixels in the canvas by vertical\n     *\n     * @member {number}\n     * @readonly\n     * @default 600\n     */\n    get height()\n    {\n        return this.view.height;\n    }\n\n    /**\n     * Resizes the screen and canvas to the specified width and height\n     * Canvas dimensions are multiplied by resolution\n     *\n     * @param {number} screenWidth - the new width of the screen\n     * @param {number} screenHeight - the new height of the screen\n     */\n    resize(screenWidth, screenHeight)\n    {\n        this.screen.width = screenWidth;\n        this.screen.height = screenHeight;\n\n        this.view.width = screenWidth * this.resolution;\n        this.view.height = screenHeight * this.resolution;\n\n        if (this.autoResize)\n        {\n            this.view.style.width = `${screenWidth}px`;\n            this.view.style.height = `${screenHeight}px`;\n        }\n    }\n\n    /**\n     * Useful function that returns a texture of the display object that can then be used to create sprites\n     * This can be quite useful if your displayObject is complicated and needs to be reused multiple times.\n     *\n     * @param {SINT.DisplayObject} displayObject - The displayObject the object will be generated from\n     * @param {number} scaleMode - Should be one of the scaleMode consts\n     * @param {number} resolution - The resolution / device pixel ratio of the texture being generated\n     * @param {SINT.Rectangle} [region] - The region of the displayObject, that shall be rendered,\n     *        if no region is specified, defaults to the local bounds of the displayObject.\n     * @return {SINT.Texture} a texture of the graphics object\n     */\n    generateTexture(displayObject, scaleMode, resolution, region)\n    {\n        region = region || displayObject.getLocalBounds();\n\n        const renderTexture = RenderTexture.create(region.width | 0, region.height | 0, scaleMode, resolution);\n\n        tempMatrix.tx = -region.x;\n        tempMatrix.ty = -region.y;\n\n        this.render(displayObject, renderTexture, false, tempMatrix, !!displayObject.parent);\n\n        return renderTexture;\n    }\n\n    /**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */\n    destroy(removeView)\n    {\n        if (removeView && this.view.parentNode)\n        {\n            this.view.parentNode.removeChild(this.view);\n        }\n\n        this.type = RENDERER_TYPE.UNKNOWN;\n\n        this.view = null;\n\n        this.screen = null;\n\n        this.resolution = 0;\n\n        this.transparent = false;\n\n        this.autoResize = false;\n\n        this.blendModes = null;\n\n        this.options = null;\n\n        this.preserveDrawingBuffer = false;\n        this.clearBeforeRender = false;\n\n        this.roundPixels = false;\n\n        this._backgroundColor = 0;\n        this._backgroundColorRgba = null;\n        this._backgroundColorString = null;\n\n        this._tempDisplayObjectParent = null;\n        this._lastObjectRendered = null;\n    }\n\n    /**\n     * The background color to fill if not transparent\n     *\n     * @member {number}\n     */\n    get backgroundColor()\n    {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value) // eslint-disable-line require-jsdoc\n    {\n        this._backgroundColor = value;\n        this._backgroundColorString = hex2string(value);\n        hex2rgb(value, this._backgroundColorRgba);\n    }\n}\n","import BaseRenderTexture from './BaseRenderTexture';\nimport Texture from './Texture';\n\n/**\n * A RenderTexture is a special texture that allows any SINTJS display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. For example:\n *\n * ```js\n * let renderer = SINT.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let renderTexture = SINT.RenderTexture.create(800, 600);\n * let sprite = SINT.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered using its local transform. To render this sprite at 0,0\n * you can clear the transform\n *\n * ```js\n *\n * sprite.setTransform()\n *\n * let renderTexture = new SINT.RenderTexture.create(100, 100);\n *\n * renderer.render(sprite, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends SINT.Texture\n * @memberof SINT\n */\nexport default class RenderTexture extends Texture\n{\n    /**\n     * @param {SINT.BaseRenderTexture} baseRenderTexture - The renderer used for this RenderTexture\n     * @param {SINT.Rectangle} [frame] - The rectangle frame of the texture to show\n     */\n    constructor(baseRenderTexture, frame)\n    {\n        // support for legacy..\n        let _legacyRenderer = null;\n\n        if (!(baseRenderTexture instanceof BaseRenderTexture))\n        {\n            /* eslint-disable prefer-rest-params, no-console */\n            const width = arguments[1];\n            const height = arguments[2];\n            const scaleMode = arguments[3];\n            const resolution = arguments[4];\n\n            // we have an old render texture..\n            console.warn(`Please use RenderTexture.create(${width}, ${height}) instead of the ctor directly.`);\n            _legacyRenderer = arguments[0];\n            /* eslint-enable prefer-rest-params, no-console */\n\n            frame = null;\n            baseRenderTexture = new BaseRenderTexture(width, height, scaleMode, resolution);\n        }\n\n        /**\n         * The base texture object that this texture uses\n         *\n         * @member {BaseTexture}\n         */\n        super(\n            baseRenderTexture,\n            frame\n        );\n\n        this.legacyRenderer = _legacyRenderer;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        this.valid = true;\n\n        this._updateUvs();\n    }\n\n    /**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} doNotResizeBaseTexture - Should the baseTexture.width and height values be resized as well?\n     */\n    resize(width, height, doNotResizeBaseTexture)\n    {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n\n        // TODO - could be not required..\n        this.valid = (width > 0 && height > 0);\n\n        this._frame.width = this.orig.width = width;\n        this._frame.height = this.orig.height = height;\n\n        if (!doNotResizeBaseTexture)\n        {\n            this.baseTexture.resize(width, height);\n        }\n\n        this._updateUvs();\n    }\n\n    /**\n     * A short hand way of creating a render texture.\n     *\n     * @param {number} [width=100] - The width of the render texture\n     * @param {number} [height=100] - The height of the render texture\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - See {@link SINT.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n     * @return {SINT.RenderTexture} The new render texture\n     */\n    static create(width, height, scaleMode, resolution)\n    {\n        return new RenderTexture(new BaseRenderTexture(width, height, scaleMode, resolution));\n    }\n}\n","import BaseTexture from './BaseTexture';\nimport settings from '../settings';\n\n/**\n * A BaseRenderTexture is a special texture that allows any SINTJS display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a BaseRenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A BaseRenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = SINT.autoDetectRenderer(1024, 1024, { view: canvas, ratio: 1 });\n * let baseRenderTexture = new SINT.BaseRenderTexture(renderer, 800, 600);\n * let sprite = SINT.Sprite.fromImage(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * baseRenderTexture.render(sprite);\n * ```\n *\n * The Sprite in this case will be rendered using its local transform. To render this sprite at 0,0\n * you can clear the transform\n *\n * ```js\n *\n * sprite.setTransform()\n *\n * let baseRenderTexture = new SINT.BaseRenderTexture(100, 100);\n * let renderTexture = new SINT.RenderTexture(baseRenderTexture);\n *\n * renderer.render(sprite, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends SINT.BaseTexture\n * @memberof SINT\n */\nexport default class BaseRenderTexture extends BaseTexture\n{\n    /**\n     * @param {number} [width=100] - The width of the base render texture\n     * @param {number} [height=100] - The height of the base render texture\n     * @param {number} [scaleMode=SINT.settings.SCALE_MODE] - See {@link SINT.SCALE_MODES} for possible values\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the texture being generated\n     */\n    constructor(width = 100, height = 100, scaleMode, resolution)\n    {\n        super(null, scaleMode);\n\n        this.resolution = resolution || settings.RESOLUTION;\n\n        this.width = Math.ceil(width);\n        this.height = Math.ceil(height);\n\n        this.realWidth = this.width * this.resolution;\n        this.realHeight = this.height * this.resolution;\n\n        this.scaleMode = scaleMode !== undefined ? scaleMode : settings.SCALE_MODE;\n        this.hasLoaded = true;\n\n        /**\n         * A map of renderer IDs to webgl renderTargets\n         *\n         * @private\n         * @member {object<number, WebGLTexture>}\n         */\n        this._glRenderTargets = {};\n\n        /**\n         * A reference to the canvas render target (we only need one as this can be shared across renderers)\n         *\n         * @private\n         * @member {object<number, WebGLTexture>}\n         */\n        this._canvasRenderTarget = null;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        this.valid = false;\n    }\n\n    /**\n     * Resizes the BaseRenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     */\n    resize(width, height)\n    {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n\n        if (width === this.width && height === this.height)\n        {\n            return;\n        }\n\n        this.valid = (width > 0 && height > 0);\n\n        this.width = width;\n        this.height = height;\n\n        this.realWidth = this.width * this.resolution;\n        this.realHeight = this.height * this.resolution;\n\n        if (!this.valid)\n        {\n            return;\n        }\n\n        this.emit('update', this);\n    }\n\n    /**\n     * Destroys this texture\n     *\n     */\n    destroy()\n    {\n        super.destroy(true);\n        this.renderer = null;\n    }\n}\n","import WebGLManager from './WebGLManager';\nimport AlphaMaskFilter from '../filters/spriteMask/SpriteMaskFilter';\n\n/**\n * @class\n * @extends SINT.WebGLManager\n * @memberof SINT\n */\nexport default class MaskManager extends WebGLManager\n{\n    /**\n     * @param {SINT.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        // TODO - we don't need both!\n        this.scissor = false;\n        this.scissorData = null;\n        this.scissorRenderTarget = null;\n\n        this.enableScissor = true;\n\n        this.alphaMaskPool = [];\n        this.alphaMaskIndex = 0;\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {SINT.DisplayObject} target - Display Object to push the mask to\n     * @param {SINT.Sprite|SINT.Graphics} maskData - The masking data.\n     */\n    pushMask(target, maskData)\n    {\n        // TODO the root check means scissor rect will not\n        // be used on render textures more info here:\n\n        if (maskData.texture)\n        {\n            this.pushSpriteMask(target, maskData);\n        }\n        else if (this.enableScissor\n            && !this.scissor\n            && this.renderer._activeRenderTarget.root\n            && !this.renderer.stencilManager.stencilMaskStack.length\n            && maskData.isFastRect())\n        {\n            const matrix = maskData.worldTransform;\n\n            let rot = Math.atan2(matrix.b, matrix.a);\n\n            // use the nearest degree!\n            rot = Math.round(rot * (180 / Math.PI));\n\n            if (rot % 90)\n            {\n                this.pushStencilMask(maskData);\n            }\n            else\n            {\n                this.pushScissorMask(target, maskData);\n            }\n        }\n        else\n        {\n            this.pushStencilMask(maskData);\n        }\n    }\n\n    /**\n     * Removes the last mask from the mask stack and doesn't return it.\n     *\n     * @param {SINT.DisplayObject} target - Display Object to pop the mask from\n     * @param {SINT.Sprite|SINT.Graphics} maskData - The masking data.\n     */\n    popMask(target, maskData)\n    {\n        if (maskData.texture)\n        {\n            this.popSpriteMask(target, maskData);\n        }\n        else if (this.enableScissor && !this.renderer.stencilManager.stencilMaskStack.length)\n        {\n            this.popScissorMask(target, maskData);\n        }\n        else\n        {\n            this.popStencilMask(target, maskData);\n        }\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {SINT.RenderTarget} target - Display Object to push the sprite mask to\n     * @param {SINT.Sprite} maskData - Sprite to be used as the mask\n     */\n    pushSpriteMask(target, maskData)\n    {\n        let alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\n\n        if (!alphaMaskFilter)\n        {\n            alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new AlphaMaskFilter(maskData)];\n        }\n\n        alphaMaskFilter[0].resolution = this.renderer.resolution;\n        alphaMaskFilter[0].maskSprite = maskData;\n\n        // TODO - may cause issues!\n        target.filterArea = maskData.getBounds(true);\n\n        this.renderer.filterManager.pushFilter(target, alphaMaskFilter);\n\n        this.alphaMaskIndex++;\n    }\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */\n    popSpriteMask()\n    {\n        this.renderer.filterManager.popFilter();\n        this.alphaMaskIndex--;\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {SINT.Sprite|SINT.Graphics} maskData - The masking data.\n     */\n    pushStencilMask(maskData)\n    {\n        this.renderer.currentRenderer.stop();\n        this.renderer.stencilManager.pushStencil(maskData);\n    }\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     *\n     */\n    popStencilMask()\n    {\n        this.renderer.currentRenderer.stop();\n        this.renderer.stencilManager.popStencil();\n    }\n\n    /**\n     *\n     * @param {SINT.DisplayObject} target - Display Object to push the mask to\n     * @param {SINT.Graphics} maskData - The masking data.\n     */\n    pushScissorMask(target, maskData)\n    {\n        maskData.renderable = true;\n\n        const renderTarget = this.renderer._activeRenderTarget;\n\n        const bounds = maskData.getBounds();\n\n        bounds.fit(renderTarget.size);\n        maskData.renderable = false;\n\n        this.renderer.gl.enable(this.renderer.gl.SCISSOR_TEST);\n\n        const resolution = this.renderer.resolution;\n\n        this.renderer.gl.scissor(\n            bounds.x * resolution,\n            (renderTarget.root ? renderTarget.size.height - bounds.y - bounds.height : bounds.y) * resolution,\n            bounds.width * resolution,\n            bounds.height * resolution\n        );\n\n        this.scissorRenderTarget = renderTarget;\n        this.scissorData = maskData;\n        this.scissor = true;\n    }\n\n    /**\n     *\n     *\n     */\n    popScissorMask()\n    {\n        this.scissorRenderTarget = null;\n        this.scissorData = null;\n        this.scissor = false;\n\n        // must be scissor!\n        const gl = this.renderer.gl;\n\n        gl.disable(gl.SCISSOR_TEST);\n    }\n}\n","import Filter from '../Filter';\nimport { Matrix } from '../../../math';\nimport { default as TextureMatrix } from '../../../textures/TextureMatrix';\n\nimport vs from './spriteMaskFilter.vert';\nimport fs from './spriteMaskFilter.frag';\n\n/**\n * The SpriteMaskFilter class\n *\n * @class\n * @extends SINT.Filter\n * @memberof SINT\n */\nexport default class SpriteMaskFilter extends Filter\n{\n    /**\n     * @param {SINT.Sprite} sprite - the target sprite\n     */\n    constructor(sprite)\n    {\n        const maskMatrix = new Matrix();\n\n        super(vs,fs);\n\n        sprite.renderable = false;\n\n        this.maskSprite = sprite;\n        this.maskMatrix = maskMatrix;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {SINT.FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {SINT.RenderTarget} input - The input render target.\n     * @param {SINT.RenderTarget} output - The target to output to.\n     */\n    apply(filterManager, input, output)\n    {\n        const maskSprite = this.maskSprite;\n        const tex = this.maskSprite.texture;\n\n        if (!tex.valid)\n        {\n            return;\n        }\n        if (!tex.transform)\n        {\n            // margin = 0.0, let it bleed a bit, shader code becomes easier\n            // assuming that atlas textures were made with 1-pixel padding\n            tex.transform = new TextureMatrix(tex, 0.0);\n        }\n        tex.transform.update();\n\n        this.uniforms.mask = tex;\n        this.uniforms.otherMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, maskSprite)\n            .prepend(tex.transform.mapCoord);\n        this.uniforms.alpha = maskSprite.worldAlpha;\n        this.uniforms.maskClamp = tex.transform.uClampFrame;\n\n        filterManager.applyFilter(this, input, output);\n    }\n}\n","import extractUniformsFromSrc from './extractUniformsFromSrc';\nimport { uid } from '../../utils';\nimport { BLEND_MODES } from '../../const';\nimport settings from '../../settings';\n\nconst SOURCE_KEY_MAP = {};\n\n// let math = require('../../../math');\n/**\n * @class\n * @memberof SINT\n * @extends SINT.Shader\n */\nexport default class Filter\n{\n    /**\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {object} [uniformData] - Custom uniforms to use to augment the built-in ones.\n     */\n    constructor(vertexSrc, fragmentSrc, uniformData)\n    {\n        /**\n         * The vertex shader.\n         *\n         * @member {string}\n         */\n        this.vertexSrc = vertexSrc || Filter.defaultVertexSrc;\n\n        /**\n         * The fragment shader.\n         *\n         * @member {string}\n         */\n        this.fragmentSrc = fragmentSrc || Filter.defaultFragmentSrc;\n\n        this._blendMode = BLEND_MODES.NORMAL;\n\n        this.uniformData = uniformData || extractUniformsFromSrc(\n            this.vertexSrc,\n            this.fragmentSrc,\n            'projectionMatrix|uSampler'\n        );\n\n        /**\n         * An object containing the current values of custom uniforms.\n         * @example <caption>Updating the value of a custom uniform</caption>\n         * filter.uniforms.time = performance.now();\n         *\n         * @member {object}\n         */\n        this.uniforms = {};\n\n        for (const i in this.uniformData)\n        {\n            this.uniforms[i] = this.uniformData[i].value;\n            if (this.uniformData[i].type)\n            {\n                this.uniformData[i].type = this.uniformData[i].type.toLowerCase();\n            }\n        }\n\n        // this is where we store shader references..\n        // TODO we could cache this!\n        this.glShaders = {};\n\n        // used for caching.. sure there is a better way!\n        if (!SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc])\n        {\n            SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc] = uid();\n        }\n\n        this.glShaderKey = SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc];\n\n        /**\n         * The padding of the filter. Some filters require extra space to breath such as a blur.\n         * Increasing this will add extra width and height to the bounds of the object that the\n         * filter is applied to.\n         *\n         * @member {number}\n         */\n        this.padding = 4;\n\n        /**\n         * The resolution of the filter. Setting this to be lower will lower the quality but\n         * increase the performance of the filter.\n         *\n         * @member {number}\n         */\n        this.resolution = settings.FILTER_RESOLUTION;\n\n        /**\n         * If enabled is true the filter is applied, if false it will not.\n         *\n         * @member {boolean}\n         */\n        this.enabled = true;\n\n        /**\n         * If enabled, SINTJS will fit the filter area into boundaries for better performance.\n         * Switch it off if it does not work for specific shader.\n         *\n         * @member {boolean}\n         */\n        this.autoFit = true;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {SINT.FilterManager} filterManager - The renderer to retrieve the filter from\n     * @param {SINT.RenderTarget} input - The input render target.\n     * @param {SINT.RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     * @param {object} [currentState] - It's current state of filter.\n     *        There are some useful properties in the currentState :\n     *        target, filters, sourceFrame, destinationFrame, renderTarget, resolution\n     */\n    apply(filterManager, input, output, clear, currentState) // eslint-disable-line no-unused-vars\n    {\n        // --- //\n        //  this.uniforms.filterMatrix = filterManager.calculateSpriteMatrix(tempMatrix, window.panda );\n\n        // do as you please!\n\n        filterManager.applyFilter(this, input, output, clear);\n\n        // or just do a regular render..\n    }\n\n    /**\n     * Sets the blendmode of the filter\n     *\n     * @member {number}\n     * @default SINT.BLEND_MODES.NORMAL\n     */\n    get blendMode()\n    {\n        return this._blendMode;\n    }\n\n    set blendMode(value) // eslint-disable-line require-jsdoc\n    {\n        this._blendMode = value;\n    }\n\n    /**\n     * The default vertex shader source\n     *\n     * @static\n     * @constant\n     */\n    static get defaultVertexSrc()\n    {\n        return [\n            'attribute vec2 aVertexPosition;',\n            'attribute vec2 aTextureCoord;',\n\n            'uniform mat3 projectionMatrix;',\n            'uniform mat3 filterMatrix;',\n\n            'varying vec2 vTextureCoord;',\n            'varying vec2 vFilterCoord;',\n\n            'void main(void){',\n            '   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);',\n            '   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;',\n            '   vTextureCoord = aTextureCoord ;',\n            '}',\n        ].join('\\n');\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @constant\n     */\n    static get defaultFragmentSrc()\n    {\n        return [\n            'varying vec2 vTextureCoord;',\n            'varying vec2 vFilterCoord;',\n\n            'uniform sampler2D uSampler;',\n            'uniform sampler2D filterSampler;',\n\n            'void main(void){',\n            '   vec4 masky = texture2D(filterSampler, vFilterCoord);',\n            '   vec4 sample = texture2D(uSampler, vTextureCoord);',\n            '   vec4 color;',\n            '   if(mod(vFilterCoord.x, 1.0) > 0.5)',\n            '   {',\n            '     color = vec4(1.0, 0.0, 0.0, 1.0);',\n            '   }',\n            '   else',\n            '   {',\n            '     color = vec4(0.0, 1.0, 0.0, 1.0);',\n            '   }',\n            // '   gl_FragColor = vec4(mod(vFilterCoord.x, 1.5), vFilterCoord.y,0.0,1.0);',\n            '   gl_FragColor = mix(sample, masky, 0.5);',\n            '   gl_FragColor *= sample.a;',\n            '}',\n        ].join('\\n');\n    }\n}\n","import glCore from 'vf-gl-core';\n\nconst defaultValue = glCore.shader.defaultValue;\n\nexport default function extractUniformsFromSrc(vertexSrc, fragmentSrc, mask)\n{\n    const vertUniforms = extractUniformsFromString(vertexSrc, mask);\n    const fragUniforms = extractUniformsFromString(fragmentSrc, mask);\n\n    return Object.assign(vertUniforms, fragUniforms);\n}\n\nfunction extractUniformsFromString(string)\n{\n    const maskRegex = new RegExp('^(projectionMatrix|uSampler|filterArea|filterClamp)$');\n\n    const uniforms = {};\n    let nameSplit;\n\n    // clean the lines a little - remove extra spaces / tabs etc\n    // then split along ';'\n    const lines = string.replace(/\\s+/g, ' ')\n                .split(/\\s*;\\s*/);\n\n    // loop through..\n    for (let i = 0; i < lines.length; i++)\n    {\n        const line = lines[i].trim();\n\n        if (line.indexOf('uniform') > -1)\n        {\n            const splitLine = line.split(' ');\n            const type = splitLine[1];\n\n            let name = splitLine[2];\n            let size = 1;\n\n            if (name.indexOf('[') > -1)\n            {\n                // array!\n                nameSplit = name.split(/\\[|]/);\n                name = nameSplit[0];\n                size *= Number(nameSplit[1]);\n            }\n\n            if (!name.match(maskRegex))\n            {\n                uniforms[name] = {\n                    value: defaultValue(type, size),\n                    name,\n                    type,\n                };\n            }\n        }\n    }\n\n    return uniforms;\n}\n","import { default as Matrix } from '../math/Matrix';\n\nconst tempMat = new Matrix();\n\n/**\n * Class controls uv transform and frame clamp for texture\n * Can be used in Texture \"transform\" field, or separately, you can use different clamp settings on the same texture.\n * If you want to add support for texture region of certain feature or filter, that's what you're looking for.\n *\n * @see SINT.Texture\n * @see SINT.mesh.Mesh\n * @see SINT.extras.TilingSprite\n * @class\n * @memberof SINT\n */\nexport default class TextureMatrix\n{\n    /**\n     *\n     * @param {SINT.Texture} texture observed texture\n     * @param {number} [clampMargin] Changes frame clamping, 0.5 by default. Use -0.5 for extra border.\n     * @constructor\n     */\n    constructor(texture, clampMargin)\n    {\n        this._texture = texture;\n\n        this.mapCoord = new Matrix();\n\n        this.uClampFrame = new Float32Array(4);\n\n        this.uClampOffset = new Float32Array(2);\n\n        this._lastTextureID = -1;\n\n        /**\n         * Changes frame clamping\n         * Works with TilingSprite and Mesh\n         * Change to 1.5 if you texture has repeated right and bottom lines, that leads to smoother borders\n         *\n         * @default 0\n         * @member {number}\n         */\n        this.clampOffset = 0;\n\n        /**\n         * Changes frame clamping\n         * Works with TilingSprite and Mesh\n         * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n         *\n         * @default 0.5\n         * @member {number}\n         */\n        this.clampMargin = (typeof clampMargin === 'undefined') ? 0.5 : clampMargin;\n    }\n\n    /**\n     * texture property\n     * @member {SINT.Texture}\n     */\n    get texture()\n    {\n        return this._texture;\n    }\n\n    set texture(value) // eslint-disable-line require-jsdoc\n    {\n        this._texture = value;\n        this._lastTextureID = -1;\n    }\n\n    /**\n     * Multiplies uvs array to transform\n     * @param {Float32Array} uvs mesh uvs\n     * @param {Float32Array} [out=uvs] output\n     * @returns {Float32Array} output\n     */\n    multiplyUvs(uvs, out)\n    {\n        if (out === undefined)\n        {\n            out = uvs;\n        }\n\n        const mat = this.mapCoord;\n\n        for (let i = 0; i < uvs.length; i += 2)\n        {\n            const x = uvs[i];\n            const y = uvs[i + 1];\n\n            out[i] = (x * mat.a) + (y * mat.c) + mat.tx;\n            out[i + 1] = (x * mat.b) + (y * mat.d) + mat.ty;\n        }\n\n        return out;\n    }\n\n    /**\n     * updates matrices if texture was changed\n     * @param {boolean} forceUpdate if true, matrices will be updated any case\n     * @returns {boolean} whether or not it was updated\n     */\n    update(forceUpdate)\n    {\n        const tex = this._texture;\n\n        if (!tex || !tex.valid)\n        {\n            return false;\n        }\n\n        if (!forceUpdate\n            && this._lastTextureID === tex._updateID)\n        {\n            return false;\n        }\n\n        this._lastTextureID = tex._updateID;\n\n        const uvs = tex._uvs;\n\n        this.mapCoord.set(uvs.x1 - uvs.x0, uvs.y1 - uvs.y0, uvs.x3 - uvs.x0, uvs.y3 - uvs.y0, uvs.x0, uvs.y0);\n\n        const orig = tex.orig;\n        const trim = tex.trim;\n\n        if (trim)\n        {\n            tempMat.set(orig.width / trim.width, 0, 0, orig.height / trim.height,\n                -trim.x / trim.width, -trim.y / trim.height);\n            this.mapCoord.append(tempMat);\n        }\n\n        const texBase = tex.baseTexture;\n        const frame = this.uClampFrame;\n        const margin = this.clampMargin / texBase.resolution;\n        const offset = this.clampOffset;\n\n        frame[0] = (tex._frame.x + margin + offset) / texBase.width;\n        frame[1] = (tex._frame.y + margin + offset) / texBase.height;\n        frame[2] = (tex._frame.x + tex._frame.width - margin + offset) / texBase.width;\n        frame[3] = (tex._frame.y + tex._frame.height - margin + offset) / texBase.height;\n        this.uClampOffset[0] = offset / texBase.realWidth;\n        this.uClampOffset[1] = offset / texBase.realHeight;\n\n        return true;\n    }\n}\n","module.exports = \"#define GLSLIFY 1\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 otherMatrix;\\n\\nvarying vec2 vMaskCoord;\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = aTextureCoord;\\n    vMaskCoord = ( otherMatrix * vec3( aTextureCoord, 1.0)  ).xy;\\n}\\n\"","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vMaskCoord;\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform sampler2D mask;\\nuniform float alpha;\\nuniform vec4 maskClamp;\\n\\nvoid main(void)\\n{\\n    float clip = step(3.5,\\n        step(maskClamp.x, vMaskCoord.x) +\\n        step(maskClamp.y, vMaskCoord.y) +\\n        step(vMaskCoord.x, maskClamp.z) +\\n        step(vMaskCoord.y, maskClamp.w));\\n\\n    vec4 original = texture2D(uSampler, vTextureCoord);\\n    vec4 masky = texture2D(mask, vMaskCoord);\\n\\n    original *= (masky.r * masky.a * alpha * clip);\\n\\n    gl_FragColor = original;\\n}\\n\"","import WebGLManager from './WebGLManager';\n\n/**\n * @class\n * @extends SINT.WebGLManager\n * @memberof SINT\n */\nexport default class StencilManager extends WebGLManager\n{\n    /**\n     * @param {SINT.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n        this.stencilMaskStack = null;\n    }\n\n    /**\n     * Changes the mask stack that is used by this manager.\n     *\n     * @param {SINT.Graphics[]} stencilMaskStack - The mask stack\n     */\n    setMaskStack(stencilMaskStack)\n    {\n        this.stencilMaskStack = stencilMaskStack;\n\n        const gl = this.renderer.gl;\n\n        if (stencilMaskStack.length === 0)\n        {\n            gl.disable(gl.STENCIL_TEST);\n        }\n        else\n        {\n            gl.enable(gl.STENCIL_TEST);\n        }\n    }\n\n    /**\n     * Applies the Mask and adds it to the current stencil stack. @alvin\n     *\n     * @param {SINT.Graphics} graphics - The mask\n     */\n    pushStencil(graphics)\n    {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        this.renderer._activeRenderTarget.attachStencilBuffer();\n\n        const gl = this.renderer.gl;\n        const prevMaskCount = this.stencilMaskStack.length;\n\n        if (prevMaskCount === 0)\n        {\n            gl.enable(gl.STENCIL_TEST);\n        }\n\n        this.stencilMaskStack.push(graphics);\n\n        // Increment the reference stencil value where the new mask overlaps with the old ones.\n        gl.colorMask(false, false, false, false);\n        gl.stencilFunc(gl.EQUAL, prevMaskCount, this._getBitwiseMask());\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n        this.renderer.plugins.graphics.render(graphics);\n\n        this._useCurrent();\n    }\n\n    /**\n     * Removes the last mask from the stencil stack. @alvin\n     */\n    popStencil()\n    {\n        this.renderer.setObjectRenderer(this.renderer.plugins.graphics);\n\n        const gl = this.renderer.gl;\n        const graphics = this.stencilMaskStack.pop();\n\n        if (this.stencilMaskStack.length === 0)\n        {\n            // the stack is empty!\n            gl.disable(gl.STENCIL_TEST);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n            gl.clearStencil(0);\n        }\n        else\n        {\n            // Decrement the reference stencil value where the popped mask overlaps with the other ones\n            gl.colorMask(false, false, false, false);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n            this.renderer.plugins.graphics.render(graphics);\n\n            this._useCurrent();\n        }\n    }\n\n    /**\n     * Setup renderer to use the current stencil data.\n     */\n    _useCurrent()\n    {\n        const gl = this.renderer.gl;\n\n        gl.colorMask(true, true, true, true);\n        gl.stencilFunc(gl.EQUAL, this.stencilMaskStack.length, this._getBitwiseMask());\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    }\n\n    /**\n     * Fill 1s equal to the number of acitve stencil masks.\n     *\n     * @return {number} The bitwise mask.\n     */\n    _getBitwiseMask()\n    {\n        return (1 << this.stencilMaskStack.length) - 1;\n    }\n\n    /**\n     * Destroys the mask stack.\n     *\n     */\n    destroy()\n    {\n        WebGLManager.prototype.destroy.call(this);\n\n        this.stencilMaskStack.stencilStack = null;\n    }\n}\n","import WebGLManager from './WebGLManager';\nimport RenderTarget from '../utils/RenderTarget';\nimport Quad from '../utils/Quad';\nimport { Rectangle } from '../../math';\nimport Shader from '../../Shader';\nimport * as filterTransforms from '../filters/filterTransforms';\nimport bitTwiddle from 'bit-twiddle';\n\n/**\n * @ignore\n * @class\n */\nclass FilterState\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        this.renderTarget = null;\n        this.target = null;\n        this.resolution = 1;\n\n        // those three objects are used only for root\n        // re-assigned for everything else\n        this.sourceFrame = new Rectangle();\n        this.destinationFrame = new Rectangle();\n        this.filters = [];\n    }\n\n    /**\n     * clears the state\n     */\n    clear()\n    {\n        this.filters = null;\n        this.target = null;\n        this.renderTarget = null;\n    }\n}\n\nconst screenKey = 'screen';\n\n/**\n * @class\n * @memberof SINT\n * @extends SINT.WebGLManager\n */\nexport default class FilterManager extends WebGLManager\n{\n    /**\n     * @param {SINT.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        this.gl = this.renderer.gl;\n        // know about sprites!\n        this.quad = new Quad(this.gl, renderer.state.attribState);\n\n        this.shaderCache = {};\n        // todo add default!\n        this.pool = {};\n\n        this.filterData = null;\n\n        this.managedFilters = [];\n\n        this.renderer.on('prerender', this.onPrerender, this);\n\n        this._screenWidth = renderer.view.width;\n        this._screenHeight = renderer.view.height;\n    }\n\n    /**\n     * Adds a new filter to the manager.\n     *\n     * @param {SINT.DisplayObject} target - The target of the filter to render.\n     * @param {SINT.Filter[]} filters - The filters to apply.\n     */\n    pushFilter(target, filters)\n    {\n        const renderer = this.renderer;\n\n        let filterData = this.filterData;\n\n        if (!filterData)\n        {\n            filterData = this.renderer._activeRenderTarget.filterStack;\n\n            // add new stack\n            const filterState = new FilterState();\n\n            filterState.sourceFrame = filterState.destinationFrame = this.renderer._activeRenderTarget.size;\n            filterState.renderTarget = renderer._activeRenderTarget;\n\n            this.renderer._activeRenderTarget.filterData = filterData = {\n                index: 0,\n                stack: [filterState],\n            };\n\n            this.filterData = filterData;\n        }\n\n        // get the current filter state..\n        let currentState = filterData.stack[++filterData.index];\n        const renderTargetFrame = filterData.stack[0].destinationFrame;\n\n        if (!currentState)\n        {\n            currentState = filterData.stack[filterData.index] = new FilterState();\n        }\n\n        const fullScreen = target.filterArea\n            && target.filterArea.x === 0\n            && target.filterArea.y === 0\n            && target.filterArea.width === renderer.screen.width\n            && target.filterArea.height === renderer.screen.height;\n\n        // for now we go off the filter of the first resolution..\n        const resolution = filters[0].resolution;\n        const padding = filters[0].padding | 0;\n        const targetBounds = fullScreen ? renderer.screen : (target.filterArea || target.getBounds(true));\n        const sourceFrame = currentState.sourceFrame;\n        const destinationFrame = currentState.destinationFrame;\n\n        sourceFrame.x = ((targetBounds.x * resolution) | 0) / resolution;\n        sourceFrame.y = ((targetBounds.y * resolution) | 0) / resolution;\n        sourceFrame.width = ((targetBounds.width * resolution) | 0) / resolution;\n        sourceFrame.height = ((targetBounds.height * resolution) | 0) / resolution;\n\n        if (!fullScreen)\n        {\n            if (filterData.stack[0].renderTarget.transform)\n            { //\n\n                // TODO we should fit the rect around the transform..\n            }\n            else if (filters[0].autoFit)\n            {\n                sourceFrame.fit(renderTargetFrame);\n            }\n\n            // lets apply the padding After we fit the element to the screen.\n            // this should stop the strange side effects that can occur when cropping to the edges\n            sourceFrame.pad(padding);\n        }\n\n        destinationFrame.width = sourceFrame.width;\n        destinationFrame.height = sourceFrame.height;\n\n        // lets play the padding after we fit the element to the screen.\n        // this should stop the strange side effects that can occur when cropping to the edges\n\n        const renderTarget = this.getPotRenderTarget(renderer.gl, sourceFrame.width, sourceFrame.height, resolution);\n\n        currentState.target = target;\n        currentState.filters = filters;\n        currentState.resolution = resolution;\n        currentState.renderTarget = renderTarget;\n\n        // bind the render target to draw the shape in the top corner..\n\n        renderTarget.setFrame(destinationFrame, sourceFrame);\n\n        // bind the render target\n        renderer.bindRenderTarget(renderTarget);\n        renderTarget.clear();\n    }\n\n    /**\n     * Pops off the filter and applies it.\n     *\n     */\n    popFilter()\n    {\n        const filterData = this.filterData;\n\n        const lastState = filterData.stack[filterData.index - 1];\n        const currentState = filterData.stack[filterData.index];\n\n        this.quad.map(currentState.renderTarget.size, currentState.sourceFrame).upload();\n\n        const filters = currentState.filters;\n\n        if (filters.length === 1)\n        {\n            filters[0].apply(this, currentState.renderTarget, lastState.renderTarget, false, currentState);\n            this.freePotRenderTarget(currentState.renderTarget);\n        }\n        else\n        {\n            let flip = currentState.renderTarget;\n            let flop = this.getPotRenderTarget(\n                this.renderer.gl,\n                currentState.sourceFrame.width,\n                currentState.sourceFrame.height,\n                currentState.resolution\n            );\n\n            flop.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n            // finally lets clear the render target before drawing to it..\n            flop.clear();\n\n            let i = 0;\n\n            for (i = 0; i < filters.length - 1; ++i)\n            {\n                filters[i].apply(this, flip, flop, true, currentState);\n\n                const t = flip;\n\n                flip = flop;\n                flop = t;\n            }\n\n            filters[i].apply(this, flip, lastState.renderTarget, false, currentState);\n\n            this.freePotRenderTarget(flip);\n            this.freePotRenderTarget(flop);\n        }\n\n        currentState.clear();\n        filterData.index--;\n\n        if (filterData.index === 0)\n        {\n            this.filterData = null;\n        }\n    }\n\n    /**\n     * Draws a filter.\n     *\n     * @param {SINT.Filter} filter - The filter to draw.\n     * @param {SINT.RenderTarget} input - The input render target.\n     * @param {SINT.RenderTarget} output - The target to output to.\n     * @param {boolean} clear - Should the output be cleared before rendering to it\n     */\n    applyFilter(filter, input, output, clear)\n    {\n        const renderer = this.renderer;\n        const gl = renderer.gl;\n\n        let shader = filter.glShaders[renderer.CONTEXT_UID];\n\n        // caching..\n        if (!shader)\n        {\n            if (filter.glShaderKey)\n            {\n                shader = this.shaderCache[filter.glShaderKey];\n\n                if (!shader)\n                {\n                    shader = new Shader(this.gl, filter.vertexSrc, filter.fragmentSrc);\n\n                    filter.glShaders[renderer.CONTEXT_UID] = this.shaderCache[filter.glShaderKey] = shader;\n                    this.managedFilters.push(filter);\n                }\n            }\n            else\n            {\n                shader = filter.glShaders[renderer.CONTEXT_UID] = new Shader(this.gl, filter.vertexSrc, filter.fragmentSrc);\n                this.managedFilters.push(filter);\n            }\n\n            // TODO - this only needs to be done once?\n            renderer.bindVao(null);\n\n            this.quad.initVao(shader);\n        }\n\n        renderer.bindVao(this.quad.vao);\n\n        renderer.bindRenderTarget(output);\n\n        if (clear)\n        {\n            gl.disable(gl.SCISSOR_TEST);\n            renderer.clear();// [1, 1, 1, 1]);\n            gl.enable(gl.SCISSOR_TEST);\n        }\n\n        // in case the render target is being masked using a scissor rect\n        if (output === renderer.maskManager.scissorRenderTarget)\n        {\n            renderer.maskManager.pushScissorMask(null, renderer.maskManager.scissorData);\n        }\n\n        renderer.bindShader(shader);\n\n        // free unit 0 for us, doesn't matter what was there\n        // don't try to restore it, because syncUniforms can upload it to another slot\n        // and it'll be a problem\n        const tex = this.renderer.emptyTextures[0];\n\n        this.renderer.boundTextures[0] = tex;\n        // this syncs the SINTJS filters  uniforms with glsl uniforms\n        this.syncUniforms(shader, filter);\n\n        renderer.state.setBlendMode(filter.blendMode);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, input.texture.texture);\n\n        this.quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\n\n        gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\n    }\n\n    /**\n     * Uploads the uniforms of the filter.\n     *\n     * @param {GLShader} shader - The underlying gl shader.\n     * @param {SINT.Filter} filter - The filter we are synchronizing.\n     */\n    syncUniforms(shader, filter)\n    {\n        const uniformData = filter.uniformData;\n        const uniforms = filter.uniforms;\n\n        // 0 is reserved for the SINTJS texture so we start at 1!\n        let textureCount = 1;\n        let currentState;\n\n        // filterArea and filterClamp that are handled by FilterManager directly\n        // they must not appear in uniformData\n\n        if (shader.uniforms.filterArea)\n        {\n            currentState = this.filterData.stack[this.filterData.index];\n\n            const filterArea = shader.uniforms.filterArea;\n\n            filterArea[0] = currentState.renderTarget.size.width;\n            filterArea[1] = currentState.renderTarget.size.height;\n            filterArea[2] = currentState.sourceFrame.x;\n            filterArea[3] = currentState.sourceFrame.y;\n\n            shader.uniforms.filterArea = filterArea;\n        }\n\n        // use this to clamp displaced texture coords so they belong to filterArea\n        // see displacementFilter fragment shader for an example\n        if (shader.uniforms.filterClamp)\n        {\n            currentState = currentState || this.filterData.stack[this.filterData.index];\n\n            const filterClamp = shader.uniforms.filterClamp;\n\n            filterClamp[0] = 0;\n            filterClamp[1] = 0;\n            filterClamp[2] = (currentState.sourceFrame.width - 1) / currentState.renderTarget.size.width;\n            filterClamp[3] = (currentState.sourceFrame.height - 1) / currentState.renderTarget.size.height;\n\n            shader.uniforms.filterClamp = filterClamp;\n        }\n\n        // TODO Caching layer..\n        for (const i in uniformData)\n        {\n            if (!shader.uniforms.data[i])\n            {\n                continue;\n            }\n\n            const type = uniformData[i].type;\n\n            if (type === 'sampler2d' && uniforms[i] !== 0)\n            {\n                if (uniforms[i].baseTexture)\n                {\n                    shader.uniforms[i] = this.renderer.bindTexture(uniforms[i].baseTexture, textureCount);\n                }\n                else\n                {\n                    shader.uniforms[i] = textureCount;\n\n                    // TODO\n                    // this is helpful as renderTargets can also be set.\n                    // Although thinking about it, we could probably\n                    // make the filter texture cache return a RenderTexture\n                    // rather than a renderTarget\n                    const gl = this.renderer.gl;\n\n                    this.renderer.boundTextures[textureCount] = this.renderer.emptyTextures[textureCount];\n                    gl.activeTexture(gl.TEXTURE0 + textureCount);\n\n                    uniforms[i].texture.bind();\n                }\n\n                textureCount++;\n            }\n            else if (type === 'mat3')\n            {\n                // check if its SINTJS matrix..\n                if (uniforms[i].a !== undefined)\n                {\n                    shader.uniforms[i] = uniforms[i].toArray(true);\n                }\n                else\n                {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            }\n            else if (type === 'vec2')\n            {\n                // check if its a point..\n                if (uniforms[i].x !== undefined)\n               {\n                    const val = shader.uniforms[i] || new Float32Array(2);\n\n                    val[0] = uniforms[i].x;\n                    val[1] = uniforms[i].y;\n                    shader.uniforms[i] = val;\n                }\n                else\n               {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            }\n            else if (type === 'float')\n            {\n                if (shader.uniforms.data[i].value !== uniformData[i])\n                {\n                    shader.uniforms[i] = uniforms[i];\n                }\n            }\n            else\n            {\n                shader.uniforms[i] = uniforms[i];\n            }\n        }\n    }\n\n    /**\n     * Gets a render target from the pool, or creates a new one.\n     *\n     * @param {boolean} clear - Should we clear the render texture when we get it?\n     * @param {number} resolution - The resolution of the target.\n     * @return {SINT.RenderTarget} The new render target\n     */\n    getRenderTarget(clear, resolution)\n    {\n        const currentState = this.filterData.stack[this.filterData.index];\n        const renderTarget = this.getPotRenderTarget(\n            this.renderer.gl,\n            currentState.sourceFrame.width,\n            currentState.sourceFrame.height,\n            resolution || currentState.resolution\n        );\n\n        renderTarget.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n        return renderTarget;\n    }\n\n    /**\n     * Returns a render target to the pool.\n     *\n     * @param {SINT.RenderTarget} renderTarget - The render target to return.\n     */\n    returnRenderTarget(renderTarget)\n    {\n        this.freePotRenderTarget(renderTarget);\n    }\n\n    /**\n     * Calculates the mapped matrix.\n     *\n     * TODO playing around here.. this is temporary - (will end up in the shader)\n     * this returns a matrix that will normalise map filter cords in the filter to screen space\n     *\n     * @param {SINT.Matrix} outputMatrix - the matrix to output to.\n     * @return {SINT.Matrix} The mapped matrix.\n     */\n    calculateScreenSpaceMatrix(outputMatrix)\n    {\n        const currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateScreenSpaceMatrix(\n            outputMatrix,\n            currentState.sourceFrame,\n            currentState.renderTarget.size\n        );\n    }\n\n    /**\n     * Multiply vTextureCoord to this matrix to achieve (0,0,1,1) for filterArea\n     *\n     * @param {SINT.Matrix} outputMatrix - The matrix to output to.\n     * @return {SINT.Matrix} The mapped matrix.\n     */\n    calculateNormalizedScreenSpaceMatrix(outputMatrix)\n    {\n        const currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateNormalizedScreenSpaceMatrix(\n            outputMatrix,\n            currentState.sourceFrame,\n            currentState.renderTarget.size,\n            currentState.destinationFrame\n        );\n    }\n\n    /**\n     * This will map the filter coord so that a texture can be used based on the transform of a sprite\n     *\n     * @param {SINT.Matrix} outputMatrix - The matrix to output to.\n     * @param {SINT.Sprite} sprite - The sprite to map to.\n     * @return {SINT.Matrix} The mapped matrix.\n     */\n    calculateSpriteMatrix(outputMatrix, sprite)\n    {\n        const currentState = this.filterData.stack[this.filterData.index];\n\n        return filterTransforms.calculateSpriteMatrix(\n            outputMatrix,\n            currentState.sourceFrame,\n            currentState.renderTarget.size,\n            sprite\n        );\n    }\n\n    /**\n     * Destroys this Filter Manager.\n     *\n     * @param {boolean} [contextLost=false] context was lost, do not free shaders\n     *\n     */\n    destroy(contextLost = false)\n    {\n        const renderer = this.renderer;\n        const filters = this.managedFilters;\n\n        renderer.off('prerender', this.onPrerender, this);\n\n        for (let i = 0; i < filters.length; i++)\n        {\n            if (!contextLost)\n            {\n                filters[i].glShaders[renderer.CONTEXT_UID].destroy();\n            }\n            delete filters[i].glShaders[renderer.CONTEXT_UID];\n        }\n\n        this.shaderCache = {};\n        if (!contextLost)\n        {\n            this.emptyPool();\n        }\n        else\n        {\n            this.pool = {};\n        }\n    }\n\n    /**\n     * Gets a Power-of-Two render texture.\n     *\n     * TODO move to a separate class could be on renderer?\n     * also - could cause issue with multiple contexts?\n     *\n     * @private\n     * @param {WebGLRenderingContext} gl - The webgl rendering context\n     * @param {number} minWidth - The minimum width of the render target.\n     * @param {number} minHeight - The minimum height of the render target.\n     * @param {number} resolution - The resolution of the render target.\n     * @return {SINT.RenderTarget} The new render target.\n     */\n    getPotRenderTarget(gl, minWidth, minHeight, resolution)\n    {\n        let key = screenKey;\n\n        minWidth *= resolution;\n        minHeight *= resolution;\n\n        if (minWidth !== this._screenWidth\n            || minHeight !== this._screenHeight)\n        {\n            // TODO you could return a bigger texture if there is not one in the pool?\n            minWidth = bitTwiddle.nextPow2(minWidth);\n            minHeight = bitTwiddle.nextPow2(minHeight);\n            key = ((minWidth & 0xFFFF) << 16) | (minHeight & 0xFFFF);\n        }\n\n        if (!this.pool[key])\n        {\n            this.pool[key] = [];\n        }\n\n        let renderTarget = this.pool[key].pop();\n\n        // creating render target will cause texture to be bound!\n        if (!renderTarget)\n        {\n            // temporary bypass cache..\n            const tex = this.renderer.boundTextures[0];\n\n            gl.activeTexture(gl.TEXTURE0);\n\n            // internally - this will cause a texture to be bound..\n            renderTarget = new RenderTarget(gl, minWidth, minHeight, null, 1);\n\n            // set the current one back\n            gl.bindTexture(gl.TEXTURE_2D, tex._glTextures[this.renderer.CONTEXT_UID].texture);\n        }\n\n        // manually tweak the resolution...\n        // this will not modify the size of the frame buffer, just its resolution.\n        renderTarget.resolution = resolution;\n        renderTarget.defaultFrame.width = renderTarget.size.width = minWidth / resolution;\n        renderTarget.defaultFrame.height = renderTarget.size.height = minHeight / resolution;\n        renderTarget.filterPoolKey = key;\n\n        return renderTarget;\n    }\n\n    /**\n     * Empties the texture pool.\n     *\n     */\n    emptyPool()\n    {\n        for (const i in this.pool)\n        {\n            const textures = this.pool[i];\n\n            if (textures)\n            {\n                for (let j = 0; j < textures.length; j++)\n                {\n                    textures[j].destroy(true);\n                }\n            }\n        }\n\n        this.pool = {};\n    }\n\n    /**\n     * Frees a render target back into the pool.\n     *\n     * @param {SINT.RenderTarget} renderTarget - The renderTarget to free\n     */\n    freePotRenderTarget(renderTarget)\n    {\n        this.pool[renderTarget.filterPoolKey].push(renderTarget);\n    }\n\n    /**\n     * Called before the renderer starts rendering.\n     *\n     */\n    onPrerender()\n    {\n        if (this._screenWidth !== this.renderer.view.width\n            || this._screenHeight !== this.renderer.view.height)\n        {\n            this._screenWidth = this.renderer.view.width;\n            this._screenHeight = this.renderer.view.height;\n\n            const textures = this.pool[screenKey];\n\n            if (textures)\n            {\n                for (let j = 0; j < textures.length; j++)\n                {\n                    textures[j].destroy(true);\n                }\n            }\n            this.pool[screenKey] = [];\n        }\n    }\n}\n","import glCore from 'vf-gl-core';\nimport createIndicesForQuads from '../../utils/createIndicesForQuads';\n\n/**\n * Helper class to create a quad\n *\n * @class\n * @memberof SINT\n */\nexport default class Quad\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The gl context for this quad to use.\n     * @param {object} state - TODO: Description\n     */\n    constructor(gl, state)\n    {\n        /**\n         * the current WebGL drawing context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        /**\n         * An array of vertices\n         *\n         * @member {Float32Array}\n         */\n        this.vertices = new Float32Array([\n            -1, -1,\n            1, -1,\n            1, 1,\n            -1, 1,\n        ]);\n\n        /**\n         * The Uvs of the quad\n         *\n         * @member {Float32Array}\n         */\n        this.uvs = new Float32Array([\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n        ]);\n\n        this.interleaved = new Float32Array(8 * 2);\n\n        for (let i = 0; i < 4; i++)\n        {\n            this.interleaved[i * 4] = this.vertices[(i * 2)];\n            this.interleaved[(i * 4) + 1] = this.vertices[(i * 2) + 1];\n            this.interleaved[(i * 4) + 2] = this.uvs[i * 2];\n            this.interleaved[(i * 4) + 3] = this.uvs[(i * 2) + 1];\n        }\n\n        /**\n         * An array containing the indices of the vertices\n         *\n         * @member {Uint16Array}\n         */\n        this.indices = createIndicesForQuads(1);\n\n        /**\n         * The vertex buffer\n         *\n         * @member {glCore.GLBuffer}\n         */\n        this.vertexBuffer = glCore.GLBuffer.createVertexBuffer(gl, this.interleaved, gl.STATIC_DRAW);\n\n        /**\n         * The index buffer\n         *\n         * @member {glCore.GLBuffer}\n         */\n        this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n\n        /**\n         * The vertex array object\n         *\n         * @member {glCore.VertexArrayObject}\n         */\n        this.vao = new glCore.VertexArrayObject(gl, state);\n    }\n\n    /**\n     * Initialises the vaos and uses the shader.\n     *\n     * @param {SINT.Shader} shader - the shader to use\n     */\n    initVao(shader)\n    {\n        this.vao.clear()\n        .addIndex(this.indexBuffer)\n        .addAttribute(this.vertexBuffer, shader.attributes.aVertexPosition, this.gl.FLOAT, false, 4 * 4, 0)\n        .addAttribute(this.vertexBuffer, shader.attributes.aTextureCoord, this.gl.FLOAT, false, 4 * 4, 2 * 4);\n    }\n\n    /**\n     * Maps two Rectangle to the quad.\n     *\n     * @param {SINT.Rectangle} targetTextureFrame - the first rectangle\n     * @param {SINT.Rectangle} destinationFrame - the second rectangle\n     * @return {SINT.Quad} Returns itself.\n     */\n    map(targetTextureFrame, destinationFrame)\n    {\n        let x = 0; // destinationFrame.x / targetTextureFrame.width;\n        let y = 0; // destinationFrame.y / targetTextureFrame.height;\n\n        this.uvs[0] = x;\n        this.uvs[1] = y;\n\n        this.uvs[2] = x + (destinationFrame.width / targetTextureFrame.width);\n        this.uvs[3] = y;\n\n        this.uvs[4] = x + (destinationFrame.width / targetTextureFrame.width);\n        this.uvs[5] = y + (destinationFrame.height / targetTextureFrame.height);\n\n        this.uvs[6] = x;\n        this.uvs[7] = y + (destinationFrame.height / targetTextureFrame.height);\n\n        x = destinationFrame.x;\n        y = destinationFrame.y;\n\n        this.vertices[0] = x;\n        this.vertices[1] = y;\n\n        this.vertices[2] = x + destinationFrame.width;\n        this.vertices[3] = y;\n\n        this.vertices[4] = x + destinationFrame.width;\n        this.vertices[5] = y + destinationFrame.height;\n\n        this.vertices[6] = x;\n        this.vertices[7] = y + destinationFrame.height;\n\n        return this;\n    }\n\n    /**\n     * Binds the buffer and uploads the data\n     *\n     * @return {SINT.Quad} Returns itself.\n     */\n    upload()\n    {\n        for (let i = 0; i < 4; i++)\n        {\n            this.interleaved[i * 4] = this.vertices[(i * 2)];\n            this.interleaved[(i * 4) + 1] = this.vertices[(i * 2) + 1];\n            this.interleaved[(i * 4) + 2] = this.uvs[i * 2];\n            this.interleaved[(i * 4) + 3] = this.uvs[(i * 2) + 1];\n        }\n\n        this.vertexBuffer.upload(this.interleaved);\n\n        return this;\n    }\n\n    /**\n     * Removes this quad from WebGL\n     */\n    destroy()\n    {\n        const gl = this.gl;\n\n        gl.deleteBuffer(this.vertexBuffer);\n        gl.deleteBuffer(this.indexBuffer);\n    }\n}\n","import { Matrix } from '../../math';\n\n/**\n * Calculates the mapped matrix\n * @param filterArea {Rectangle} The filter area\n * @param sprite {Sprite} the target sprite\n * @param outputMatrix {Matrix} @alvin\n * @private\n */\n// TODO playing around here.. this is temporary - (will end up in the shader)\n// this returns a matrix that will normalise map filter cords in the filter to screen space\nexport function calculateScreenSpaceMatrix(outputMatrix, filterArea, textureSize)\n{\n     // let worldTransform = sprite.worldTransform.copy(Matrix.TEMP_MATRIX),\n    // let texture = {width:1136, height:700};//sprite._texture.baseTexture;\n\n    // TODO unwrap?\n    const mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    mappedMatrix.scale(textureSize.width, textureSize.height);\n\n    return mappedMatrix;\n}\n\nexport function calculateNormalizedScreenSpaceMatrix(outputMatrix, filterArea, textureSize)\n{\n    const mappedMatrix = outputMatrix.identity();\n\n    mappedMatrix.translate(filterArea.x / textureSize.width, filterArea.y / textureSize.height);\n\n    const translateScaleX = (textureSize.width / filterArea.width);\n    const translateScaleY = (textureSize.height / filterArea.height);\n\n    mappedMatrix.scale(translateScaleX, translateScaleY);\n\n    return mappedMatrix;\n}\n\n// this will map the filter coord so that a texture can be used based on the transform of a sprite\nexport function calculateSpriteMatrix(outputMatrix, filterArea, textureSize, sprite)\n{\n    const orig = sprite._texture.orig;\n    const mappedMatrix = outputMatrix.set(textureSize.width, 0, 0, textureSize.height, filterArea.x, filterArea.y);\n    const worldTransform = sprite.worldTransform.copy(Matrix.TEMP_MATRIX);\n\n    worldTransform.invert();\n    mappedMatrix.prepend(worldTransform);\n    mappedMatrix.scale(1.0 / orig.width, 1.0 / orig.height);\n    mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n\n    return mappedMatrix;\n}\n","import { GLTexture } from 'vf-gl-core';\nimport { WRAP_MODES, SCALE_MODES } from '../const';\nimport RenderTarget from './utils/RenderTarget';\nimport { removeItems } from '../utils';\n\n/**\n * Helper class to create a webGL Texture\n *\n * @class\n * @memberof SINT\n */\nexport default class TextureManager\n{\n    /**\n     * @param {SINT.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    constructor(renderer)\n    {\n        /**\n         * A reference to the current renderer\n         *\n         * @member {SINT.WebGLRenderer}\n         */\n        this.renderer = renderer;\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = renderer.gl;\n\n        /**\n         * Track textures in the renderer so we can no longer listen to them on destruction.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this._managedTextures = [];\n    }\n\n    /**\n     * Binds a texture.\n     *\n     */\n    bindTexture()\n    {\n        // empty\n    }\n\n    /**\n     * Gets a texture.\n     *\n     */\n    getTexture()\n    {\n        // empty\n    }\n\n    /**\n     * Updates and/or Creates a WebGL texture for the renderer's context.\n     *\n     * @param {SINT.BaseTexture|SINT.Texture} texture - the texture to update\n     * @param {number} location - the location the texture will be bound to.\n     * @return {GLTexture} The gl texture.\n     */\n    updateTexture(texture, location)\n    {\n        // assume it good!\n        // texture = texture.baseTexture || texture;\n\n        const gl = this.gl;\n\n        const isRenderTexture = !!texture._glRenderTargets;\n\n        if (!texture.hasLoaded)\n        {\n            return null;\n        }\n\n        const boundTextures = this.renderer.boundTextures;\n\n        // if the location is undefined then this may have been called by n event.\n        // this being the case the texture may already be bound to a slot. As a texture can only be bound once\n        // we need to find its current location if it exists.\n        if (location === undefined)\n        {\n            location = 0;\n\n            // TODO maybe we can use texture bound ids later on...\n            // check if texture is already bound..\n            for (let i = 0; i < boundTextures.length; ++i)\n            {\n                if (boundTextures[i] === texture)\n                {\n                    location = i;\n                    break;\n                }\n            }\n        }\n\n        boundTextures[location] = texture;\n\n        gl.activeTexture(gl.TEXTURE0 + location);\n\n        let glTexture = texture._glTextures[this.renderer.CONTEXT_UID];\n\n        if (!glTexture)\n        {\n            if (isRenderTexture)\n            {\n                const renderTarget = new RenderTarget(\n                    this.gl,\n                    texture.width,\n                    texture.height,\n                    texture.scaleMode,\n                    texture.resolution\n                );\n\n                renderTarget.resize(texture.width, texture.height);\n                texture._glRenderTargets[this.renderer.CONTEXT_UID] = renderTarget;\n                glTexture = renderTarget.texture;\n\n                // framebuffer constructor disactivates current framebuffer\n                if (!this.renderer._activeRenderTarget.root)\n                {\n                    this.renderer._activeRenderTarget.frameBuffer.bind();\n                }\n            }\n            else\n            {\n                glTexture = new GLTexture(this.gl, null, null, null, null);\n                glTexture.bind(location);\n                glTexture.premultiplyAlpha = true;\n                glTexture.upload(texture.source);\n            }\n\n            texture._glTextures[this.renderer.CONTEXT_UID] = glTexture;\n\n            texture.on('update', this.updateTexture, this);\n            texture.on('dispose', this.destroyTexture, this);\n\n            this._managedTextures.push(texture);\n\n            if (texture.isPowerOfTwo)\n            {\n                if (texture.mipmap)\n                {\n                    glTexture.enableMipmap();\n                }\n\n                if (texture.wrapMode === WRAP_MODES.CLAMP)\n                {\n                    glTexture.enableWrapClamp();\n                }\n                else if (texture.wrapMode === WRAP_MODES.REPEAT)\n                {\n                    glTexture.enableWrapRepeat();\n                }\n                else\n                {\n                    glTexture.enableWrapMirrorRepeat();\n                }\n            }\n            else\n            {\n                glTexture.enableWrapClamp();\n            }\n\n            if (texture.scaleMode === SCALE_MODES.NEAREST)\n            {\n                glTexture.enableNearestScaling();\n            }\n            else\n            {\n                glTexture.enableLinearScaling();\n            }\n        }\n        // the texture already exists so we only need to update it..\n        else if (isRenderTexture)\n        {\n            texture._glRenderTargets[this.renderer.CONTEXT_UID].resize(texture.width, texture.height);\n        }\n        else\n        {\n            glTexture.upload(texture.source);\n        }\n\n        return glTexture;\n    }\n\n    /**\n     * Deletes the texture from WebGL\n     *\n     * @param {SINT.BaseTexture|SINT.Texture} texture - the texture to destroy\n     * @param {boolean} [skipRemove=false] - Whether to skip removing the texture from the TextureManager.\n     */\n    destroyTexture(texture, skipRemove)\n    {\n        texture = texture.baseTexture || texture;\n\n        if (!texture.hasLoaded)\n        {\n            return;\n        }\n\n        const uid = this.renderer.CONTEXT_UID;\n        const glTextures = texture._glTextures;\n        const glRenderTargets = texture._glRenderTargets;\n\n        if (glTextures[uid])\n        {\n            this.renderer.unbindTexture(texture);\n\n            glTextures[uid].destroy();\n            texture.off('update', this.updateTexture, this);\n            texture.off('dispose', this.destroyTexture, this);\n\n            delete glTextures[uid];\n\n            if (!skipRemove)\n            {\n                const i = this._managedTextures.indexOf(texture);\n\n                if (i !== -1)\n                {\n                    removeItems(this._managedTextures, i, 1);\n                }\n            }\n        }\n\n        if (glRenderTargets && glRenderTargets[uid])\n        {\n            glRenderTargets[uid].destroy();\n            delete glRenderTargets[uid];\n        }\n    }\n\n    /**\n     * Deletes all the textures from WebGL\n     */\n    removeAll()\n    {\n        // empty all the old gl textures as they are useless now\n        for (let i = 0; i < this._managedTextures.length; ++i)\n        {\n            const texture = this._managedTextures[i];\n\n            if (texture._glTextures[this.renderer.CONTEXT_UID])\n            {\n                delete texture._glTextures[this.renderer.CONTEXT_UID];\n            }\n        }\n    }\n\n    /**\n     * Destroys this manager and removes all its textures\n     */\n    destroy()\n    {\n        // destroy managed textures\n        for (let i = 0; i < this._managedTextures.length; ++i)\n        {\n            const texture = this._managedTextures[i];\n\n            this.destroyTexture(texture, true);\n\n            texture.off('update', this.updateTexture, this);\n            texture.off('dispose', this.destroyTexture, this);\n        }\n\n        this._managedTextures = null;\n    }\n}\n","import { GC_MODES } from '../const';\nimport settings from '../settings';\n\n/**\n * TextureGarbageCollector. This class manages the GPU and ensures that it does not get clogged\n * up with textures that are no longer being used.\n *\n * @class\n * @memberof SINT\n */\nexport default class TextureGarbageCollector\n{\n    /**\n     * @param {SINT.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        this.renderer = renderer;\n\n        this.count = 0;\n        this.checkCount = 0;\n        this.maxIdle = settings.GC_MAX_IDLE;\n        this.checkCountMax = settings.GC_MAX_CHECK_COUNT;\n        this.mode = settings.GC_MODE;\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n    update()\n    {\n        this.count++;\n\n        if (this.mode === GC_MODES.MANUAL)\n        {\n            return;\n        }\n\n        this.checkCount++;\n\n        if (this.checkCount > this.checkCountMax)\n        {\n            this.checkCount = 0;\n\n            this.run();\n        }\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n    run()\n    {\n        const tm = this.renderer.textureManager;\n        const managedTextures =  tm._managedTextures;\n        let wasRemoved = false;\n\n        for (let i = 0; i < managedTextures.length; i++)\n        {\n            const texture = managedTextures[i];\n\n            // only supports non generated textures at the moment!\n            if (!texture._glRenderTargets && this.count - texture.touched > this.maxIdle)\n            {\n                tm.destroyTexture(texture, true);\n                managedTextures[i] = null;\n                wasRemoved = true;\n            }\n        }\n\n        if (wasRemoved)\n        {\n            let j = 0;\n\n            for (let i = 0; i < managedTextures.length; i++)\n            {\n                if (managedTextures[i] !== null)\n                {\n                    managedTextures[j++] = managedTextures[i];\n                }\n            }\n\n            managedTextures.length = j;\n        }\n    }\n\n    /**\n     * Removes all the textures within the specified displayObject and its children from the GPU\n     *\n     * @param {SINT.DisplayObject} displayObject - the displayObject to remove the textures from.\n     */\n    unload(displayObject)\n    {\n        const tm = this.renderer.textureManager;\n\n        // only destroy non generated textures\n        if (displayObject._texture && displayObject._texture._glRenderTargets)\n        {\n            tm.destroyTexture(displayObject._texture, true);\n        }\n\n        for (let i = displayObject.children.length - 1; i >= 0; i--)\n        {\n            this.unload(displayObject.children[i]);\n        }\n    }\n}\n","import mapWebGLBlendModesToPixi from './utils/mapWebGLBlendModesToPixi';\n\nconst BLEND = 0;\nconst DEPTH_TEST = 1;\nconst FRONT_FACE = 2;\nconst CULL_FACE = 3;\nconst BLEND_FUNC = 4;\n\n/**\n * A WebGL state machines\n *\n * @memberof SINT\n * @class\n */\nexport default class WebGLState\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL rendering context\n     */\n    constructor(gl)\n    {\n        /**\n         * The current active state\n         *\n         * @member {Uint8Array}\n         */\n        this.activeState = new Uint8Array(16);\n\n        /**\n         * The default state\n         *\n         * @member {Uint8Array}\n         */\n        this.defaultState = new Uint8Array(16);\n\n        // default blend mode..\n        this.defaultState[0] = 1;\n\n        /**\n         * The current state index in the stack\n         *\n         * @member {number}\n         * @private\n         */\n        this.stackIndex = 0;\n\n        /**\n         * The stack holding all the different states\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.stack = [];\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        this.maxAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n        this.attribState = {\n            tempAttribState: new Array(this.maxAttribs),\n            attribState: new Array(this.maxAttribs),\n        };\n\n        this.blendModes = mapWebGLBlendModesToPixi(gl);\n\n        // check we have vao..\n        this.nativeVaoExtension = (\n            gl.getExtension('OES_vertex_array_object')\n            || gl.getExtension('MOZ_OES_vertex_array_object')\n            || gl.getExtension('WEBKIT_OES_vertex_array_object')\n        );\n    }\n\n    /**\n     * Pushes a new active state\n     */\n    push()\n    {\n        // next state..\n        let state = this.stack[this.stackIndex];\n\n        if (!state)\n        {\n            state = this.stack[this.stackIndex] = new Uint8Array(16);\n        }\n\n        ++this.stackIndex;\n\n        // copy state..\n        // set active state so we can force overrides of gl state\n        for (let i = 0; i < this.activeState.length; i++)\n        {\n            state[i] = this.activeState[i];\n        }\n    }\n\n    /**\n     * Pops a state out\n     */\n    pop()\n    {\n        const state = this.stack[--this.stackIndex];\n\n        this.setState(state);\n    }\n\n    /**\n     * Sets the current state\n     *\n     * @param {*} state - The state to set.\n     */\n    setState(state)\n    {\n        this.setBlend(state[BLEND]);\n        this.setDepthTest(state[DEPTH_TEST]);\n        this.setFrontFace(state[FRONT_FACE]);\n        this.setCullFace(state[CULL_FACE]);\n        this.setBlendMode(state[BLEND_FUNC]);\n    }\n\n    /**\n     * Enables or disabled blending.\n     *\n     * @param {boolean} value - Turn on or off webgl blending.\n     */\n    setBlend(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[BLEND] === value)\n        {\n            return;\n        }\n\n        this.activeState[BLEND] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n    }\n\n    /**\n     * Sets the blend mode.\n     *\n     * @param {number} value - The blend mode to set to.\n     */\n    setBlendMode(value)\n    {\n        if (value === this.activeState[BLEND_FUNC])\n        {\n            return;\n        }\n\n        this.activeState[BLEND_FUNC] = value;\n\n        const mode = this.blendModes[value];\n\n        if (mode.length === 2)\n        {\n            this.gl.blendFunc(mode[0], mode[1]);\n        }\n        else\n        {\n            this.gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n        }\n    }\n\n    /**\n     * Sets whether to enable or disable depth test.\n     *\n     * @param {boolean} value - Turn on or off webgl depth testing.\n     */\n    setDepthTest(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[DEPTH_TEST] === value)\n        {\n            return;\n        }\n\n        this.activeState[DEPTH_TEST] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n    }\n\n    /**\n     * Sets whether to enable or disable cull face.\n     *\n     * @param {boolean} value - Turn on or off webgl cull face.\n     */\n    setCullFace(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[CULL_FACE] === value)\n        {\n            return;\n        }\n\n        this.activeState[CULL_FACE] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n    }\n\n    /**\n     * Sets the gl front face.\n     *\n     * @param {boolean} value - true is clockwise and false is counter-clockwise\n     */\n    setFrontFace(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[FRONT_FACE] === value)\n        {\n            return;\n        }\n\n        this.activeState[FRONT_FACE] = value;\n        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n    }\n\n    /**\n     * Disables all the vaos in use\n     *\n     */\n    resetAttributes()\n    {\n        for (let i = 0; i < this.attribState.tempAttribState.length; i++)\n        {\n            this.attribState.tempAttribState[i] = 0;\n        }\n\n        for (let i = 0; i < this.attribState.attribState.length; i++)\n        {\n            this.attribState.attribState[i] = 0;\n        }\n\n        // im going to assume one is always active for performance reasons.\n        for (let i = 1; i < this.maxAttribs; i++)\n        {\n            this.gl.disableVertexAttribArray(i);\n        }\n    }\n\n    // used\n    /**\n     * Resets all the logic and disables the vaos\n     */\n    resetToDefault()\n    {\n        // unbind any VAO if they exist..\n        if (this.nativeVaoExtension)\n        {\n            this.nativeVaoExtension.bindVertexArrayOES(null);\n        }\n\n        // reset all attributes..\n        this.resetAttributes();\n\n        // set active state so we can force overrides of gl state\n        for (let i = 0; i < this.activeState.length; ++i)\n        {\n            this.activeState[i] = 32;\n        }\n\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        this.setState(this.defaultState);\n    }\n}\n","import { BLEND_MODES } from '../../const';\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof SINT\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nexport default function mapWebGLBlendModesToPixi(gl, array = [])\n{\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD] = [gl.ONE, gl.DST_ALPHA];\n    array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR];\n    array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    // not-premultiplied blend modes\n    array[BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.DST_ALPHA, gl.ONE, gl.DST_ALPHA];\n    array[BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_COLOR];\n\n    return array;\n}\n","import { DRAW_MODES } from '../../const';\n\n/**\n * Generic Mask Stack data structure.\n *\n * @memberof SINT\n * @function mapWebGLDrawModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n * @param {object} [object={}] - The object to map into\n * @return {object} The mapped draw modes.\n */\nexport default function mapWebGLDrawModesToPixi(gl, object = {})\n{\n    object[DRAW_MODES.POINTS] = gl.POINTS;\n    object[DRAW_MODES.LINES] = gl.LINES;\n    object[DRAW_MODES.LINE_LOOP] = gl.LINE_LOOP;\n    object[DRAW_MODES.LINE_STRIP] = gl.LINE_STRIP;\n    object[DRAW_MODES.TRIANGLES] = gl.TRIANGLES;\n    object[DRAW_MODES.TRIANGLE_STRIP] = gl.TRIANGLE_STRIP;\n    object[DRAW_MODES.TRIANGLE_FAN] = gl.TRIANGLE_FAN;\n\n    return object;\n}\n","export default function validateContext(gl)\n{\n    const attributes = gl.getContextAttributes();\n\n    // this is going to be fairly simple for now.. but at least we have room to grow!\n    if (!attributes.stencil)\n    {\n        /* eslint-disable no-console */\n        console.warn('Provided WebGL context does not have a stencil buffer, masks may not render correctly');\n        /* eslint-enable no-console */\n    }\n}\n","import Shader from '../Shader';\n// import { readFileSync } from 'fs';\nimport vt from './texture.vert';\n\nimport { join } from 'path';\n\n\n\nconst fragTemplate = [\n    'varying vec2 vTextureCoord;',\n    'varying vec4 vColor;',\n    'varying float vTextureId;',\n    'uniform sampler2D uSamplers[%count%];',\n\n    'void main(void){',\n    'vec4 color;',\n    'float textureId = floor(vTextureId+0.5);',\n    '%forloop%',\n    'gl_FragColor = color * vColor;',\n    '}',\n].join('\\n');\n\nexport default function generateMultiTextureShader(gl, maxTextures)\n{\n    // const vertexSrc = readFileSync(join(__dirname, './texture.vert'), 'utf8');\n    const vertexSrc = vt; // TY change for load shader\n    let fragmentSrc = fragTemplate;\n\n    fragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures);\n    fragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\n\n    const shader = new Shader(gl, vertexSrc, fragmentSrc);\n\n    const sampleValues = [];\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        sampleValues[i] = i;\n    }\n\n    shader.bind();\n    shader.uniforms.uSamplers = sampleValues;\n\n    return shader;\n}\n\nfunction generateSampleSrc(maxTextures)\n{\n    let src = '';\n\n    src += '\\n';\n    src += '\\n';\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxTextures - 1)\n        {\n            src += `if(textureId == ${i}.0)`;\n        }\n\n        src += '\\n{';\n        src += `\\n\\tcolor = texture2D(uSamplers[${i}], vTextureCoord);`;\n        src += '\\n}';\n    }\n\n    src += '\\n';\n    src += '\\n';\n\n    return src;\n}\n","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aColor;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n    vTextureCoord = aTextureCoord;\\n    vTextureId = aTextureId;\\n    vColor = aColor;\\n}\\n\"","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import glCore from 'vf-gl-core';\n\nconst fragTemplate = [\n    'precision mediump float;',\n    'void main(void){',\n    'float test = 0.1;',\n    '%forloop%',\n    'gl_FragColor = vec4(0.0);',\n    '}',\n].join('\\n');\n\nexport default function checkMaxIfStatmentsInShader(maxIfs, gl)\n{\n    const createTempContext = !gl;\n\n    // @if DEBUG\n    if (maxIfs === 0)\n    {\n        throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\n    }\n    // @endif\n\n    if (createTempContext)\n    {\n        const tinyCanvas = document.createElement('canvas');\n\n        tinyCanvas.width = 1;\n        tinyCanvas.height = 1;\n\n        gl = glCore.createContext(tinyCanvas);\n    }\n\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    while (true) // eslint-disable-line no-constant-condition\n    {\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n\n        gl.shaderSource(shader, fragmentSrc);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        {\n            maxIfs = (maxIfs / 2) | 0;\n        }\n        else\n        {\n            // valid!\n            break;\n        }\n    }\n\n    if (createTempContext)\n    {\n        // get rid of context\n        if (gl.getExtension('WEBGL_lose_context'))\n        {\n            gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n    }\n\n    return maxIfs;\n}\n\nfunction generateIfTestSrc(maxIfs)\n{\n    let src = '';\n\n    for (let i = 0; i < maxIfs; ++i)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1)\n        {\n            src += `if(test == ${i}.0){}`;\n        }\n    }\n\n    return src;\n}\n","/**\n * @class\n * @memberof SINT\n */\nexport default class Buffer\n{\n    /**\n     * @param {number} size - The size of the buffer in bytes.\n     */\n    constructor(size)\n    {\n        this.vertices = new ArrayBuffer(size);\n\n        /**\n         * View on the vertices as a Float32Array for positions\n         *\n         * @member {Float32Array}\n         */\n        this.float32View = new Float32Array(this.vertices);\n\n        /**\n         * View on the vertices as a Uint32Array for uvs\n         *\n         * @member {Float32Array}\n         */\n        this.uint32View = new Uint32Array(this.vertices);\n    }\n\n    /**\n     * Destroys the buffer.\n     *\n     */\n    destroy()\n    {\n        this.vertices = null;\n        this.positions = null;\n        this.uvs = null;\n        this.colors = null;\n    }\n}\n","import Ticker from './Ticker';\n\n/**\n * The shared ticker instance used by {@link SINT.extras.AnimatedSprite}.\n * and by {@link SINT.interaction.InteractionManager}.\n * The property {@link SINT.ticker.Ticker#autoStart} is set to `true`\n * for this instance. Please follow the examples for usage, including\n * how to opt-out of auto-starting the shared ticker.\n *\n * @example\n * let ticker = SINT.ticker.shared;\n * // Set this to prevent starting this ticker when listeners are added.\n * // By default this is true only for the SINT.ticker.shared instance.\n * ticker.autoStart = false;\n * // FYI, call this to ensure the ticker is stopped. It should be stopped\n * // if you have not attempted to render anything yet.\n * ticker.stop();\n * // Call this when you are ready for a running shared ticker.\n * ticker.start();\n *\n * @example\n * // You may use the shared ticker to render...\n * let renderer = SINT.autoDetectRenderer(800, 600);\n * let stage = new SINT.Container();\n * let interactionManager = SINT.interaction.InteractionManager(renderer);\n * document.body.appendChild(renderer.view);\n * ticker.add(function (time) {\n *     renderer.render(stage);\n * });\n *\n * @example\n * // Or you can just update it manually.\n * ticker.autoStart = false;\n * ticker.stop();\n * function animate(time) {\n *     ticker.update(time);\n *     renderer.render(stage);\n *     requestAnimationFrame(animate);\n * }\n * animate(performance.now());\n *\n * @type {SINT.ticker.Ticker}\n * @memberof SINT.ticker\n */\nconst shared = new Ticker();\n\nshared.autoStart = true;\nshared.destroy = () =>\n{\n\t// protect destroying shared ticker\n\t// this is used by other internal systems\n\t// like AnimatedSprite and InteractionManager\n};\n\n/**\n * This namespace contains an API for interacting with SINT's internal global update loop.\n *\n * This ticker is used for rendering, {@link SINT.extras.AnimatedSprite AnimatedSprite},\n * {@link SINT.interaction.InteractionManager InteractionManager} and many other time-based SINT systems.\n * @example\n * const ticker = new SINT.ticker.Ticker();\n * ticker.stop();\n * ticker.add((deltaTime) => {\n *   // do something every frame\n * });\n * ticker.start();\n * @namespace SINT.ticker\n */\nexport { shared, Ticker };\n","import settings from '../settings';\nimport { UPDATE_PRIORITY } from '../const';\nimport TickerListener from './TickerListener';\n\n/**\n * A Ticker class that runs an update loop that other objects listen to.\n * This class is composed around listeners\n * meant for execution on the next requested animation frame.\n * Animation frames are requested only when necessary,\n * e.g. When the ticker is started and the emitter has listeners.\n *\n * @class\n * @memberof SINT.ticker\n */\nexport default class Ticker\n{\n    /**\n     *\n     */\n    constructor()\n    {\n        /**\n         * The first listener. All new listeners added are chained on this.\n         * @private\n         * @type {TickerListener}\n         */\n        this._head = new TickerListener(null, null, Infinity);\n\n        /**\n         * Internal current frame request ID\n         * @private\n         */\n        this._requestId = null;\n\n        /**\n         * Internal value managed by minFPS property setter and getter.\n         * This is the maximum allowed milliseconds between updates.\n         * @private\n         */\n        this._maxElapsedMS = 100;\n\n        /**\n         * Whether or not this ticker should invoke the method\n         * {@link SINT.ticker.Ticker#start} automatically\n         * when a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.autoStart = false;\n\n        /**\n         * Scalar time value from last frame to this frame.\n         * This value is capped by setting {@link SINT.ticker.Ticker#minFPS}\n         * and is scaled with {@link SINT.ticker.Ticker#speed}.\n         * **Note:** The cap may be exceeded by scaling.\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.deltaTime = 1;\n\n        /**\n         * Time elapsed in milliseconds from last frame to this frame.\n         * Opposed to what the scalar {@link SINT.ticker.Ticker#deltaTime}\n         * is based, this value is neither capped nor scaled.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         * Defaults to target frame time\n         *\n         * @member {number}\n         * @default 16.66\n         */\n        this.elapsedMS = 1 / settings.TARGET_FPMS;\n\n        /**\n         * The last time {@link SINT.ticker.Ticker#update} was invoked.\n         * This value is also reset internally outside of invoking\n         * update, but only when a new animation frame is requested.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         *\n         * @member {number}\n         * @default -1\n         */\n        this.lastTime = -1;\n\n        /**\n         * Factor of current {@link SINT.ticker.Ticker#deltaTime}.\n         * @example\n         * // Scales ticker.deltaTime to what would be\n         * // the equivalent of approximately 120 FPS\n         * ticker.speed = 2;\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.speed = 1;\n\n        /**\n         * Whether or not this ticker has been started.\n         * `true` if {@link SINT.ticker.Ticker#start} has been called.\n         * `false` if {@link SINT.ticker.Ticker#stop} has been called.\n         * While `false`, this value may change to `true` in the\n         * event of {@link SINT.ticker.Ticker#autoStart} being `true`\n         * and a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.started = false;\n\n        /**\n         * Internal tick method bound to ticker instance.\n         * This is because in early 2015, Function.bind\n         * is still 60% slower in high performance scenarios.\n         * Also separating frame requests from update method\n         * so listeners may be called at any time and with\n         * any animation API, just invoke ticker.update(time).\n         *\n         * @private\n         * @param {number} time - Time since last tick.\n         */\n        this._tick = (time) =>\n        {\n            this._requestId = null;\n\n            if (this.started)\n            {\n                // Invoke listeners now\n                this.update(time);\n                // Listener side effects may have modified ticker state.\n                if (this.started && this._requestId === null && this._head.next)\n                {\n                    this._requestId = requestAnimationFrame(this._tick);\n                }\n            }\n        };\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If a frame has not already been requested, and if the internal\n     * emitter has listeners, a new frame is requested.\n     *\n     * @private\n     */\n    _requestIfNeeded()\n    {\n        if (this._requestId === null && this._head.next)\n        {\n            // ensure callbacks get correct delta\n            this.lastTime = performance.now();\n            this._requestId = requestAnimationFrame(this._tick);\n        }\n    }\n\n    /**\n     * Conditionally cancels a pending animation frame.\n     *\n     * @private\n     */\n    _cancelIfNeeded()\n    {\n        if (this._requestId !== null)\n        {\n            cancelAnimationFrame(this._requestId);\n            this._requestId = null;\n        }\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If the ticker has been started it checks if a frame has not already\n     * been requested, and if the internal emitter has listeners. If these\n     * conditions are met, a new frame is requested. If the ticker has not\n     * been started, but autoStart is `true`, then the ticker starts now,\n     * and continues with the previous conditions to request a new frame.\n     *\n     * @private\n     */\n    _startIfPossible()\n    {\n        if (this.started)\n        {\n            this._requestIfNeeded();\n        }\n        else if (this.autoStart)\n        {\n            this.start();\n        }\n    }\n\n    /**\n     * Register a handler for tick events. Calls continuously unless\n     * it is removed or the ticker is stopped.\n     *\n     * @param {Function} fn - The listener function to be added for updates\n     * @param {Function} [context] - The listener context\n     * @param {number} [priority=SINT.UPDATE_PRIORITY.NORMAL] - The priority for emitting\n     * @returns {SINT.ticker.Ticker} This instance of a ticker\n     */\n    add(fn, context, priority = UPDATE_PRIORITY.NORMAL)\n    {\n        return this._addListener(new TickerListener(fn, context, priority));\n    }\n\n    /**\n     * Add a handler for the tick event which is only execute once.\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {Function} [context] - The listener context\n     * @param {number} [priority=SINT.UPDATE_PRIORITY.NORMAL] - The priority for emitting\n     * @returns {SINT.ticker.Ticker} This instance of a ticker\n     */\n    addOnce(fn, context, priority = UPDATE_PRIORITY.NORMAL)\n    {\n        return this._addListener(new TickerListener(fn, context, priority, true));\n    }\n\n    /**\n     * Internally adds the event handler so that it can be sorted by priority.\n     * Priority allows certain handler (user, AnimatedSprite, Interaction) to be run\n     * before the rendering.\n     *\n     * @private\n     * @param {TickerListener} listener - Current listener being added.\n     * @returns {SINT.ticker.Ticker} This instance of a ticker\n     */\n    _addListener(listener)\n    {\n        // For attaching to head\n        let current = this._head.next;\n        let previous = this._head;\n\n        // Add the first item\n        if (!current)\n        {\n            listener.connect(previous);\n        }\n        else\n        {\n            // Go from highest to lowest priority\n            while (current)\n            {\n                if (listener.priority > current.priority)\n                {\n                    listener.connect(previous);\n                    break;\n                }\n                previous = current;\n                current = current.next;\n            }\n\n            // Not yet connected\n            if (!listener.previous)\n            {\n                listener.connect(previous);\n            }\n        }\n\n        this._startIfPossible();\n\n        return this;\n    }\n\n    /**\n     * Removes any handlers matching the function and context parameters.\n     * If no handlers are left after removing, then it cancels the animation frame.\n     *\n     * @param {Function} fn - The listener function to be removed\n     * @param {Function} [context] - The listener context to be removed\n     * @returns {SINT.ticker.Ticker} This instance of a ticker\n     */\n    remove(fn, context)\n    {\n        let listener = this._head.next;\n\n        while (listener)\n        {\n            // We found a match, lets remove it\n            // no break to delete all possible matches\n            // incase a listener was added 2+ times\n            if (listener.match(fn, context))\n            {\n                listener = listener.destroy();\n            }\n            else\n            {\n                listener = listener.next;\n            }\n        }\n\n        if (!this._head.next)\n        {\n            this._cancelIfNeeded();\n        }\n\n        return this;\n    }\n\n    /**\n     * Starts the ticker. If the ticker has listeners\n     * a new animation frame is requested at this point.\n     */\n    start()\n    {\n        if (!this.started)\n        {\n            this.started = true;\n            this._requestIfNeeded();\n        }\n    }\n\n    /**\n     * Stops the ticker. If the ticker has requested\n     * an animation frame it is canceled at this point.\n     */\n    stop()\n    {\n        if (this.started)\n        {\n            this.started = false;\n            this._cancelIfNeeded();\n        }\n    }\n\n    /**\n     * Destroy the ticker and don't use after this. Calling\n     * this method removes all references to internal events.\n     */\n    destroy()\n    {\n        this.stop();\n\n        let listener = this._head.next;\n\n        while (listener)\n        {\n            listener = listener.destroy(true);\n        }\n\n        this._head.destroy();\n        this._head = null;\n    }\n\n    /**\n     * Triggers an update. An update entails setting the\n     * current {@link SINT.ticker.Ticker#elapsedMS},\n     * the current {@link SINT.ticker.Ticker#deltaTime},\n     * invoking all listeners with current deltaTime,\n     * and then finally setting {@link SINT.ticker.Ticker#lastTime}\n     * with the value of currentTime that was provided.\n     * This method will be called automatically by animation\n     * frame callbacks if the ticker instance has been started\n     * and listeners are added.\n     *\n     * @param {number} [currentTime=performance.now()] - the current time of execution\n     */\n    update(currentTime = performance.now())\n    {\n        let elapsedMS;\n\n        // If the difference in time is zero or negative, we ignore most of the work done here.\n        // If there is no valid difference, then should be no reason to let anyone know about it.\n        // A zero delta, is exactly that, nothing should update.\n        //\n        // The difference in time can be negative, and no this does not mean time traveling.\n        // This can be the result of a race condition between when an animation frame is requested\n        // on the current JavaScript engine event loop, and when the ticker's start method is invoked\n        // (which invokes the internal _requestIfNeeded method). If a frame is requested before\n        // _requestIfNeeded is invoked, then the callback for the animation frame the ticker requests,\n        // can receive a time argument that can be less than the lastTime value that was set within\n        // _requestIfNeeded. This difference is in microseconds, but this is enough to cause problems.\n        //\n        // This check covers this browser engine timing issue, as well as if consumers pass an invalid\n        // currentTime value. This may happen if consumers opt-out of the autoStart, and update themselves.\n\n        if (currentTime > this.lastTime)\n        {\n            // Save uncapped elapsedMS for measurement\n            elapsedMS = this.elapsedMS = currentTime - this.lastTime;\n\n            // cap the milliseconds elapsed used for deltaTime\n            if (elapsedMS > this._maxElapsedMS)\n            {\n                elapsedMS = this._maxElapsedMS;\n            }\n\n            this.deltaTime = elapsedMS * settings.TARGET_FPMS * this.speed;\n\n            // Cache a local reference, in-case ticker is destroyed\n            // during the emit, we can still check for head.next\n            const head = this._head;\n\n            // Invoke listeners added to internal emitter\n            let listener = head.next;\n\n            while (listener)\n            {\n                listener = listener.emit(this.deltaTime);\n            }\n\n            if (!head.next)\n            {\n                this._cancelIfNeeded();\n            }\n        }\n        else\n        {\n            this.deltaTime = this.elapsedMS = 0;\n        }\n\n        this.lastTime = currentTime;\n    }\n\n    /**\n     * The frames per second at which this ticker is running.\n     * The default is approximately 60 in most modern browsers.\n     * **Note:** This does not factor in the value of\n     * {@link SINT.ticker.Ticker#speed}, which is specific\n     * to scaling {@link SINT.ticker.Ticker#deltaTime}.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get FPS()\n    {\n        return 1000 / this.elapsedMS;\n    }\n\n    /**\n     * Manages the maximum amount of milliseconds allowed to\n     * elapse between invoking {@link SINT.ticker.Ticker#update}.\n     * This value is used to cap {@link SINT.ticker.Ticker#deltaTime},\n     * but does not effect the measured value of {@link SINT.ticker.Ticker#FPS}.\n     * When setting this property it is clamped to a value between\n     * `0` and `SINT.settings.TARGET_FPMS * 1000`.\n     *\n     * @member {number}\n     * @default 10\n     */\n    get minFPS()\n    {\n        return 1000 / this._maxElapsedMS;\n    }\n\n    set minFPS(fps) // eslint-disable-line require-jsdoc\n    {\n        // Clamp: 0 to TARGET_FPMS\n        const minFPMS = Math.min(Math.max(0, fps) / 1000, settings.TARGET_FPMS);\n\n        this._maxElapsedMS = 1 / minFPMS;\n    }\n}\n","/**\n * Internal class for handling the priority sorting of ticker handlers.\n *\n * @private\n * @class\n * @memberof SINT.ticker\n */\nexport default class TickerListener\n{\n    /**\n     * Constructor\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {Function} [context=null] - The listener context\n     * @param {number} [priority=0] - The priority for emitting\n     * @param {boolean} [once=false] - If the handler should fire once\n     */\n    constructor(fn, context = null, priority = 0, once = false)\n    {\n        /**\n         * The handler function to execute.\n         * @member {Function}\n         */\n        this.fn = fn;\n\n        /**\n         * The calling to execute.\n         * @member {Function}\n         */\n        this.context = context;\n\n        /**\n         * The current priority.\n         * @member {number}\n         */\n        this.priority = priority;\n\n        /**\n         * If this should only execute once.\n         * @member {boolean}\n         */\n        this.once = once;\n\n        /**\n         * The next item in chain.\n         * @member {TickerListener}\n         */\n        this.next = null;\n\n        /**\n         * The previous item in chain.\n         * @member {TickerListener}\n         */\n        this.previous = null;\n\n        /**\n         * `true` if this listener has been destroyed already.\n         * @member {boolean}\n         * @private\n         */\n        this._destroyed = false;\n    }\n\n    /**\n     * Simple compare function to figure out if a function and context match.\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {Function} context - The listener context\n     * @return {boolean} `true` if the listener match the arguments\n     */\n    match(fn, context)\n    {\n        context = context || null;\n\n        return this.fn === fn && this.context === context;\n    }\n\n    /**\n     * Emit by calling the current function.\n     * @param {number} deltaTime - time since the last emit.\n     * @return {TickerListener} Next ticker\n     */\n    emit(deltaTime)\n    {\n        if (this.fn)\n        {\n            if (this.context)\n            {\n                this.fn.call(this.context, deltaTime);\n            }\n            else\n            {\n                this.fn(deltaTime);\n            }\n        }\n\n        const redirect = this.next;\n\n        if (this.once)\n        {\n            this.destroy(true);\n        }\n\n        // Soft-destroying should remove\n        // the next reference\n        if (this._destroyed)\n        {\n            this.next = null;\n        }\n\n        return redirect;\n    }\n\n    /**\n     * Connect to the list.\n     * @param {TickerListener} previous - Input node, previous listener\n     */\n    connect(previous)\n    {\n        this.previous = previous;\n        if (previous.next)\n        {\n            previous.next.previous = this;\n        }\n        this.next = previous.next;\n        previous.next = this;\n    }\n\n    /**\n     * Destroy and don't use after this.\n     * @param {boolean} [hard = false] `true` to remove the `next` reference, this\n     *        is considered a hard destroy. Soft destroy maintains the next reference.\n     * @return {TickerListener} The listener to redirect while emitting or removing.\n     */\n    destroy(hard = false)\n    {\n        this._destroyed = true;\n        this.fn = null;\n        this.context = null;\n\n        // Disconnect, hook up next and previous\n        if (this.previous)\n        {\n            this.previous.next = this.next;\n        }\n\n        if (this.next)\n        {\n            this.next.previous = this.previous;\n        }\n\n        // Redirect to the next item\n        const redirect = this.next;\n\n        // Remove references\n        this.next = hard ? null : redirect;\n        this.previous = null;\n\n        return redirect;\n    }\n}\n"],"sourceRoot":""}